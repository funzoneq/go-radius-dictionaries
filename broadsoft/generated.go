// Code generated by radius-dict-gen. DO NOT EDIT.

package broadsoft

import (
	"layeh.com/radius"
	"layeh.com/radius/rfc2865"
)

const (
	_BroadSoft_VendorID = 6431
)

func _BroadSoft_AddVendor(p *radius.Packet, typ byte, attr radius.Attribute) (err error) {
	var vsa radius.Attribute
	vendor := make(radius.Attribute, 2+len(attr))
	vendor[0] = typ
	vendor[1] = byte(len(vendor))
	copy(vendor[2:], attr)
	vsa, err = radius.NewVendorSpecific(_BroadSoft_VendorID, vendor)
	if err != nil {
		return
	}
	p.Add(rfc2865.VendorSpecific_Type, vsa)
	return
}

func _BroadSoft_GetsVendor(p *radius.Packet, typ byte) (values []radius.Attribute) {
	for _, avp := range p.Attributes {
		if avp.Type != rfc2865.VendorSpecific_Type {
			continue
		}
		attr := avp.Attribute
		vendorID, vsa, err := radius.VendorSpecific(attr)
		if err != nil || vendorID != _BroadSoft_VendorID {
			continue
		}
		for len(vsa) >= 3 {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				break
			}
			if vsaTyp == typ {
				values = append(values, vsa[2:int(vsaLen)])
			}
			vsa = vsa[int(vsaLen):]
		}
	}
	return
}

func _BroadSoft_LookupVendor(p *radius.Packet, typ byte) (attr radius.Attribute, ok bool) {
	for _, avp := range p.Attributes {
		if avp.Type != rfc2865.VendorSpecific_Type {
			continue
		}
		attr := avp.Attribute
		vendorID, vsa, err := radius.VendorSpecific(attr)
		if err != nil || vendorID != _BroadSoft_VendorID {
			continue
		}
		for len(vsa) >= 3 {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				break
			}
			if vsaTyp == typ {
				return vsa[2:int(vsaLen)], true
			}
			vsa = vsa[int(vsaLen):]
		}
	}
	return
}

func _BroadSoft_SetVendor(p *radius.Packet, typ byte, attr radius.Attribute) (err error) {
	for i := 0; i < len(p.Attributes); {
		avp := p.Attributes[i]
		if avp.Type != rfc2865.VendorSpecific_Type {
			i++
			continue
		}
		vendorID, vsa, err := radius.VendorSpecific(avp.Attribute)
		if err != nil || vendorID != _BroadSoft_VendorID {
			i++
			continue
		}
		for j := 0; len(vsa[j:]) >= 3; {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa[j:]) || vsaLen < 3 {
				i++
				break
			}
			if vsaTyp == typ {
				vsa = append(vsa[:j], vsa[j+int(vsaLen):]...)
			}
			j += int(vsaLen)
		}
		if len(vsa) > 0 {
			copy(avp.Attribute[4:], vsa)
			i++
		} else {
			p.Attributes = append(p.Attributes[:i], p.Attributes[i+i:]...)
		}
	}
	return _BroadSoft_AddVendor(p, typ, attr)
}

func _BroadSoft_DelVendor(p *radius.Packet, typ byte) {
vsaLoop:
	for i := 0; i < len(p.Attributes); {
		avp := p.Attributes[i]
		if avp.Type != rfc2865.VendorSpecific_Type {
			i++
			continue
		}
		vendorID, vsa, err := radius.VendorSpecific(avp.Attribute)
		if err != nil || vendorID != _BroadSoft_VendorID {
			i++
			continue
		}
		offset := 0
		for len(vsa[offset:]) >= 3 {
			vsaTyp, vsaLen := vsa[offset], vsa[offset+1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				continue vsaLoop
			}
			if vsaTyp == typ {
				copy(vsa[offset:], vsa[offset+int(vsaLen):])
				vsa = vsa[:len(vsa)-int(vsaLen)]
			} else {
				offset += int(vsaLen)
			}
		}
		if offset == 0 {
			p.Attributes = append(p.Attributes[:i], p.Attributes[i+1:]...)
		} else {
			i++
		}
	}
	return
}

func BWASRecordID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 1, a)
}

func BWASRecordID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 1, a)
}

func BWASRecordID_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRecordID_Lookup(p)
	return
}

func BWASRecordID_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRecordID_LookupString(p)
	return
}

func BWASRecordID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 1) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRecordID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 1) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRecordID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 1)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRecordID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 1)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRecordID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 1, a)
}

func BWASRecordID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 1, a)
}

func BWASRecordID_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 1)
}

func BWASServiceProvider_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 2, a)
}

func BWASServiceProvider_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 2, a)
}

func BWASServiceProvider_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASServiceProvider_Lookup(p)
	return
}

func BWASServiceProvider_GetString(p *radius.Packet) (value string) {
	value, _ = BWASServiceProvider_LookupString(p)
	return
}

func BWASServiceProvider_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 2) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASServiceProvider_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 2) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASServiceProvider_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 2)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASServiceProvider_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 2)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASServiceProvider_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 2, a)
}

func BWASServiceProvider_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 2, a)
}

func BWASServiceProvider_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 2)
}

func BWASType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 3, a)
}

func BWASType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 3, a)
}

func BWASType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASType_Lookup(p)
	return
}

func BWASType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASType_LookupString(p)
	return
}

func BWASType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 3) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 3) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 3)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 3)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 3, a)
}

func BWASType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 3, a)
}

func BWASType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 3)
}

func BWASUserNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 4, a)
}

func BWASUserNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 4, a)
}

func BWASUserNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASUserNumber_Lookup(p)
	return
}

func BWASUserNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASUserNumber_LookupString(p)
	return
}

func BWASUserNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 4) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASUserNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 4) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASUserNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 4)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASUserNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 4)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASUserNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 4, a)
}

func BWASUserNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 4, a)
}

func BWASUserNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 4)
}

func BWASGroupNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 5, a)
}

func BWASGroupNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 5, a)
}

func BWASGroupNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASGroupNumber_Lookup(p)
	return
}

func BWASGroupNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASGroupNumber_LookupString(p)
	return
}

func BWASGroupNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 5) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASGroupNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 5) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASGroupNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 5)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASGroupNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 5)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASGroupNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 5, a)
}

func BWASGroupNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 5, a)
}

func BWASGroupNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 5)
}

func BWASDirection_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 6, a)
}

func BWASDirection_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 6, a)
}

func BWASDirection_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDirection_Lookup(p)
	return
}

func BWASDirection_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDirection_LookupString(p)
	return
}

func BWASDirection_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 6) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirection_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 6) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirection_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 6)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDirection_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 6)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDirection_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 6, a)
}

func BWASDirection_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 6, a)
}

func BWASDirection_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 6)
}

func BWASCallingNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 7, a)
}

func BWASCallingNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 7, a)
}

func BWASCallingNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallingNumber_Lookup(p)
	return
}

func BWASCallingNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallingNumber_LookupString(p)
	return
}

func BWASCallingNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 7) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 7) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 7)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallingNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 7)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallingNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 7, a)
}

func BWASCallingNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 7, a)
}

func BWASCallingNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 7)
}

func BWASCallingPresentationIndic_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 8, a)
}

func BWASCallingPresentationIndic_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 8, a)
}

func BWASCallingPresentationIndic_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallingPresentationIndic_Lookup(p)
	return
}

func BWASCallingPresentationIndic_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallingPresentationIndic_LookupString(p)
	return
}

func BWASCallingPresentationIndic_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 8) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingPresentationIndic_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 8) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingPresentationIndic_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 8)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallingPresentationIndic_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 8)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallingPresentationIndic_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 8, a)
}

func BWASCallingPresentationIndic_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 8, a)
}

func BWASCallingPresentationIndic_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 8)
}

func BWASCalledNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 9, a)
}

func BWASCalledNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 9, a)
}

func BWASCalledNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCalledNumber_Lookup(p)
	return
}

func BWASCalledNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCalledNumber_LookupString(p)
	return
}

func BWASCalledNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 9) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 9) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 9)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCalledNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 9)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCalledNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 9, a)
}

func BWASCalledNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 9, a)
}

func BWASCalledNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 9)
}

func BWASStartTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 10, a)
}

func BWASStartTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 10, a)
}

func BWASStartTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASStartTime_Lookup(p)
	return
}

func BWASStartTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASStartTime_LookupString(p)
	return
}

func BWASStartTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 10) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASStartTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 10) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASStartTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 10)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASStartTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 10)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASStartTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 10, a)
}

func BWASStartTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 10, a)
}

func BWASStartTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 10)
}

func BWASUserTimezone_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 11, a)
}

func BWASUserTimezone_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 11, a)
}

func BWASUserTimezone_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASUserTimezone_Lookup(p)
	return
}

func BWASUserTimezone_GetString(p *radius.Packet) (value string) {
	value, _ = BWASUserTimezone_LookupString(p)
	return
}

func BWASUserTimezone_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 11) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASUserTimezone_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 11) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASUserTimezone_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 11)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASUserTimezone_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 11)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASUserTimezone_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 11, a)
}

func BWASUserTimezone_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 11, a)
}

func BWASUserTimezone_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 11)
}

func BWASAnswerIndic_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 12, a)
}

func BWASAnswerIndic_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 12, a)
}

func BWASAnswerIndic_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAnswerIndic_Lookup(p)
	return
}

func BWASAnswerIndic_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAnswerIndic_LookupString(p)
	return
}

func BWASAnswerIndic_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 12) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAnswerIndic_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 12) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAnswerIndic_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 12)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAnswerIndic_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 12)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAnswerIndic_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 12, a)
}

func BWASAnswerIndic_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 12, a)
}

func BWASAnswerIndic_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 12)
}

func BWASAnswerTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 13, a)
}

func BWASAnswerTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 13, a)
}

func BWASAnswerTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAnswerTime_Lookup(p)
	return
}

func BWASAnswerTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAnswerTime_LookupString(p)
	return
}

func BWASAnswerTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 13) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAnswerTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 13) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAnswerTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 13)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAnswerTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 13)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAnswerTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 13, a)
}

func BWASAnswerTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 13, a)
}

func BWASAnswerTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 13)
}

func BWASReleaseTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 14, a)
}

func BWASReleaseTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 14, a)
}

func BWASReleaseTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReleaseTime_Lookup(p)
	return
}

func BWASReleaseTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReleaseTime_LookupString(p)
	return
}

func BWASReleaseTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 14) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReleaseTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 14) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReleaseTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 14)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReleaseTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 14)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReleaseTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 14, a)
}

func BWASReleaseTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 14, a)
}

func BWASReleaseTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 14)
}

func BWASTerminationCause_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 15, a)
}

func BWASTerminationCause_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 15, a)
}

func BWASTerminationCause_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTerminationCause_Lookup(p)
	return
}

func BWASTerminationCause_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTerminationCause_LookupString(p)
	return
}

func BWASTerminationCause_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 15) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTerminationCause_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 15) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTerminationCause_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 15)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTerminationCause_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 15)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTerminationCause_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 15, a)
}

func BWASTerminationCause_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 15, a)
}

func BWASTerminationCause_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 15)
}

func BWASNetworkType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 16, a)
}

func BWASNetworkType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 16, a)
}

func BWASNetworkType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNetworkType_Lookup(p)
	return
}

func BWASNetworkType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNetworkType_LookupString(p)
	return
}

func BWASNetworkType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 16) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 16) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 16)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNetworkType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 16)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNetworkType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 16, a)
}

func BWASNetworkType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 16, a)
}

func BWASNetworkType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 16)
}

func BWASCarrierIdentificationCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 17, a)
}

func BWASCarrierIdentificationCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 17, a)
}

func BWASCarrierIdentificationCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCarrierIdentificationCode_Lookup(p)
	return
}

func BWASCarrierIdentificationCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCarrierIdentificationCode_LookupString(p)
	return
}

func BWASCarrierIdentificationCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 17) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCarrierIdentificationCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 17) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCarrierIdentificationCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 17)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCarrierIdentificationCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 17)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCarrierIdentificationCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 17, a)
}

func BWASCarrierIdentificationCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 17, a)
}

func BWASCarrierIdentificationCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 17)
}

func BWASDialedDigits_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 18, a)
}

func BWASDialedDigits_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 18, a)
}

func BWASDialedDigits_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDialedDigits_Lookup(p)
	return
}

func BWASDialedDigits_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDialedDigits_LookupString(p)
	return
}

func BWASDialedDigits_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 18) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDialedDigits_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 18) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDialedDigits_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 18)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDialedDigits_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 18)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDialedDigits_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 18, a)
}

func BWASDialedDigits_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 18, a)
}

func BWASDialedDigits_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 18)
}

func BWASCallCategory_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 19, a)
}

func BWASCallCategory_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 19, a)
}

func BWASCallCategory_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCategory_Lookup(p)
	return
}

func BWASCallCategory_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCategory_LookupString(p)
	return
}

func BWASCallCategory_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 19) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCategory_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 19) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCategory_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 19)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCategory_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 19)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCategory_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 19, a)
}

func BWASCallCategory_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 19, a)
}

func BWASCallCategory_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 19)
}

func BWASNetworkCallType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 20, a)
}

func BWASNetworkCallType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 20, a)
}

func BWASNetworkCallType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNetworkCallType_Lookup(p)
	return
}

func BWASNetworkCallType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNetworkCallType_LookupString(p)
	return
}

func BWASNetworkCallType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 20) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkCallType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 20) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkCallType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 20)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNetworkCallType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 20)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNetworkCallType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 20, a)
}

func BWASNetworkCallType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 20, a)
}

func BWASNetworkCallType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 20)
}

func BWASNetworkTranslatedNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 21, a)
}

func BWASNetworkTranslatedNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 21, a)
}

func BWASNetworkTranslatedNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNetworkTranslatedNumber_Lookup(p)
	return
}

func BWASNetworkTranslatedNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNetworkTranslatedNumber_LookupString(p)
	return
}

func BWASNetworkTranslatedNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 21) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkTranslatedNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 21) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkTranslatedNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 21)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNetworkTranslatedNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 21)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNetworkTranslatedNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 21, a)
}

func BWASNetworkTranslatedNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 21, a)
}

func BWASNetworkTranslatedNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 21)
}

func BWASNetworkTranslatedGroup_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 22, a)
}

func BWASNetworkTranslatedGroup_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 22, a)
}

func BWASNetworkTranslatedGroup_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNetworkTranslatedGroup_Lookup(p)
	return
}

func BWASNetworkTranslatedGroup_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNetworkTranslatedGroup_LookupString(p)
	return
}

func BWASNetworkTranslatedGroup_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 22) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkTranslatedGroup_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 22) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkTranslatedGroup_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 22)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNetworkTranslatedGroup_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 22)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNetworkTranslatedGroup_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 22, a)
}

func BWASNetworkTranslatedGroup_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 22, a)
}

func BWASNetworkTranslatedGroup_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 22)
}

func BWASReleasingParty_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 23, a)
}

func BWASReleasingParty_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 23, a)
}

func BWASReleasingParty_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReleasingParty_Lookup(p)
	return
}

func BWASReleasingParty_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReleasingParty_LookupString(p)
	return
}

func BWASReleasingParty_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 23) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReleasingParty_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 23) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReleasingParty_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 23)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReleasingParty_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 23)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReleasingParty_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 23, a)
}

func BWASReleasingParty_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 23, a)
}

func BWASReleasingParty_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 23)
}

func BWASRoute_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 24, a)
}

func BWASRoute_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 24, a)
}

func BWASRoute_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRoute_Lookup(p)
	return
}

func BWASRoute_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRoute_LookupString(p)
	return
}

func BWASRoute_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 24) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRoute_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 24) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRoute_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 24)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRoute_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 24)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRoute_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 24, a)
}

func BWASRoute_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 24, a)
}

func BWASRoute_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 24)
}

func BWASNetworkCallid_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 25, a)
}

func BWASNetworkCallid_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 25, a)
}

func BWASNetworkCallid_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNetworkCallid_Lookup(p)
	return
}

func BWASNetworkCallid_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNetworkCallid_LookupString(p)
	return
}

func BWASNetworkCallid_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 25) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkCallid_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 25) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkCallid_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 25)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNetworkCallid_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 25)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNetworkCallid_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 25, a)
}

func BWASNetworkCallid_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 25, a)
}

func BWASNetworkCallid_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 25)
}

func BWASCodec_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 26, a)
}

func BWASCodec_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 26, a)
}

func BWASCodec_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCodec_Lookup(p)
	return
}

func BWASCodec_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCodec_LookupString(p)
	return
}

func BWASCodec_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 26) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCodec_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 26) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCodec_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 26)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCodec_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 26)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCodec_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 26, a)
}

func BWASCodec_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 26, a)
}

func BWASCodec_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 26)
}

func BWASAccessDeviceAddress_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 27, a)
}

func BWASAccessDeviceAddress_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 27, a)
}

func BWASAccessDeviceAddress_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAccessDeviceAddress_Lookup(p)
	return
}

func BWASAccessDeviceAddress_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAccessDeviceAddress_LookupString(p)
	return
}

func BWASAccessDeviceAddress_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 27) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccessDeviceAddress_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 27) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccessDeviceAddress_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 27)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAccessDeviceAddress_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 27)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAccessDeviceAddress_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 27, a)
}

func BWASAccessDeviceAddress_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 27, a)
}

func BWASAccessDeviceAddress_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 27)
}

func BWASAccessCallid_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 28, a)
}

func BWASAccessCallid_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 28, a)
}

func BWASAccessCallid_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAccessCallid_Lookup(p)
	return
}

func BWASAccessCallid_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAccessCallid_LookupString(p)
	return
}

func BWASAccessCallid_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 28) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccessCallid_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 28) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccessCallid_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 28)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAccessCallid_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 28)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAccessCallid_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 28, a)
}

func BWASAccessCallid_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 28, a)
}

func BWASAccessCallid_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 28)
}

func BWASSpare29_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 29, a)
}

func BWASSpare29_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 29, a)
}

func BWASSpare29_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSpare29_Lookup(p)
	return
}

func BWASSpare29_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSpare29_LookupString(p)
	return
}

func BWASSpare29_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 29) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSpare29_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 29) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSpare29_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 29)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSpare29_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 29)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSpare29_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 29, a)
}

func BWASSpare29_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 29, a)
}

func BWASSpare29_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 29)
}

func BWASFailoverCorrelationID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 30, a)
}

func BWASFailoverCorrelationID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 30, a)
}

func BWASFailoverCorrelationID_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASFailoverCorrelationID_Lookup(p)
	return
}

func BWASFailoverCorrelationID_GetString(p *radius.Packet) (value string) {
	value, _ = BWASFailoverCorrelationID_LookupString(p)
	return
}

func BWASFailoverCorrelationID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 30) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFailoverCorrelationID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 30) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFailoverCorrelationID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 30)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASFailoverCorrelationID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 30)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASFailoverCorrelationID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 30, a)
}

func BWASFailoverCorrelationID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 30, a)
}

func BWASFailoverCorrelationID_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 30)
}

func BWASSpare31_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 31, a)
}

func BWASSpare31_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 31, a)
}

func BWASSpare31_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSpare31_Lookup(p)
	return
}

func BWASSpare31_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSpare31_LookupString(p)
	return
}

func BWASSpare31_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 31) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSpare31_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 31) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSpare31_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 31)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSpare31_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 31)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSpare31_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 31, a)
}

func BWASSpare31_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 31, a)
}

func BWASSpare31_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 31)
}

func BWASGroup_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 32, a)
}

func BWASGroup_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 32, a)
}

func BWASGroup_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASGroup_Lookup(p)
	return
}

func BWASGroup_GetString(p *radius.Packet) (value string) {
	value, _ = BWASGroup_LookupString(p)
	return
}

func BWASGroup_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 32) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASGroup_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 32) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASGroup_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 32)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASGroup_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 32)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASGroup_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 32, a)
}

func BWASGroup_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 32, a)
}

func BWASGroup_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 32)
}

func BWASDepartment_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 33, a)
}

func BWASDepartment_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 33, a)
}

func BWASDepartment_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDepartment_Lookup(p)
	return
}

func BWASDepartment_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDepartment_LookupString(p)
	return
}

func BWASDepartment_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 33) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDepartment_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 33) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDepartment_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 33)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDepartment_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 33)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDepartment_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 33, a)
}

func BWASDepartment_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 33, a)
}

func BWASDepartment_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 33)
}

func BWASAccountCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 34, a)
}

func BWASAccountCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 34, a)
}

func BWASAccountCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAccountCode_Lookup(p)
	return
}

func BWASAccountCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAccountCode_LookupString(p)
	return
}

func BWASAccountCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 34) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccountCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 34) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccountCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 34)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAccountCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 34)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAccountCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 34, a)
}

func BWASAccountCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 34, a)
}

func BWASAccountCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 34)
}

func BWASAuthorizationCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 35, a)
}

func BWASAuthorizationCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 35, a)
}

func BWASAuthorizationCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAuthorizationCode_Lookup(p)
	return
}

func BWASAuthorizationCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAuthorizationCode_LookupString(p)
	return
}

func BWASAuthorizationCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 35) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAuthorizationCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 35) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAuthorizationCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 35)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAuthorizationCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 35)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAuthorizationCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 35, a)
}

func BWASAuthorizationCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 35, a)
}

func BWASAuthorizationCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 35)
}

func BWASOriginalCalledNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 36, a)
}

func BWASOriginalCalledNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 36, a)
}

func BWASOriginalCalledNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOriginalCalledNumber_Lookup(p)
	return
}

func BWASOriginalCalledNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOriginalCalledNumber_LookupString(p)
	return
}

func BWASOriginalCalledNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 36) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 36) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 36)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOriginalCalledNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 36)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOriginalCalledNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 36, a)
}

func BWASOriginalCalledNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 36, a)
}

func BWASOriginalCalledNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 36)
}

func BWASOriginalCalledPresentationIndic_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 37, a)
}

func BWASOriginalCalledPresentationIndic_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 37, a)
}

func BWASOriginalCalledPresentationIndic_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOriginalCalledPresentationIndic_Lookup(p)
	return
}

func BWASOriginalCalledPresentationIndic_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOriginalCalledPresentationIndic_LookupString(p)
	return
}

func BWASOriginalCalledPresentationIndic_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 37) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledPresentationIndic_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 37) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledPresentationIndic_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 37)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOriginalCalledPresentationIndic_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 37)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOriginalCalledPresentationIndic_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 37, a)
}

func BWASOriginalCalledPresentationIndic_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 37, a)
}

func BWASOriginalCalledPresentationIndic_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 37)
}

func BWASOriginalCalledReason_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 38, a)
}

func BWASOriginalCalledReason_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 38, a)
}

func BWASOriginalCalledReason_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOriginalCalledReason_Lookup(p)
	return
}

func BWASOriginalCalledReason_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOriginalCalledReason_LookupString(p)
	return
}

func BWASOriginalCalledReason_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 38) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledReason_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 38) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledReason_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 38)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOriginalCalledReason_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 38)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOriginalCalledReason_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 38, a)
}

func BWASOriginalCalledReason_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 38, a)
}

func BWASOriginalCalledReason_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 38)
}

func BWASRedirectingNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 39, a)
}

func BWASRedirectingNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 39, a)
}

func BWASRedirectingNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRedirectingNumber_Lookup(p)
	return
}

func BWASRedirectingNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRedirectingNumber_LookupString(p)
	return
}

func BWASRedirectingNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 39) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 39) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 39)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRedirectingNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 39)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRedirectingNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 39, a)
}

func BWASRedirectingNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 39, a)
}

func BWASRedirectingNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 39)
}

func BWASRedirectingPresentationIndic_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 40, a)
}

func BWASRedirectingPresentationIndic_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 40, a)
}

func BWASRedirectingPresentationIndic_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRedirectingPresentationIndic_Lookup(p)
	return
}

func BWASRedirectingPresentationIndic_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRedirectingPresentationIndic_LookupString(p)
	return
}

func BWASRedirectingPresentationIndic_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 40) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingPresentationIndic_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 40) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingPresentationIndic_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 40)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRedirectingPresentationIndic_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 40)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRedirectingPresentationIndic_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 40, a)
}

func BWASRedirectingPresentationIndic_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 40, a)
}

func BWASRedirectingPresentationIndic_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 40)
}

func BWASRedirectingReason_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 41, a)
}

func BWASRedirectingReason_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 41, a)
}

func BWASRedirectingReason_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRedirectingReason_Lookup(p)
	return
}

func BWASRedirectingReason_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRedirectingReason_LookupString(p)
	return
}

func BWASRedirectingReason_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 41) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingReason_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 41) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingReason_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 41)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRedirectingReason_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 41)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRedirectingReason_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 41, a)
}

func BWASRedirectingReason_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 41, a)
}

func BWASRedirectingReason_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 41)
}

func BWASChargeIndic_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 42, a)
}

func BWASChargeIndic_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 42, a)
}

func BWASChargeIndic_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargeIndic_Lookup(p)
	return
}

func BWASChargeIndic_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargeIndic_LookupString(p)
	return
}

func BWASChargeIndic_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 42) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargeIndic_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 42) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargeIndic_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 42)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargeIndic_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 42)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargeIndic_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 42, a)
}

func BWASChargeIndic_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 42, a)
}

func BWASChargeIndic_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 42)
}

func BWASTypeOfNetwork_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 43, a)
}

func BWASTypeOfNetwork_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 43, a)
}

func BWASTypeOfNetwork_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTypeOfNetwork_Lookup(p)
	return
}

func BWASTypeOfNetwork_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTypeOfNetwork_LookupString(p)
	return
}

func BWASTypeOfNetwork_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 43) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTypeOfNetwork_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 43) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTypeOfNetwork_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 43)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTypeOfNetwork_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 43)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTypeOfNetwork_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 43, a)
}

func BWASTypeOfNetwork_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 43, a)
}

func BWASTypeOfNetwork_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 43)
}

func BWASVPCallingInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 44, a)
}

func BWASVPCallingInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 44, a)
}

func BWASVPCallingInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVPCallingInvokeTime_Lookup(p)
	return
}

func BWASVPCallingInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVPCallingInvokeTime_LookupString(p)
	return
}

func BWASVPCallingInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 44) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVPCallingInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 44) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVPCallingInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 44)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVPCallingInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 44)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVPCallingInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 44, a)
}

func BWASVPCallingInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 44, a)
}

func BWASVPCallingInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 44)
}

func BWASLocalCallid_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 45, a)
}

func BWASLocalCallid_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 45, a)
}

func BWASLocalCallid_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASLocalCallid_Lookup(p)
	return
}

func BWASLocalCallid_GetString(p *radius.Packet) (value string) {
	value, _ = BWASLocalCallid_LookupString(p)
	return
}

func BWASLocalCallid_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 45) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLocalCallid_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 45) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLocalCallid_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 45)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASLocalCallid_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 45)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASLocalCallid_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 45, a)
}

func BWASLocalCallid_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 45, a)
}

func BWASLocalCallid_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 45)
}

func BWASRemoteCallid_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 46, a)
}

func BWASRemoteCallid_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 46, a)
}

func BWASRemoteCallid_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRemoteCallid_Lookup(p)
	return
}

func BWASRemoteCallid_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRemoteCallid_LookupString(p)
	return
}

func BWASRemoteCallid_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 46) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRemoteCallid_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 46) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRemoteCallid_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 46)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRemoteCallid_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 46)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRemoteCallid_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 46, a)
}

func BWASRemoteCallid_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 46, a)
}

func BWASRemoteCallid_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 46)
}

func BWASCallingPartyCategory_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 47, a)
}

func BWASCallingPartyCategory_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 47, a)
}

func BWASCallingPartyCategory_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallingPartyCategory_Lookup(p)
	return
}

func BWASCallingPartyCategory_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallingPartyCategory_LookupString(p)
	return
}

func BWASCallingPartyCategory_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 47) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingPartyCategory_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 47) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingPartyCategory_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 47)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallingPartyCategory_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 47)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallingPartyCategory_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 47, a)
}

func BWASCallingPartyCategory_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 47, a)
}

func BWASCallingPartyCategory_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 47)
}

func BWASConferenceInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 48, a)
}

func BWASConferenceInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 48, a)
}

func BWASConferenceInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceInvokeTime_Lookup(p)
	return
}

func BWASConferenceInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceInvokeTime_LookupString(p)
	return
}

func BWASConferenceInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 48) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 48) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 48)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 48)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 48, a)
}

func BWASConferenceInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 48, a)
}

func BWASConferenceInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 48)
}

func BWASConferenceCallid_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 49, a)
}

func BWASConferenceCallid_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 49, a)
}

func BWASConferenceCallid_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceCallid_Lookup(p)
	return
}

func BWASConferenceCallid_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceCallid_LookupString(p)
	return
}

func BWASConferenceCallid_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 49) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceCallid_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 49) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceCallid_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 49)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceCallid_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 49)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceCallid_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 49, a)
}

func BWASConferenceCallid_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 49, a)
}

func BWASConferenceCallid_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 49)
}

func BWASConferenceTo_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 50, a)
}

func BWASConferenceTo_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 50, a)
}

func BWASConferenceTo_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceTo_Lookup(p)
	return
}

func BWASConferenceTo_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceTo_LookupString(p)
	return
}

func BWASConferenceTo_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 50) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceTo_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 50) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceTo_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 50)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceTo_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 50)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceTo_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 50, a)
}

func BWASConferenceTo_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 50, a)
}

func BWASConferenceTo_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 50)
}

func BWASConferenceFrom_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 51, a)
}

func BWASConferenceFrom_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 51, a)
}

func BWASConferenceFrom_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceFrom_Lookup(p)
	return
}

func BWASConferenceFrom_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceFrom_LookupString(p)
	return
}

func BWASConferenceFrom_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 51) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceFrom_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 51) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceFrom_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 51)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceFrom_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 51)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceFrom_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 51, a)
}

func BWASConferenceFrom_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 51, a)
}

func BWASConferenceFrom_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 51)
}

func BWASConferenceID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 52, a)
}

func BWASConferenceID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 52, a)
}

func BWASConferenceID_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceID_Lookup(p)
	return
}

func BWASConferenceID_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceID_LookupString(p)
	return
}

func BWASConferenceID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 52) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 52) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 52)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 52)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 52, a)
}

func BWASConferenceID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 52, a)
}

func BWASConferenceID_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 52)
}

func BWASConferenceRole_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 53, a)
}

func BWASConferenceRole_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 53, a)
}

func BWASConferenceRole_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceRole_Lookup(p)
	return
}

func BWASConferenceRole_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceRole_LookupString(p)
	return
}

func BWASConferenceRole_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 53) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceRole_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 53) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceRole_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 53)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceRole_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 53)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceRole_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 53, a)
}

func BWASConferenceRole_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 53, a)
}

func BWASConferenceRole_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 53)
}

func BWASConferenceBridge_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 54, a)
}

func BWASConferenceBridge_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 54, a)
}

func BWASConferenceBridge_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceBridge_Lookup(p)
	return
}

func BWASConferenceBridge_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceBridge_LookupString(p)
	return
}

func BWASConferenceBridge_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 54) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceBridge_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 54) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceBridge_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 54)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceBridge_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 54)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceBridge_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 54, a)
}

func BWASConferenceBridge_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 54, a)
}

func BWASConferenceBridge_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 54)
}

func BWASConferenceOwner_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 55, a)
}

func BWASConferenceOwner_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 55, a)
}

func BWASConferenceOwner_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceOwner_Lookup(p)
	return
}

func BWASConferenceOwner_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceOwner_LookupString(p)
	return
}

func BWASConferenceOwner_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 55) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceOwner_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 55) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceOwner_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 55)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceOwner_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 55)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceOwner_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 55, a)
}

func BWASConferenceOwner_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 55, a)
}

func BWASConferenceOwner_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 55)
}

func BWASConferenceOwnerDn_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 56, a)
}

func BWASConferenceOwnerDn_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 56, a)
}

func BWASConferenceOwnerDn_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceOwnerDn_Lookup(p)
	return
}

func BWASConferenceOwnerDn_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceOwnerDn_LookupString(p)
	return
}

func BWASConferenceOwnerDn_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 56) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceOwnerDn_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 56) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceOwnerDn_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 56)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceOwnerDn_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 56)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceOwnerDn_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 56, a)
}

func BWASConferenceOwnerDn_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 56, a)
}

func BWASConferenceOwnerDn_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 56)
}

func BWASConferenceTitle_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 57, a)
}

func BWASConferenceTitle_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 57, a)
}

func BWASConferenceTitle_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceTitle_Lookup(p)
	return
}

func BWASConferenceTitle_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceTitle_LookupString(p)
	return
}

func BWASConferenceTitle_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 57) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceTitle_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 57) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceTitle_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 57)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceTitle_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 57)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceTitle_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 57, a)
}

func BWASConferenceTitle_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 57, a)
}

func BWASConferenceTitle_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 57)
}

func BWASConferenceProjectCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 58, a)
}

func BWASConferenceProjectCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 58, a)
}

func BWASConferenceProjectCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConferenceProjectCode_Lookup(p)
	return
}

func BWASConferenceProjectCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConferenceProjectCode_LookupString(p)
	return
}

func BWASConferenceProjectCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 58) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceProjectCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 58) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConferenceProjectCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 58)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConferenceProjectCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 58)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConferenceProjectCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 58, a)
}

func BWASConferenceProjectCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 58, a)
}

func BWASConferenceProjectCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 58)
}

func BWASChargingVectorKey_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 59, a)
}

func BWASChargingVectorKey_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 59, a)
}

func BWASChargingVectorKey_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargingVectorKey_Lookup(p)
	return
}

func BWASChargingVectorKey_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargingVectorKey_LookupString(p)
	return
}

func BWASChargingVectorKey_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 59) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectorKey_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 59) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectorKey_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 59)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargingVectorKey_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 59)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargingVectorKey_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 59, a)
}

func BWASChargingVectorKey_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 59, a)
}

func BWASChargingVectorKey_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 59)
}

func BWASChargingVectionCreator_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 60, a)
}

func BWASChargingVectionCreator_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 60, a)
}

func BWASChargingVectionCreator_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargingVectionCreator_Lookup(p)
	return
}

func BWASChargingVectionCreator_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargingVectionCreator_LookupString(p)
	return
}

func BWASChargingVectionCreator_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 60) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectionCreator_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 60) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectionCreator_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 60)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargingVectionCreator_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 60)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargingVectionCreator_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 60, a)
}

func BWASChargingVectionCreator_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 60, a)
}

func BWASChargingVectionCreator_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 60)
}

func BWASChargingVectionOrig_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 61, a)
}

func BWASChargingVectionOrig_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 61, a)
}

func BWASChargingVectionOrig_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargingVectionOrig_Lookup(p)
	return
}

func BWASChargingVectionOrig_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargingVectionOrig_LookupString(p)
	return
}

func BWASChargingVectionOrig_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 61) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectionOrig_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 61) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectionOrig_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 61)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargingVectionOrig_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 61)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargingVectionOrig_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 61, a)
}

func BWASChargingVectionOrig_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 61, a)
}

func BWASChargingVectionOrig_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 61)
}

func BWASChargingVectionTerm_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 62, a)
}

func BWASChargingVectionTerm_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 62, a)
}

func BWASChargingVectionTerm_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargingVectionTerm_Lookup(p)
	return
}

func BWASChargingVectionTerm_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargingVectionTerm_LookupString(p)
	return
}

func BWASChargingVectionTerm_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 62) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectionTerm_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 62) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingVectionTerm_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 62)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargingVectionTerm_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 62)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargingVectionTerm_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 62, a)
}

func BWASChargingVectionTerm_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 62, a)
}

func BWASChargingVectionTerm_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 62)
}

func BWASAccPerCallInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 63, a)
}

func BWASAccPerCallInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 63, a)
}

func BWASAccPerCallInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAccPerCallInvokeTime_Lookup(p)
	return
}

func BWASAccPerCallInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAccPerCallInvokeTime_LookupString(p)
	return
}

func BWASAccPerCallInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 63) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccPerCallInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 63) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccPerCallInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 63)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAccPerCallInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 63)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAccPerCallInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 63, a)
}

func BWASAccPerCallInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 63, a)
}

func BWASAccPerCallInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 63)
}

func BWASAccPerCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 64, a)
}

func BWASAccPerCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 64, a)
}

func BWASAccPerCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAccPerCallFacResult_Lookup(p)
	return
}

func BWASAccPerCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAccPerCallFacResult_LookupString(p)
	return
}

func BWASAccPerCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 64) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccPerCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 64) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccPerCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 64)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAccPerCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 64)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAccPerCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 64, a)
}

func BWASAccPerCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 64, a)
}

func BWASAccPerCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 64)
}

func BWASAcbActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 65, a)
}

func BWASAcbActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 65, a)
}

func BWASAcbActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcbActInvokeTime_Lookup(p)
	return
}

func BWASAcbActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcbActInvokeTime_LookupString(p)
	return
}

func BWASAcbActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 65) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 65) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 65)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcbActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 65)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcbActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 65, a)
}

func BWASAcbActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 65, a)
}

func BWASAcbActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 65)
}

func BWASAcbActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 66, a)
}

func BWASAcbActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 66, a)
}

func BWASAcbActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcbActFacResult_Lookup(p)
	return
}

func BWASAcbActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcbActFacResult_LookupString(p)
	return
}

func BWASAcbActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 66) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 66) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 66)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcbActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 66)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcbActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 66, a)
}

func BWASAcbActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 66, a)
}

func BWASAcbActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 66)
}

func BWASAcbDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 67, a)
}

func BWASAcbDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 67, a)
}

func BWASAcbDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcbDeactInvokeTime_Lookup(p)
	return
}

func BWASAcbDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcbDeactInvokeTime_LookupString(p)
	return
}

func BWASAcbDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 67) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 67) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 67)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcbDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 67)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcbDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 67, a)
}

func BWASAcbDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 67, a)
}

func BWASAcbDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 67)
}

func BWASAcbDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 68, a)
}

func BWASAcbDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 68, a)
}

func BWASAcbDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcbDeactFacResult_Lookup(p)
	return
}

func BWASAcbDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcbDeactFacResult_LookupString(p)
	return
}

func BWASAcbDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 68) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 68) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcbDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 68)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcbDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 68)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcbDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 68, a)
}

func BWASAcbDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 68, a)
}

func BWASAcbDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 68)
}

func BWASCallParkInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 69, a)
}

func BWASCallParkInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 69, a)
}

func BWASCallParkInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallParkInvokeTime_Lookup(p)
	return
}

func BWASCallParkInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallParkInvokeTime_LookupString(p)
	return
}

func BWASCallParkInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 69) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 69) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 69)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallParkInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 69)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallParkInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 69, a)
}

func BWASCallParkInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 69, a)
}

func BWASCallParkInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 69)
}

func BWASCallParkFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 70, a)
}

func BWASCallParkFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 70, a)
}

func BWASCallParkFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallParkFacResult_Lookup(p)
	return
}

func BWASCallParkFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallParkFacResult_LookupString(p)
	return
}

func BWASCallParkFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 70) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 70) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 70)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallParkFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 70)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallParkFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 70, a)
}

func BWASCallParkFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 70, a)
}

func BWASCallParkFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 70)
}

func BWASCallParkRetrInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 71, a)
}

func BWASCallParkRetrInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 71, a)
}

func BWASCallParkRetrInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallParkRetrInvokeTime_Lookup(p)
	return
}

func BWASCallParkRetrInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallParkRetrInvokeTime_LookupString(p)
	return
}

func BWASCallParkRetrInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 71) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkRetrInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 71) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkRetrInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 71)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallParkRetrInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 71)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallParkRetrInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 71, a)
}

func BWASCallParkRetrInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 71, a)
}

func BWASCallParkRetrInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 71)
}

func BWASCallParkRetrFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 72, a)
}

func BWASCallParkRetrFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 72, a)
}

func BWASCallParkRetrFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallParkRetrFacResult_Lookup(p)
	return
}

func BWASCallParkRetrFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallParkRetrFacResult_LookupString(p)
	return
}

func BWASCallParkRetrFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 72) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkRetrFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 72) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkRetrFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 72)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallParkRetrFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 72)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallParkRetrFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 72, a)
}

func BWASCallParkRetrFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 72, a)
}

func BWASCallParkRetrFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 72)
}

func BWASCallPickupInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 73, a)
}

func BWASCallPickupInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 73, a)
}

func BWASCallPickupInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallPickupInvokeTime_Lookup(p)
	return
}

func BWASCallPickupInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallPickupInvokeTime_LookupString(p)
	return
}

func BWASCallPickupInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 73) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallPickupInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 73) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallPickupInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 73)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallPickupInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 73)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallPickupInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 73, a)
}

func BWASCallPickupInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 73, a)
}

func BWASCallPickupInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 73)
}

func BWASCallPickupFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 74, a)
}

func BWASCallPickupFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 74, a)
}

func BWASCallPickupFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallPickupFacResult_Lookup(p)
	return
}

func BWASCallPickupFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallPickupFacResult_LookupString(p)
	return
}

func BWASCallPickupFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 74) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallPickupFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 74) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallPickupFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 74)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallPickupFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 74)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallPickupFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 74, a)
}

func BWASCallPickupFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 74, a)
}

func BWASCallPickupFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 74)
}

func BWASDirectedCallPickupInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 75, a)
}

func BWASDirectedCallPickupInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 75, a)
}

func BWASDirectedCallPickupInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDirectedCallPickupInvokeTime_Lookup(p)
	return
}

func BWASDirectedCallPickupInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDirectedCallPickupInvokeTime_LookupString(p)
	return
}

func BWASDirectedCallPickupInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 75) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectedCallPickupInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 75) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectedCallPickupInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 75)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDirectedCallPickupInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 75)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDirectedCallPickupInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 75, a)
}

func BWASDirectedCallPickupInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 75, a)
}

func BWASDirectedCallPickupInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 75)
}

func BWASDirectedCallPickupFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 76, a)
}

func BWASDirectedCallPickupFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 76, a)
}

func BWASDirectedCallPickupFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDirectedCallPickupFacResult_Lookup(p)
	return
}

func BWASDirectedCallPickupFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDirectedCallPickupFacResult_LookupString(p)
	return
}

func BWASDirectedCallPickupFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 76) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectedCallPickupFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 76) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectedCallPickupFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 76)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDirectedCallPickupFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 76)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDirectedCallPickupFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 76, a)
}

func BWASDirectedCallPickupFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 76, a)
}

func BWASDirectedCallPickupFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 76)
}

func BWASDpubiInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 77, a)
}

func BWASDpubiInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 77, a)
}

func BWASDpubiInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDpubiInvokeTime_Lookup(p)
	return
}

func BWASDpubiInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDpubiInvokeTime_LookupString(p)
	return
}

func BWASDpubiInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 77) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDpubiInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 77) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDpubiInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 77)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDpubiInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 77)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDpubiInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 77, a)
}

func BWASDpubiInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 77, a)
}

func BWASDpubiInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 77)
}

func BWASDpubiFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 78, a)
}

func BWASDpubiFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 78, a)
}

func BWASDpubiFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDpubiFacResult_Lookup(p)
	return
}

func BWASDpubiFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDpubiFacResult_LookupString(p)
	return
}

func BWASDpubiFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 78) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDpubiFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 78) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDpubiFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 78)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDpubiFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 78)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDpubiFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 78, a)
}

func BWASDpubiFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 78, a)
}

func BWASDpubiFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 78)
}

func BWASCancelCwtPerCallInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 79, a)
}

func BWASCancelCwtPerCallInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 79, a)
}

func BWASCancelCwtPerCallInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCancelCwtPerCallInvokeTime_Lookup(p)
	return
}

func BWASCancelCwtPerCallInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCancelCwtPerCallInvokeTime_LookupString(p)
	return
}

func BWASCancelCwtPerCallInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 79) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCancelCwtPerCallInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 79) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCancelCwtPerCallInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 79)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCancelCwtPerCallInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 79)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCancelCwtPerCallInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 79, a)
}

func BWASCancelCwtPerCallInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 79, a)
}

func BWASCancelCwtPerCallInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 79)
}

func BWASCancelCwtPerCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 80, a)
}

func BWASCancelCwtPerCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 80, a)
}

func BWASCancelCwtPerCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCancelCwtPerCallFacResult_Lookup(p)
	return
}

func BWASCancelCwtPerCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCancelCwtPerCallFacResult_LookupString(p)
	return
}

func BWASCancelCwtPerCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 80) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCancelCwtPerCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 80) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCancelCwtPerCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 80)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCancelCwtPerCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 80)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCancelCwtPerCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 80, a)
}

func BWASCancelCwtPerCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 80, a)
}

func BWASCancelCwtPerCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 80)
}

func BWASCfaActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 81, a)
}

func BWASCfaActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 81, a)
}

func BWASCfaActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfaActInvokeTime_Lookup(p)
	return
}

func BWASCfaActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfaActInvokeTime_LookupString(p)
	return
}

func BWASCfaActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 81) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 81) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 81)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfaActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 81)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfaActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 81, a)
}

func BWASCfaActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 81, a)
}

func BWASCfaActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 81)
}

func BWASCfaActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 82, a)
}

func BWASCfaActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 82, a)
}

func BWASCfaActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfaActFacResult_Lookup(p)
	return
}

func BWASCfaActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfaActFacResult_LookupString(p)
	return
}

func BWASCfaActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 82) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 82) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 82)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfaActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 82)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfaActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 82, a)
}

func BWASCfaActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 82, a)
}

func BWASCfaActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 82)
}

func BWASCfaDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 83, a)
}

func BWASCfaDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 83, a)
}

func BWASCfaDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfaDeactInvokeTime_Lookup(p)
	return
}

func BWASCfaDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfaDeactInvokeTime_LookupString(p)
	return
}

func BWASCfaDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 83) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 83) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 83)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfaDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 83)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfaDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 83, a)
}

func BWASCfaDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 83, a)
}

func BWASCfaDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 83)
}

func BWASCfaDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 84, a)
}

func BWASCfaDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 84, a)
}

func BWASCfaDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfaDeactFacResult_Lookup(p)
	return
}

func BWASCfaDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfaDeactFacResult_LookupString(p)
	return
}

func BWASCfaDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 84) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 84) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 84)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfaDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 84)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfaDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 84, a)
}

func BWASCfaDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 84, a)
}

func BWASCfaDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 84)
}

func BWASCfbActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 85, a)
}

func BWASCfbActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 85, a)
}

func BWASCfbActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfbActInvokeTime_Lookup(p)
	return
}

func BWASCfbActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfbActInvokeTime_LookupString(p)
	return
}

func BWASCfbActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 85) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 85) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 85)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfbActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 85)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfbActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 85, a)
}

func BWASCfbActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 85, a)
}

func BWASCfbActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 85)
}

func BWASCfbActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 86, a)
}

func BWASCfbActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 86, a)
}

func BWASCfbActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfbActFacResult_Lookup(p)
	return
}

func BWASCfbActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfbActFacResult_LookupString(p)
	return
}

func BWASCfbActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 86) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 86) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 86)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfbActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 86)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfbActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 86, a)
}

func BWASCfbActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 86, a)
}

func BWASCfbActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 86)
}

func BWASCfbDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 87, a)
}

func BWASCfbDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 87, a)
}

func BWASCfbDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfbDeactInvokeTime_Lookup(p)
	return
}

func BWASCfbDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfbDeactInvokeTime_LookupString(p)
	return
}

func BWASCfbDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 87) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 87) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 87)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfbDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 87)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfbDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 87, a)
}

func BWASCfbDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 87, a)
}

func BWASCfbDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 87)
}

func BWASCfbDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 88, a)
}

func BWASCfbDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 88, a)
}

func BWASCfbDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfbDeactFacResult_Lookup(p)
	return
}

func BWASCfbDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfbDeactFacResult_LookupString(p)
	return
}

func BWASCfbDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 88) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 88) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 88)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfbDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 88)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfbDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 88, a)
}

func BWASCfbDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 88, a)
}

func BWASCfbDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 88)
}

func BWASCfnaActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 89, a)
}

func BWASCfnaActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 89, a)
}

func BWASCfnaActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnaActInvokeTime_Lookup(p)
	return
}

func BWASCfnaActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnaActInvokeTime_LookupString(p)
	return
}

func BWASCfnaActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 89) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 89) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 89)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnaActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 89)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnaActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 89, a)
}

func BWASCfnaActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 89, a)
}

func BWASCfnaActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 89)
}

func BWASCfnaActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 90, a)
}

func BWASCfnaActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 90, a)
}

func BWASCfnaActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnaActFacResult_Lookup(p)
	return
}

func BWASCfnaActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnaActFacResult_LookupString(p)
	return
}

func BWASCfnaActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 90) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 90) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 90)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnaActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 90)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnaActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 90, a)
}

func BWASCfnaActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 90, a)
}

func BWASCfnaActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 90)
}

func BWASCfnaDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 91, a)
}

func BWASCfnaDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 91, a)
}

func BWASCfnaDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnaDeactInvokeTime_Lookup(p)
	return
}

func BWASCfnaDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnaDeactInvokeTime_LookupString(p)
	return
}

func BWASCfnaDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 91) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 91) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 91)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnaDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 91)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnaDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 91, a)
}

func BWASCfnaDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 91, a)
}

func BWASCfnaDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 91)
}

func BWASCfnaDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 92, a)
}

func BWASCfnaDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 92, a)
}

func BWASCfnaDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnaDeactFacResult_Lookup(p)
	return
}

func BWASCfnaDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnaDeactFacResult_LookupString(p)
	return
}

func BWASCfnaDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 92) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 92) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 92)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnaDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 92)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnaDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 92, a)
}

func BWASCfnaDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 92, a)
}

func BWASCfnaDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 92)
}

func BWASClidDeliveryPerCallInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 93, a)
}

func BWASClidDeliveryPerCallInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 93, a)
}

func BWASClidDeliveryPerCallInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidDeliveryPerCallInvokeTime_Lookup(p)
	return
}

func BWASClidDeliveryPerCallInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidDeliveryPerCallInvokeTime_LookupString(p)
	return
}

func BWASClidDeliveryPerCallInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 93) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidDeliveryPerCallInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 93) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidDeliveryPerCallInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 93)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidDeliveryPerCallInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 93)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidDeliveryPerCallInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 93, a)
}

func BWASClidDeliveryPerCallInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 93, a)
}

func BWASClidDeliveryPerCallInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 93)
}

func BWASClidDeliveryPerCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 94, a)
}

func BWASClidDeliveryPerCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 94, a)
}

func BWASClidDeliveryPerCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidDeliveryPerCallFacResult_Lookup(p)
	return
}

func BWASClidDeliveryPerCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidDeliveryPerCallFacResult_LookupString(p)
	return
}

func BWASClidDeliveryPerCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 94) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidDeliveryPerCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 94) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidDeliveryPerCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 94)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidDeliveryPerCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 94)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidDeliveryPerCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 94, a)
}

func BWASClidDeliveryPerCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 94, a)
}

func BWASClidDeliveryPerCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 94)
}

func BWASClidBlockingPerCallInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 95, a)
}

func BWASClidBlockingPerCallInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 95, a)
}

func BWASClidBlockingPerCallInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidBlockingPerCallInvokeTime_Lookup(p)
	return
}

func BWASClidBlockingPerCallInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidBlockingPerCallInvokeTime_LookupString(p)
	return
}

func BWASClidBlockingPerCallInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 95) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingPerCallInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 95) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingPerCallInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 95)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidBlockingPerCallInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 95)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidBlockingPerCallInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 95, a)
}

func BWASClidBlockingPerCallInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 95, a)
}

func BWASClidBlockingPerCallInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 95)
}

func BWASClidBlockingPerCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 96, a)
}

func BWASClidBlockingPerCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 96, a)
}

func BWASClidBlockingPerCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidBlockingPerCallFacResult_Lookup(p)
	return
}

func BWASClidBlockingPerCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidBlockingPerCallFacResult_LookupString(p)
	return
}

func BWASClidBlockingPerCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 96) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingPerCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 96) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingPerCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 96)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidBlockingPerCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 96)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidBlockingPerCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 96, a)
}

func BWASClidBlockingPerCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 96, a)
}

func BWASClidBlockingPerCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 96)
}

func BWASCotInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 97, a)
}

func BWASCotInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 97, a)
}

func BWASCotInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCotInvokeTime_Lookup(p)
	return
}

func BWASCotInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCotInvokeTime_LookupString(p)
	return
}

func BWASCotInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 97) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCotInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 97) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCotInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 97)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCotInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 97)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCotInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 97, a)
}

func BWASCotInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 97, a)
}

func BWASCotInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 97)
}

func BWASCotFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 98, a)
}

func BWASCotFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 98, a)
}

func BWASCotFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCotFacResult_Lookup(p)
	return
}

func BWASCotFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCotFacResult_LookupString(p)
	return
}

func BWASCotFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 98) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCotFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 98) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCotFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 98)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCotFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 98)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCotFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 98, a)
}

func BWASCotFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 98, a)
}

func BWASCotFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 98)
}

func BWASDirectVMXferInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 99, a)
}

func BWASDirectVMXferInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 99, a)
}

func BWASDirectVMXferInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDirectVMXferInvokeTime_Lookup(p)
	return
}

func BWASDirectVMXferInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDirectVMXferInvokeTime_LookupString(p)
	return
}

func BWASDirectVMXferInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 99) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectVMXferInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 99) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectVMXferInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 99)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDirectVMXferInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 99)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDirectVMXferInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 99, a)
}

func BWASDirectVMXferInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 99, a)
}

func BWASDirectVMXferInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 99)
}

func BWASDirectVMXferFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 100, a)
}

func BWASDirectVMXferFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 100, a)
}

func BWASDirectVMXferFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDirectVMXferFacResult_Lookup(p)
	return
}

func BWASDirectVMXferFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDirectVMXferFacResult_LookupString(p)
	return
}

func BWASDirectVMXferFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 100) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectVMXferFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 100) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDirectVMXferFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 100)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDirectVMXferFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 100)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDirectVMXferFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 100, a)
}

func BWASDirectVMXferFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 100, a)
}

func BWASDirectVMXferFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 100)
}

func BWASDndActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 101, a)
}

func BWASDndActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 101, a)
}

func BWASDndActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDndActInvokeTime_Lookup(p)
	return
}

func BWASDndActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDndActInvokeTime_LookupString(p)
	return
}

func BWASDndActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 101) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 101) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 101)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDndActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 101)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDndActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 101, a)
}

func BWASDndActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 101, a)
}

func BWASDndActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 101)
}

func BWASDndActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 102, a)
}

func BWASDndActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 102, a)
}

func BWASDndActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDndActFacResult_Lookup(p)
	return
}

func BWASDndActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDndActFacResult_LookupString(p)
	return
}

func BWASDndActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 102) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 102) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 102)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDndActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 102)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDndActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 102, a)
}

func BWASDndActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 102, a)
}

func BWASDndActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 102)
}

func BWASDndDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 103, a)
}

func BWASDndDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 103, a)
}

func BWASDndDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDndDeactInvokeTime_Lookup(p)
	return
}

func BWASDndDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDndDeactInvokeTime_LookupString(p)
	return
}

func BWASDndDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 103) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 103) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 103)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDndDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 103)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDndDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 103, a)
}

func BWASDndDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 103, a)
}

func BWASDndDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 103)
}

func BWASDndDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 104, a)
}

func BWASDndDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 104, a)
}

func BWASDndDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDndDeactFacResult_Lookup(p)
	return
}

func BWASDndDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDndDeactFacResult_LookupString(p)
	return
}

func BWASDndDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 104) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 104) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDndDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 104)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDndDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 104)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDndDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 104, a)
}

func BWASDndDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 104, a)
}

func BWASDndDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 104)
}

func BWASSacLockInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 105, a)
}

func BWASSacLockInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 105, a)
}

func BWASSacLockInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSacLockInvokeTime_Lookup(p)
	return
}

func BWASSacLockInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSacLockInvokeTime_LookupString(p)
	return
}

func BWASSacLockInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 105) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacLockInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 105) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacLockInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 105)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSacLockInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 105)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSacLockInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 105, a)
}

func BWASSacLockInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 105, a)
}

func BWASSacLockInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 105)
}

func BWASSacLockFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 106, a)
}

func BWASSacLockFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 106, a)
}

func BWASSacLockFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSacLockFacResult_Lookup(p)
	return
}

func BWASSacLockFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSacLockFacResult_LookupString(p)
	return
}

func BWASSacLockFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 106) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacLockFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 106) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacLockFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 106)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSacLockFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 106)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSacLockFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 106, a)
}

func BWASSacLockFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 106, a)
}

func BWASSacLockFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 106)
}

func BWASSacUnlockInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 107, a)
}

func BWASSacUnlockInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 107, a)
}

func BWASSacUnlockInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSacUnlockInvokeTime_Lookup(p)
	return
}

func BWASSacUnlockInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSacUnlockInvokeTime_LookupString(p)
	return
}

func BWASSacUnlockInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 107) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacUnlockInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 107) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacUnlockInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 107)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSacUnlockInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 107)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSacUnlockInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 107, a)
}

func BWASSacUnlockInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 107, a)
}

func BWASSacUnlockInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 107)
}

func BWASSacUnlockFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 108, a)
}

func BWASSacUnlockFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 108, a)
}

func BWASSacUnlockFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSacUnlockFacResult_Lookup(p)
	return
}

func BWASSacUnlockFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSacUnlockFacResult_LookupString(p)
	return
}

func BWASSacUnlockFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 108) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacUnlockFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 108) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSacUnlockFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 108)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSacUnlockFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 108)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSacUnlockFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 108, a)
}

func BWASSacUnlockFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 108, a)
}

func BWASSacUnlockFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 108)
}

func BWASFlashCallHoldInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 109, a)
}

func BWASFlashCallHoldInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 109, a)
}

func BWASFlashCallHoldInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASFlashCallHoldInvokeTime_Lookup(p)
	return
}

func BWASFlashCallHoldInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASFlashCallHoldInvokeTime_LookupString(p)
	return
}

func BWASFlashCallHoldInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 109) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFlashCallHoldInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 109) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFlashCallHoldInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 109)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASFlashCallHoldInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 109)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASFlashCallHoldInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 109, a)
}

func BWASFlashCallHoldInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 109, a)
}

func BWASFlashCallHoldInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 109)
}

func BWASFlashCallHoldFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 110, a)
}

func BWASFlashCallHoldFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 110, a)
}

func BWASFlashCallHoldFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASFlashCallHoldFacResult_Lookup(p)
	return
}

func BWASFlashCallHoldFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASFlashCallHoldFacResult_LookupString(p)
	return
}

func BWASFlashCallHoldFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 110) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFlashCallHoldFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 110) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFlashCallHoldFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 110)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASFlashCallHoldFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 110)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASFlashCallHoldFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 110, a)
}

func BWASFlashCallHoldFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 110, a)
}

func BWASFlashCallHoldFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 110)
}

func BWASLastNumberRedialInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 111, a)
}

func BWASLastNumberRedialInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 111, a)
}

func BWASLastNumberRedialInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASLastNumberRedialInvokeTime_Lookup(p)
	return
}

func BWASLastNumberRedialInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASLastNumberRedialInvokeTime_LookupString(p)
	return
}

func BWASLastNumberRedialInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 111) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLastNumberRedialInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 111) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLastNumberRedialInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 111)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASLastNumberRedialInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 111)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASLastNumberRedialInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 111, a)
}

func BWASLastNumberRedialInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 111, a)
}

func BWASLastNumberRedialInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 111)
}

func BWASLastNumberRedialFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 112, a)
}

func BWASLastNumberRedialFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 112, a)
}

func BWASLastNumberRedialFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASLastNumberRedialFacResult_Lookup(p)
	return
}

func BWASLastNumberRedialFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASLastNumberRedialFacResult_LookupString(p)
	return
}

func BWASLastNumberRedialFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 112) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLastNumberRedialFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 112) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLastNumberRedialFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 112)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASLastNumberRedialFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 112)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASLastNumberRedialFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 112, a)
}

func BWASLastNumberRedialFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 112, a)
}

func BWASLastNumberRedialFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 112)
}

func BWASReturnCallInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 113, a)
}

func BWASReturnCallInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 113, a)
}

func BWASReturnCallInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReturnCallInvokeTime_Lookup(p)
	return
}

func BWASReturnCallInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReturnCallInvokeTime_LookupString(p)
	return
}

func BWASReturnCallInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 113) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 113) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 113)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReturnCallInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 113)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReturnCallInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 113, a)
}

func BWASReturnCallInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 113, a)
}

func BWASReturnCallInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 113)
}

func BWASReturnCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 114, a)
}

func BWASReturnCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 114, a)
}

func BWASReturnCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReturnCallFacResult_Lookup(p)
	return
}

func BWASReturnCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReturnCallFacResult_LookupString(p)
	return
}

func BWASReturnCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 114) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 114) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 114)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReturnCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 114)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReturnCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 114, a)
}

func BWASReturnCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 114, a)
}

func BWASReturnCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 114)
}

func BWASSd100ProgrammingInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 115, a)
}

func BWASSd100ProgrammingInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 115, a)
}

func BWASSd100ProgrammingInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSd100ProgrammingInvokeTime_Lookup(p)
	return
}

func BWASSd100ProgrammingInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSd100ProgrammingInvokeTime_LookupString(p)
	return
}

func BWASSd100ProgrammingInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 115) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd100ProgrammingInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 115) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd100ProgrammingInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 115)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSd100ProgrammingInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 115)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSd100ProgrammingInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 115, a)
}

func BWASSd100ProgrammingInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 115, a)
}

func BWASSd100ProgrammingInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 115)
}

func BWASSd100ProgrammingFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 116, a)
}

func BWASSd100ProgrammingFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 116, a)
}

func BWASSd100ProgrammingFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSd100ProgrammingFacResult_Lookup(p)
	return
}

func BWASSd100ProgrammingFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSd100ProgrammingFacResult_LookupString(p)
	return
}

func BWASSd100ProgrammingFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 116) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd100ProgrammingFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 116) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd100ProgrammingFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 116)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSd100ProgrammingFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 116)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSd100ProgrammingFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 116, a)
}

func BWASSd100ProgrammingFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 116, a)
}

func BWASSd100ProgrammingFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 116)
}

func BWASSd8ProgrammingInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 117, a)
}

func BWASSd8ProgrammingInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 117, a)
}

func BWASSd8ProgrammingInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSd8ProgrammingInvokeTime_Lookup(p)
	return
}

func BWASSd8ProgrammingInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSd8ProgrammingInvokeTime_LookupString(p)
	return
}

func BWASSd8ProgrammingInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 117) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd8ProgrammingInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 117) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd8ProgrammingInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 117)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSd8ProgrammingInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 117)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSd8ProgrammingInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 117, a)
}

func BWASSd8ProgrammingInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 117, a)
}

func BWASSd8ProgrammingInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 117)
}

func BWASSd8ProgrammingFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 118, a)
}

func BWASSd8ProgrammingFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 118, a)
}

func BWASSd8ProgrammingFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSd8ProgrammingFacResult_Lookup(p)
	return
}

func BWASSd8ProgrammingFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSd8ProgrammingFacResult_LookupString(p)
	return
}

func BWASSd8ProgrammingFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 118) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd8ProgrammingFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 118) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSd8ProgrammingFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 118)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSd8ProgrammingFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 118)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSd8ProgrammingFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 118, a)
}

func BWASSd8ProgrammingFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 118, a)
}

func BWASSd8ProgrammingFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 118)
}

func BWASClearMwiInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 119, a)
}

func BWASClearMwiInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 119, a)
}

func BWASClearMwiInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClearMwiInvokeTime_Lookup(p)
	return
}

func BWASClearMwiInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClearMwiInvokeTime_LookupString(p)
	return
}

func BWASClearMwiInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 119) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClearMwiInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 119) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClearMwiInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 119)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClearMwiInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 119)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClearMwiInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 119, a)
}

func BWASClearMwiInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 119, a)
}

func BWASClearMwiInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 119)
}

func BWASClearMwiFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 120, a)
}

func BWASClearMwiFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 120, a)
}

func BWASClearMwiFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClearMwiFacResult_Lookup(p)
	return
}

func BWASClearMwiFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClearMwiFacResult_LookupString(p)
	return
}

func BWASClearMwiFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 120) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClearMwiFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 120) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClearMwiFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 120)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClearMwiFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 120)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClearMwiFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 120, a)
}

func BWASClearMwiFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 120, a)
}

func BWASClearMwiFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 120)
}

func BWASUserId_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 121, a)
}

func BWASUserId_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 121, a)
}

func BWASUserId_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASUserId_Lookup(p)
	return
}

func BWASUserId_GetString(p *radius.Packet) (value string) {
	value, _ = BWASUserId_LookupString(p)
	return
}

func BWASUserId_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 121) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASUserId_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 121) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASUserId_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 121)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASUserId_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 121)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASUserId_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 121, a)
}

func BWASUserId_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 121, a)
}

func BWASUserId_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 121)
}

func BWASOtherPartyName_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 122, a)
}

func BWASOtherPartyName_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 122, a)
}

func BWASOtherPartyName_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOtherPartyName_Lookup(p)
	return
}

func BWASOtherPartyName_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOtherPartyName_LookupString(p)
	return
}

func BWASOtherPartyName_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 122) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOtherPartyName_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 122) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOtherPartyName_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 122)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOtherPartyName_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 122)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOtherPartyName_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 122, a)
}

func BWASOtherPartyName_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 122, a)
}

func BWASOtherPartyName_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 122)
}

func BWASOtherPartyNamePresIndic_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 123, a)
}

func BWASOtherPartyNamePresIndic_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 123, a)
}

func BWASOtherPartyNamePresIndic_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOtherPartyNamePresIndic_Lookup(p)
	return
}

func BWASOtherPartyNamePresIndic_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOtherPartyNamePresIndic_LookupString(p)
	return
}

func BWASOtherPartyNamePresIndic_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 123) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOtherPartyNamePresIndic_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 123) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOtherPartyNamePresIndic_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 123)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOtherPartyNamePresIndic_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 123)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOtherPartyNamePresIndic_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 123, a)
}

func BWASOtherPartyNamePresIndic_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 123, a)
}

func BWASOtherPartyNamePresIndic_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 123)
}

func BWASMohDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 125, a)
}

func BWASMohDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 125, a)
}

func BWASMohDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASMohDeactFacResult_Lookup(p)
	return
}

func BWASMohDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASMohDeactFacResult_LookupString(p)
	return
}

func BWASMohDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 125) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASMohDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 125) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASMohDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 125)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASMohDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 125)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASMohDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 125, a)
}

func BWASMohDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 125, a)
}

func BWASMohDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 125)
}

func BWASPushToTalkInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 126, a)
}

func BWASPushToTalkInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 126, a)
}

func BWASPushToTalkInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASPushToTalkInvokeTime_Lookup(p)
	return
}

func BWASPushToTalkInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASPushToTalkInvokeTime_LookupString(p)
	return
}

func BWASPushToTalkInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 126) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPushToTalkInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 126) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPushToTalkInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 126)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASPushToTalkInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 126)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASPushToTalkInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 126, a)
}

func BWASPushToTalkInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 126, a)
}

func BWASPushToTalkInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 126)
}

func BWASPushToTalkFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 127, a)
}

func BWASPushToTalkFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 127, a)
}

func BWASPushToTalkFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASPushToTalkFacResult_Lookup(p)
	return
}

func BWASPushToTalkFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASPushToTalkFacResult_LookupString(p)
	return
}

func BWASPushToTalkFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 127) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPushToTalkFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 127) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPushToTalkFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 127)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASPushToTalkFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 127)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASPushToTalkFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 127, a)
}

func BWASPushToTalkFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 127, a)
}

func BWASPushToTalkFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 127)
}

func BWASHotelingInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 128, a)
}

func BWASHotelingInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 128, a)
}

func BWASHotelingInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASHotelingInvokeTime_Lookup(p)
	return
}

func BWASHotelingInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASHotelingInvokeTime_LookupString(p)
	return
}

func BWASHotelingInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 128) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 128) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 128)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASHotelingInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 128)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASHotelingInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 128, a)
}

func BWASHotelingInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 128, a)
}

func BWASHotelingInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 128)
}

func BWASHotelingGroup_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 129, a)
}

func BWASHotelingGroup_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 129, a)
}

func BWASHotelingGroup_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASHotelingGroup_Lookup(p)
	return
}

func BWASHotelingGroup_GetString(p *radius.Packet) (value string) {
	value, _ = BWASHotelingGroup_LookupString(p)
	return
}

func BWASHotelingGroup_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 129) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingGroup_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 129) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingGroup_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 129)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASHotelingGroup_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 129)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASHotelingGroup_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 129, a)
}

func BWASHotelingGroup_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 129, a)
}

func BWASHotelingGroup_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 129)
}

func BWASHotelingUserId_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 130, a)
}

func BWASHotelingUserId_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 130, a)
}

func BWASHotelingUserId_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASHotelingUserId_Lookup(p)
	return
}

func BWASHotelingUserId_GetString(p *radius.Packet) (value string) {
	value, _ = BWASHotelingUserId_LookupString(p)
	return
}

func BWASHotelingUserId_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 130) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingUserId_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 130) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingUserId_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 130)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASHotelingUserId_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 130)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASHotelingUserId_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 130, a)
}

func BWASHotelingUserId_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 130, a)
}

func BWASHotelingUserId_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 130)
}

func BWASHotelingUserNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 131, a)
}

func BWASHotelingUserNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 131, a)
}

func BWASHotelingUserNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASHotelingUserNumber_Lookup(p)
	return
}

func BWASHotelingUserNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASHotelingUserNumber_LookupString(p)
	return
}

func BWASHotelingUserNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 131) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingUserNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 131) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingUserNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 131)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASHotelingUserNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 131)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASHotelingUserNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 131, a)
}

func BWASHotelingUserNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 131, a)
}

func BWASHotelingUserNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 131)
}

func BWASHotelingGroupNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 132, a)
}

func BWASHotelingGroupNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 132, a)
}

func BWASHotelingGroupNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASHotelingGroupNumber_Lookup(p)
	return
}

func BWASHotelingGroupNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASHotelingGroupNumber_LookupString(p)
	return
}

func BWASHotelingGroupNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 132) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingGroupNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 132) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASHotelingGroupNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 132)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASHotelingGroupNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 132)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASHotelingGroupNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 132, a)
}

func BWASHotelingGroupNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 132, a)
}

func BWASHotelingGroupNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 132)
}

func BWASDiversionInhibitorInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 133, a)
}

func BWASDiversionInhibitorInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 133, a)
}

func BWASDiversionInhibitorInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDiversionInhibitorInvokeTime_Lookup(p)
	return
}

func BWASDiversionInhibitorInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDiversionInhibitorInvokeTime_LookupString(p)
	return
}

func BWASDiversionInhibitorInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 133) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDiversionInhibitorInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 133) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDiversionInhibitorInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 133)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDiversionInhibitorInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 133)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDiversionInhibitorInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 133, a)
}

func BWASDiversionInhibitorInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 133, a)
}

func BWASDiversionInhibitorInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 133)
}

func BWASDiversionInhibitorFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 134, a)
}

func BWASDiversionInhibitorFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 134, a)
}

func BWASDiversionInhibitorFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDiversionInhibitorFacResult_Lookup(p)
	return
}

func BWASDiversionInhibitorFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDiversionInhibitorFacResult_LookupString(p)
	return
}

func BWASDiversionInhibitorFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 134) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDiversionInhibitorFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 134) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDiversionInhibitorFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 134)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDiversionInhibitorFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 134)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDiversionInhibitorFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 134, a)
}

func BWASDiversionInhibitorFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 134, a)
}

func BWASDiversionInhibitorFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 134)
}

func BWASTrunkGroupName_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 135, a)
}

func BWASTrunkGroupName_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 135, a)
}

func BWASTrunkGroupName_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTrunkGroupName_Lookup(p)
	return
}

func BWASTrunkGroupName_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTrunkGroupName_LookupString(p)
	return
}

func BWASTrunkGroupName_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 135) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTrunkGroupName_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 135) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTrunkGroupName_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 135)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTrunkGroupName_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 135)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTrunkGroupName_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 135, a)
}

func BWASTrunkGroupName_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 135, a)
}

func BWASTrunkGroupName_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 135)
}

func BWASSpare136_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 136, a)
}

func BWASSpare136_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 136, a)
}

func BWASSpare136_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSpare136_Lookup(p)
	return
}

func BWASSpare136_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSpare136_LookupString(p)
	return
}

func BWASSpare136_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 136) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSpare136_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 136) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSpare136_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 136)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSpare136_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 136)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSpare136_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 136, a)
}

func BWASSpare136_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 136, a)
}

func BWASSpare136_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 136)
}

func BWASInstantGroupCallInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 137, a)
}

func BWASInstantGroupCallInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 137, a)
}

func BWASInstantGroupCallInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASInstantGroupCallInvokeTime_Lookup(p)
	return
}

func BWASInstantGroupCallInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASInstantGroupCallInvokeTime_LookupString(p)
	return
}

func BWASInstantGroupCallInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 137) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASInstantGroupCallInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 137) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASInstantGroupCallInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 137)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASInstantGroupCallInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 137)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASInstantGroupCallInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 137, a)
}

func BWASInstantGroupCallInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 137, a)
}

func BWASInstantGroupCallInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 137)
}

func BWASInstantGroupCallPushToTalk_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 138, a)
}

func BWASInstantGroupCallPushToTalk_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 138, a)
}

func BWASInstantGroupCallPushToTalk_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASInstantGroupCallPushToTalk_Lookup(p)
	return
}

func BWASInstantGroupCallPushToTalk_GetString(p *radius.Packet) (value string) {
	value, _ = BWASInstantGroupCallPushToTalk_LookupString(p)
	return
}

func BWASInstantGroupCallPushToTalk_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 138) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASInstantGroupCallPushToTalk_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 138) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASInstantGroupCallPushToTalk_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 138)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASInstantGroupCallPushToTalk_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 138)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASInstantGroupCallPushToTalk_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 138, a)
}

func BWASInstantGroupCallPushToTalk_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 138, a)
}

func BWASInstantGroupCallPushToTalk_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 138)
}

func BWASInstantGroupCallRelatedCallid_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 139, a)
}

func BWASInstantGroupCallRelatedCallid_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 139, a)
}

func BWASInstantGroupCallRelatedCallid_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASInstantGroupCallRelatedCallid_Lookup(p)
	return
}

func BWASInstantGroupCallRelatedCallid_GetString(p *radius.Packet) (value string) {
	value, _ = BWASInstantGroupCallRelatedCallid_LookupString(p)
	return
}

func BWASInstantGroupCallRelatedCallid_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 139) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASInstantGroupCallRelatedCallid_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 139) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASInstantGroupCallRelatedCallid_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 139)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASInstantGroupCallRelatedCallid_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 139)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASInstantGroupCallRelatedCallid_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 139, a)
}

func BWASInstantGroupCallRelatedCallid_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 139, a)
}

func BWASInstantGroupCallRelatedCallid_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 139)
}

func BWASCustomRingbackInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 140, a)
}

func BWASCustomRingbackInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 140, a)
}

func BWASCustomRingbackInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCustomRingbackInvokeTime_Lookup(p)
	return
}

func BWASCustomRingbackInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCustomRingbackInvokeTime_LookupString(p)
	return
}

func BWASCustomRingbackInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 140) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCustomRingbackInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 140) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCustomRingbackInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 140)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCustomRingbackInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 140)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCustomRingbackInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 140, a)
}

func BWASCustomRingbackInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 140, a)
}

func BWASCustomRingbackInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 140)
}

func BWASCLIDPermitted_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 141, a)
}

func BWASCLIDPermitted_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 141, a)
}

func BWASCLIDPermitted_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCLIDPermitted_Lookup(p)
	return
}

func BWASCLIDPermitted_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCLIDPermitted_LookupString(p)
	return
}

func BWASCLIDPermitted_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 141) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCLIDPermitted_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 141) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCLIDPermitted_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 141)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCLIDPermitted_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 141)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCLIDPermitted_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 141, a)
}

func BWASCLIDPermitted_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 141, a)
}

func BWASCLIDPermitted_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 141)
}

func BWASAHRInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 142, a)
}

func BWASAHRInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 142, a)
}

func BWASAHRInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAHRInvokeTime_Lookup(p)
	return
}

func BWASAHRInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAHRInvokeTime_LookupString(p)
	return
}

func BWASAHRInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 142) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAHRInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 142) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAHRInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 142)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAHRInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 142)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAHRInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 142, a)
}

func BWASAHRInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 142, a)
}

func BWASAHRInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 142)
}

func BWASAHRAction_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 143, a)
}

func BWASAHRAction_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 143, a)
}

func BWASAHRAction_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAHRAction_Lookup(p)
	return
}

func BWASAHRAction_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAHRAction_LookupString(p)
	return
}

func BWASAHRAction_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 143) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAHRAction_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 143) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAHRAction_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 143)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAHRAction_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 143)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAHRAction_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 143, a)
}

func BWASAHRAction_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 143, a)
}

func BWASAHRAction_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 143)
}

func BWASAccessNetworkInfo_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 144, a)
}

func BWASAccessNetworkInfo_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 144, a)
}

func BWASAccessNetworkInfo_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAccessNetworkInfo_Lookup(p)
	return
}

func BWASAccessNetworkInfo_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAccessNetworkInfo_LookupString(p)
	return
}

func BWASAccessNetworkInfo_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 144) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccessNetworkInfo_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 144) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAccessNetworkInfo_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 144)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAccessNetworkInfo_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 144)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAccessNetworkInfo_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 144, a)
}

func BWASAccessNetworkInfo_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 144, a)
}

func BWASAccessNetworkInfo_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 144)
}

func BWASChargingFunctionAddresses_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 145, a)
}

func BWASChargingFunctionAddresses_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 145, a)
}

func BWASChargingFunctionAddresses_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargingFunctionAddresses_Lookup(p)
	return
}

func BWASChargingFunctionAddresses_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargingFunctionAddresses_LookupString(p)
	return
}

func BWASChargingFunctionAddresses_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 145) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingFunctionAddresses_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 145) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargingFunctionAddresses_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 145)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargingFunctionAddresses_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 145)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargingFunctionAddresses_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 145, a)
}

func BWASChargingFunctionAddresses_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 145, a)
}

func BWASChargingFunctionAddresses_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 145)
}

func BWASChargeNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 146, a)
}

func BWASChargeNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 146, a)
}

func BWASChargeNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASChargeNumber_Lookup(p)
	return
}

func BWASChargeNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASChargeNumber_LookupString(p)
	return
}

func BWASChargeNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 146) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargeNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 146) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASChargeNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 146)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASChargeNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 146)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASChargeNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 146, a)
}

func BWASChargeNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 146, a)
}

func BWASChargeNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 146)
}

func BWASRelatedCallId_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 147, a)
}

func BWASRelatedCallId_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 147, a)
}

func BWASRelatedCallId_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRelatedCallId_Lookup(p)
	return
}

func BWASRelatedCallId_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRelatedCallId_LookupString(p)
	return
}

func BWASRelatedCallId_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 147) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRelatedCallId_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 147) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRelatedCallId_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 147)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRelatedCallId_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 147)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRelatedCallId_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 147, a)
}

func BWASRelatedCallId_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 147, a)
}

func BWASRelatedCallId_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 147)
}

func BWASRelatedCallIdReason_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 148, a)
}

func BWASRelatedCallIdReason_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 148, a)
}

func BWASRelatedCallIdReason_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRelatedCallIdReason_Lookup(p)
	return
}

func BWASRelatedCallIdReason_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRelatedCallIdReason_LookupString(p)
	return
}

func BWASRelatedCallIdReason_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 148) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRelatedCallIdReason_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 148) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRelatedCallIdReason_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 148)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRelatedCallIdReason_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 148)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRelatedCallIdReason_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 148, a)
}

func BWASRelatedCallIdReason_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 148, a)
}

func BWASRelatedCallIdReason_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 148)
}

func BWASTransferInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 149, a)
}

func BWASTransferInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 149, a)
}

func BWASTransferInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTransferInvokeTime_Lookup(p)
	return
}

func BWASTransferInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTransferInvokeTime_LookupString(p)
	return
}

func BWASTransferInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 149) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 149) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 149)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTransferInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 149)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTransferInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 149, a)
}

func BWASTransferInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 149, a)
}

func BWASTransferInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 149)
}

func BWASTransferResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 150, a)
}

func BWASTransferResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 150, a)
}

func BWASTransferResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTransferResult_Lookup(p)
	return
}

func BWASTransferResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTransferResult_LookupString(p)
	return
}

func BWASTransferResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 150) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 150) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 150)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTransferResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 150)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTransferResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 150, a)
}

func BWASTransferResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 150, a)
}

func BWASTransferResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 150)
}

func BWASTransferRelatedCallId_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 151, a)
}

func BWASTransferRelatedCallId_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 151, a)
}

func BWASTransferRelatedCallId_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTransferRelatedCallId_Lookup(p)
	return
}

func BWASTransferRelatedCallId_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTransferRelatedCallId_LookupString(p)
	return
}

func BWASTransferRelatedCallId_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 151) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferRelatedCallId_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 151) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferRelatedCallId_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 151)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTransferRelatedCallId_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 151)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTransferRelatedCallId_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 151, a)
}

func BWASTransferRelatedCallId_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 151, a)
}

func BWASTransferRelatedCallId_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 151)
}

func BWASTransferType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 152, a)
}

func BWASTransferType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 152, a)
}

func BWASTransferType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTransferType_Lookup(p)
	return
}

func BWASTransferType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTransferType_LookupString(p)
	return
}

func BWASTransferType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 152) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 152) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTransferType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 152)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTransferType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 152)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTransferType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 152, a)
}

func BWASTransferType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 152, a)
}

func BWASTransferType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 152)
}

func BWASConfStartTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 153, a)
}

func BWASConfStartTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 153, a)
}

func BWASConfStartTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConfStartTime_Lookup(p)
	return
}

func BWASConfStartTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConfStartTime_LookupString(p)
	return
}

func BWASConfStartTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 153) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfStartTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 153) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfStartTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 153)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConfStartTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 153)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConfStartTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 153, a)
}

func BWASConfStartTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 153, a)
}

func BWASConfStartTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 153)
}

func BWASConfStopTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 154, a)
}

func BWASConfStopTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 154, a)
}

func BWASConfStopTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConfStopTime_Lookup(p)
	return
}

func BWASConfStopTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConfStopTime_LookupString(p)
	return
}

func BWASConfStopTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 154) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfStopTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 154) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfStopTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 154)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConfStopTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 154)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConfStopTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 154, a)
}

func BWASConfStopTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 154, a)
}

func BWASConfStopTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 154)
}

func BWASConfID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 155, a)
}

func BWASConfID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 155, a)
}

func BWASConfID_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConfID_Lookup(p)
	return
}

func BWASConfID_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConfID_LookupString(p)
	return
}

func BWASConfID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 155) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 155) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 155)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConfID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 155)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConfID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 155, a)
}

func BWASConfID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 155, a)
}

func BWASConfID_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 155)
}

func BWASConfType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 156, a)
}

func BWASConfType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 156, a)
}

func BWASConfType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConfType_Lookup(p)
	return
}

func BWASConfType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConfType_LookupString(p)
	return
}

func BWASConfType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 156) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 156) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 156)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConfType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 156)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConfType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 156, a)
}

func BWASConfType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 156, a)
}

func BWASConfType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 156)
}

func BWASCodecUsage_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 157, a)
}

func BWASCodecUsage_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 157, a)
}

func BWASCodecUsage_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCodecUsage_Lookup(p)
	return
}

func BWASCodecUsage_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCodecUsage_LookupString(p)
	return
}

func BWASCodecUsage_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 157) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCodecUsage_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 157) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCodecUsage_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 157)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCodecUsage_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 157)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCodecUsage_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 157, a)
}

func BWASCodecUsage_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 157, a)
}

func BWASCodecUsage_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 157)
}

func BWASVmbActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 158, a)
}

func BWASVmbActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 158, a)
}

func BWASVmbActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmbActInvokeTime_Lookup(p)
	return
}

func BWASVmbActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmbActInvokeTime_LookupString(p)
	return
}

func BWASVmbActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 158) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 158) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 158)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmbActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 158)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmbActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 158, a)
}

func BWASVmbActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 158, a)
}

func BWASVmbActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 158)
}

func BWASVmbActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 159, a)
}

func BWASVmbActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 159, a)
}

func BWASVmbActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmbActFacResult_Lookup(p)
	return
}

func BWASVmbActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmbActFacResult_LookupString(p)
	return
}

func BWASVmbActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 159) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 159) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 159)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmbActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 159)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmbActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 159, a)
}

func BWASVmbActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 159, a)
}

func BWASVmbActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 159)
}

func BWASVmbDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 160, a)
}

func BWASVmbDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 160, a)
}

func BWASVmbDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmbDeactInvokeTime_Lookup(p)
	return
}

func BWASVmbDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmbDeactInvokeTime_LookupString(p)
	return
}

func BWASVmbDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 160) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 160) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 160)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmbDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 160)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmbDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 160, a)
}

func BWASVmbDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 160, a)
}

func BWASVmbDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 160)
}

func BWASVmbDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 161, a)
}

func BWASVmbDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 161, a)
}

func BWASVmbDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmbDeactFacResult_Lookup(p)
	return
}

func BWASVmbDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmbDeactFacResult_LookupString(p)
	return
}

func BWASVmbDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 161) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 161) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmbDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 161)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmbDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 161)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmbDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 161, a)
}

func BWASVmbDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 161, a)
}

func BWASVmbDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 161)
}

func BWASVmnaActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 162, a)
}

func BWASVmnaActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 162, a)
}

func BWASVmnaActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmnaActInvokeTime_Lookup(p)
	return
}

func BWASVmnaActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmnaActInvokeTime_LookupString(p)
	return
}

func BWASVmnaActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 162) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 162) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 162)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmnaActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 162)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmnaActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 162, a)
}

func BWASVmnaActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 162, a)
}

func BWASVmnaActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 162)
}

func BWASVmnaActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 163, a)
}

func BWASVmnaActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 163, a)
}

func BWASVmnaActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmnaActFacResult_Lookup(p)
	return
}

func BWASVmnaActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmnaActFacResult_LookupString(p)
	return
}

func BWASVmnaActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 163) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 163) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 163)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmnaActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 163)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmnaActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 163, a)
}

func BWASVmnaActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 163, a)
}

func BWASVmnaActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 163)
}

func BWASVmnaDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 164, a)
}

func BWASVmnaDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 164, a)
}

func BWASVmnaDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmnaDeactInvokeTime_Lookup(p)
	return
}

func BWASVmnaDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmnaDeactInvokeTime_LookupString(p)
	return
}

func BWASVmnaDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 164) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 164) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 164)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmnaDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 164)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmnaDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 164, a)
}

func BWASVmnaDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 164, a)
}

func BWASVmnaDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 164)
}

func BWASVmnaDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 165, a)
}

func BWASVmnaDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 165, a)
}

func BWASVmnaDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmnaDeactFacResult_Lookup(p)
	return
}

func BWASVmnaDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmnaDeactFacResult_LookupString(p)
	return
}

func BWASVmnaDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 165) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 165) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmnaDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 165)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmnaDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 165)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmnaDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 165, a)
}

func BWASVmnaDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 165, a)
}

func BWASVmnaDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 165)
}

func BWASVmaActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 166, a)
}

func BWASVmaActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 166, a)
}

func BWASVmaActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmaActInvokeTime_Lookup(p)
	return
}

func BWASVmaActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmaActInvokeTime_LookupString(p)
	return
}

func BWASVmaActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 166) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 166) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 166)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmaActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 166)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmaActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 166, a)
}

func BWASVmaActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 166, a)
}

func BWASVmaActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 166)
}

func BWASVmaActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 167, a)
}

func BWASVmaActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 167, a)
}

func BWASVmaActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmaActFacResult_Lookup(p)
	return
}

func BWASVmaActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmaActFacResult_LookupString(p)
	return
}

func BWASVmaActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 167) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 167) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 167)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmaActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 167)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmaActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 167, a)
}

func BWASVmaActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 167, a)
}

func BWASVmaActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 167)
}

func BWASVmaDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 168, a)
}

func BWASVmaDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 168, a)
}

func BWASVmaDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmaDeactInvokeTime_Lookup(p)
	return
}

func BWASVmaDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmaDeactInvokeTime_LookupString(p)
	return
}

func BWASVmaDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 168) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 168) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 168)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmaDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 168)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmaDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 168, a)
}

func BWASVmaDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 168, a)
}

func BWASVmaDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 168)
}

func BWASVmaDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 169, a)
}

func BWASVmaDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 169, a)
}

func BWASVmaDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASVmaDeactFacResult_Lookup(p)
	return
}

func BWASVmaDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASVmaDeactFacResult_LookupString(p)
	return
}

func BWASVmaDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 169) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 169) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASVmaDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 169)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASVmaDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 169)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASVmaDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 169, a)
}

func BWASVmaDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 169, a)
}

func BWASVmaDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 169)
}

func BWASNoAnswerSetInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 170, a)
}

func BWASNoAnswerSetInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 170, a)
}

func BWASNoAnswerSetInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNoAnswerSetInvokeTime_Lookup(p)
	return
}

func BWASNoAnswerSetInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNoAnswerSetInvokeTime_LookupString(p)
	return
}

func BWASNoAnswerSetInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 170) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNoAnswerSetInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 170) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNoAnswerSetInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 170)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNoAnswerSetInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 170)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNoAnswerSetInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 170, a)
}

func BWASNoAnswerSetInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 170, a)
}

func BWASNoAnswerSetInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 170)
}

func BWASNoAnswerSetFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 171, a)
}

func BWASNoAnswerSetFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 171, a)
}

func BWASNoAnswerSetFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNoAnswerSetFacResult_Lookup(p)
	return
}

func BWASNoAnswerSetFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNoAnswerSetFacResult_LookupString(p)
	return
}

func BWASNoAnswerSetFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 171) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNoAnswerSetFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 171) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNoAnswerSetFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 171)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNoAnswerSetFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 171)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNoAnswerSetFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 171, a)
}

func BWASNoAnswerSetFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 171, a)
}

func BWASNoAnswerSetFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 171)
}

func BWASClidBlockingActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 172, a)
}

func BWASClidBlockingActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 172, a)
}

func BWASClidBlockingActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidBlockingActInvokeTime_Lookup(p)
	return
}

func BWASClidBlockingActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidBlockingActInvokeTime_LookupString(p)
	return
}

func BWASClidBlockingActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 172) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 172) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 172)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidBlockingActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 172)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidBlockingActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 172, a)
}

func BWASClidBlockingActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 172, a)
}

func BWASClidBlockingActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 172)
}

func BWASClidBlockingActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 173, a)
}

func BWASClidBlockingActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 173, a)
}

func BWASClidBlockingActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidBlockingActFacResult_Lookup(p)
	return
}

func BWASClidBlockingActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidBlockingActFacResult_LookupString(p)
	return
}

func BWASClidBlockingActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 173) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 173) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 173)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidBlockingActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 173)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidBlockingActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 173, a)
}

func BWASClidBlockingActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 173, a)
}

func BWASClidBlockingActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 173)
}

func BWASClidBlockingDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 174, a)
}

func BWASClidBlockingDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 174, a)
}

func BWASClidBlockingDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidBlockingDeactInvokeTime_Lookup(p)
	return
}

func BWASClidBlockingDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidBlockingDeactInvokeTime_LookupString(p)
	return
}

func BWASClidBlockingDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 174) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 174) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 174)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidBlockingDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 174)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidBlockingDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 174, a)
}

func BWASClidBlockingDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 174, a)
}

func BWASClidBlockingDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 174)
}

func BWASClidBlockingDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 175, a)
}

func BWASClidBlockingDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 175, a)
}

func BWASClidBlockingDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASClidBlockingDeactFacResult_Lookup(p)
	return
}

func BWASClidBlockingDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASClidBlockingDeactFacResult_LookupString(p)
	return
}

func BWASClidBlockingDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 175) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 175) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASClidBlockingDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 175)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASClidBlockingDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 175)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASClidBlockingDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 175, a)
}

func BWASClidBlockingDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 175, a)
}

func BWASClidBlockingDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 175)
}

func BWASCallWaitingActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 176, a)
}

func BWASCallWaitingActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 176, a)
}

func BWASCallWaitingActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallWaitingActInvokeTime_Lookup(p)
	return
}

func BWASCallWaitingActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallWaitingActInvokeTime_LookupString(p)
	return
}

func BWASCallWaitingActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 176) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 176) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 176)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallWaitingActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 176)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallWaitingActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 176, a)
}

func BWASCallWaitingActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 176, a)
}

func BWASCallWaitingActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 176)
}

func BWASCallWaitingActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 177, a)
}

func BWASCallWaitingActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 177, a)
}

func BWASCallWaitingActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallWaitingActFacResult_Lookup(p)
	return
}

func BWASCallWaitingActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallWaitingActFacResult_LookupString(p)
	return
}

func BWASCallWaitingActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 177) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 177) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 177)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallWaitingActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 177)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallWaitingActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 177, a)
}

func BWASCallWaitingActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 177, a)
}

func BWASCallWaitingActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 177)
}

func BWASCallWaitingDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 178, a)
}

func BWASCallWaitingDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 178, a)
}

func BWASCallWaitingDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallWaitingDeactInvokeTime_Lookup(p)
	return
}

func BWASCallWaitingDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallWaitingDeactInvokeTime_LookupString(p)
	return
}

func BWASCallWaitingDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 178) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 178) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 178)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallWaitingDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 178)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallWaitingDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 178, a)
}

func BWASCallWaitingDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 178, a)
}

func BWASCallWaitingDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 178)
}

func BWASCallWaitingDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 179, a)
}

func BWASCallWaitingDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 179, a)
}

func BWASCallWaitingDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallWaitingDeactFacResult_Lookup(p)
	return
}

func BWASCallWaitingDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallWaitingDeactFacResult_LookupString(p)
	return
}

func BWASCallWaitingDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 179) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 179) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallWaitingDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 179)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallWaitingDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 179)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallWaitingDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 179, a)
}

func BWASCallWaitingDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 179, a)
}

func BWASCallWaitingDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 179)
}

func BWASFaxMessaging_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 180, a)
}

func BWASFaxMessaging_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 180, a)
}

func BWASFaxMessaging_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASFaxMessaging_Lookup(p)
	return
}

func BWASFaxMessaging_GetString(p *radius.Packet) (value string) {
	value, _ = BWASFaxMessaging_LookupString(p)
	return
}

func BWASFaxMessaging_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 180) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFaxMessaging_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 180) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASFaxMessaging_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 180)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASFaxMessaging_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 180)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASFaxMessaging_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 180, a)
}

func BWASFaxMessaging_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 180, a)
}

func BWASFaxMessaging_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 180)
}

func BWASTSDDigits_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 181, a)
}

func BWASTSDDigits_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 181, a)
}

func BWASTSDDigits_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTSDDigits_Lookup(p)
	return
}

func BWASTSDDigits_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTSDDigits_LookupString(p)
	return
}

func BWASTSDDigits_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 181) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTSDDigits_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 181) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTSDDigits_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 181)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTSDDigits_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 181)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTSDDigits_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 181, a)
}

func BWASTSDDigits_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 181, a)
}

func BWASTSDDigits_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 181)
}

func BWASTrunkGroupInfo_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 182, a)
}

func BWASTrunkGroupInfo_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 182, a)
}

func BWASTrunkGroupInfo_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASTrunkGroupInfo_Lookup(p)
	return
}

func BWASTrunkGroupInfo_GetString(p *radius.Packet) (value string) {
	value, _ = BWASTrunkGroupInfo_LookupString(p)
	return
}

func BWASTrunkGroupInfo_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 182) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTrunkGroupInfo_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 182) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASTrunkGroupInfo_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 182)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASTrunkGroupInfo_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 182)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASTrunkGroupInfo_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 182, a)
}

func BWASTrunkGroupInfo_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 182, a)
}

func BWASTrunkGroupInfo_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 182)
}

func BWASRecallType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 183, a)
}

func BWASRecallType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 183, a)
}

func BWASRecallType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRecallType_Lookup(p)
	return
}

func BWASRecallType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRecallType_LookupString(p)
	return
}

func BWASRecallType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 183) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRecallType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 183) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRecallType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 183)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRecallType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 183)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRecallType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 183, a)
}

func BWASRecallType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 183, a)
}

func BWASRecallType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 183)
}

func BWASCfnrcActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 184, a)
}

func BWASCfnrcActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 184, a)
}

func BWASCfnrcActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnrcActInvokeTime_Lookup(p)
	return
}

func BWASCfnrcActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnrcActInvokeTime_LookupString(p)
	return
}

func BWASCfnrcActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 184) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 184) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 184)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnrcActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 184)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnrcActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 184, a)
}

func BWASCfnrcActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 184, a)
}

func BWASCfnrcActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 184)
}

func BWASCfnrcActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 185, a)
}

func BWASCfnrcActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 185, a)
}

func BWASCfnrcActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnrcActFacResult_Lookup(p)
	return
}

func BWASCfnrcActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnrcActFacResult_LookupString(p)
	return
}

func BWASCfnrcActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 185) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 185) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 185)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnrcActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 185)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnrcActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 185, a)
}

func BWASCfnrcActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 185, a)
}

func BWASCfnrcActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 185)
}

func BWASCfnrcDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 186, a)
}

func BWASCfnrcDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 186, a)
}

func BWASCfnrcDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnrcDeactInvokeTime_Lookup(p)
	return
}

func BWASCfnrcDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnrcDeactInvokeTime_LookupString(p)
	return
}

func BWASCfnrcDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 186) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 186) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 186)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnrcDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 186)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnrcDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 186, a)
}

func BWASCfnrcDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 186, a)
}

func BWASCfnrcDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 186)
}

func BWASCfnrcDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 187, a)
}

func BWASCfnrcDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 187, a)
}

func BWASCfnrcDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnrcDeactFacResult_Lookup(p)
	return
}

func BWASCfnrcDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnrcDeactFacResult_LookupString(p)
	return
}

func BWASCfnrcDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 187) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 187) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnrcDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 187)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnrcDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 187)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnrcDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 187, a)
}

func BWASCfnrcDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 187, a)
}

func BWASCfnrcDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 187)
}

func BWASQ850Cause_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 188, a)
}

func BWASQ850Cause_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 188, a)
}

func BWASQ850Cause_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASQ850Cause_Lookup(p)
	return
}

func BWASQ850Cause_GetString(p *radius.Packet) (value string) {
	value, _ = BWASQ850Cause_LookupString(p)
	return
}

func BWASQ850Cause_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 188) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASQ850Cause_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 188) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASQ850Cause_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 188)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASQ850Cause_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 188)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASQ850Cause_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 188, a)
}

func BWASQ850Cause_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 188, a)
}

func BWASQ850Cause_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 188)
}

func BWASDialedDigitsContext_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 189, a)
}

func BWASDialedDigitsContext_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 189, a)
}

func BWASDialedDigitsContext_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASDialedDigitsContext_Lookup(p)
	return
}

func BWASDialedDigitsContext_GetString(p *radius.Packet) (value string) {
	value, _ = BWASDialedDigitsContext_LookupString(p)
	return
}

func BWASDialedDigitsContext_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 189) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDialedDigitsContext_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 189) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASDialedDigitsContext_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 189)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASDialedDigitsContext_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 189)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASDialedDigitsContext_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 189, a)
}

func BWASDialedDigitsContext_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 189, a)
}

func BWASDialedDigitsContext_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 189)
}

func BWASCalledNumberContext_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 190, a)
}

func BWASCalledNumberContext_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 190, a)
}

func BWASCalledNumberContext_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCalledNumberContext_Lookup(p)
	return
}

func BWASCalledNumberContext_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCalledNumberContext_LookupString(p)
	return
}

func BWASCalledNumberContext_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 190) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledNumberContext_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 190) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledNumberContext_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 190)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCalledNumberContext_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 190)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCalledNumberContext_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 190, a)
}

func BWASCalledNumberContext_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 190, a)
}

func BWASCalledNumberContext_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 190)
}

func BWASNetworkTranslatedNumberContext_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 191, a)
}

func BWASNetworkTranslatedNumberContext_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 191, a)
}

func BWASNetworkTranslatedNumberContext_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASNetworkTranslatedNumberContext_Lookup(p)
	return
}

func BWASNetworkTranslatedNumberContext_GetString(p *radius.Packet) (value string) {
	value, _ = BWASNetworkTranslatedNumberContext_LookupString(p)
	return
}

func BWASNetworkTranslatedNumberContext_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 191) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkTranslatedNumberContext_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 191) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASNetworkTranslatedNumberContext_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 191)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASNetworkTranslatedNumberContext_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 191)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASNetworkTranslatedNumberContext_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 191, a)
}

func BWASNetworkTranslatedNumberContext_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 191, a)
}

func BWASNetworkTranslatedNumberContext_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 191)
}

func BWASCallingNumberContext_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 192, a)
}

func BWASCallingNumberContext_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 192, a)
}

func BWASCallingNumberContext_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallingNumberContext_Lookup(p)
	return
}

func BWASCallingNumberContext_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallingNumberContext_LookupString(p)
	return
}

func BWASCallingNumberContext_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 192) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingNumberContext_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 192) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallingNumberContext_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 192)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallingNumberContext_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 192)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallingNumberContext_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 192, a)
}

func BWASCallingNumberContext_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 192, a)
}

func BWASCallingNumberContext_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 192)
}

func BWASOriginalCalledNumberContext_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 193, a)
}

func BWASOriginalCalledNumberContext_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 193, a)
}

func BWASOriginalCalledNumberContext_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOriginalCalledNumberContext_Lookup(p)
	return
}

func BWASOriginalCalledNumberContext_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOriginalCalledNumberContext_LookupString(p)
	return
}

func BWASOriginalCalledNumberContext_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 193) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledNumberContext_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 193) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginalCalledNumberContext_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 193)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOriginalCalledNumberContext_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 193)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOriginalCalledNumberContext_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 193, a)
}

func BWASOriginalCalledNumberContext_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 193, a)
}

func BWASOriginalCalledNumberContext_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 193)
}

func BWASRedirectingNumberContext_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 194, a)
}

func BWASRedirectingNumberContext_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 194, a)
}

func BWASRedirectingNumberContext_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRedirectingNumberContext_Lookup(p)
	return
}

func BWASRedirectingNumberContext_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRedirectingNumberContext_LookupString(p)
	return
}

func BWASRedirectingNumberContext_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 194) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingNumberContext_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 194) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRedirectingNumberContext_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 194)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRedirectingNumberContext_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 194)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRedirectingNumberContext_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 194, a)
}

func BWASRedirectingNumberContext_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 194, a)
}

func BWASRedirectingNumberContext_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 194)
}

func BWASLocationControlActResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 195, a)
}

func BWASLocationControlActResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 195, a)
}

func BWASLocationControlActResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASLocationControlActResult_Lookup(p)
	return
}

func BWASLocationControlActResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASLocationControlActResult_LookupString(p)
	return
}

func BWASLocationControlActResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 195) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLocationControlActResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 195) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLocationControlActResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 195)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASLocationControlActResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 195)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASLocationControlActResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 195, a)
}

func BWASLocationControlActResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 195, a)
}

func BWASLocationControlActResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 195)
}

func BWASLocationControlDeactResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 196, a)
}

func BWASLocationControlDeactResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 196, a)
}

func BWASLocationControlDeactResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASLocationControlDeactResult_Lookup(p)
	return
}

func BWASLocationControlDeactResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASLocationControlDeactResult_LookupString(p)
	return
}

func BWASLocationControlDeactResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 196) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLocationControlDeactResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 196) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASLocationControlDeactResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 196)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASLocationControlDeactResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 196)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASLocationControlDeactResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 196, a)
}

func BWASLocationControlDeactResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 196, a)
}

func BWASLocationControlDeactResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 196)
}

func BWASCallRetrieveResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 197, a)
}

func BWASCallRetrieveResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 197, a)
}

func BWASCallRetrieveResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallRetrieveResult_Lookup(p)
	return
}

func BWASCallRetrieveResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallRetrieveResult_LookupString(p)
	return
}

func BWASCallRetrieveResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 197) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallRetrieveResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 197) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallRetrieveResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 197)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallRetrieveResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 197)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallRetrieveResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 197, a)
}

func BWASCallRetrieveResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 197, a)
}

func BWASCallRetrieveResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 197)
}

func BWASRoutingNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 198, a)
}

func BWASRoutingNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 198, a)
}

func BWASRoutingNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASRoutingNumber_Lookup(p)
	return
}

func BWASRoutingNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASRoutingNumber_LookupString(p)
	return
}

func BWASRoutingNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 198) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRoutingNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 198) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASRoutingNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 198)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASRoutingNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 198)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASRoutingNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 198, a)
}

func BWASRoutingNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 198, a)
}

func BWASRoutingNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 198)
}

func BWASOriginationMethod_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 199, a)
}

func BWASOriginationMethod_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 199, a)
}

func BWASOriginationMethod_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOriginationMethod_Lookup(p)
	return
}

func BWASOriginationMethod_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOriginationMethod_LookupString(p)
	return
}

func BWASOriginationMethod_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 199) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginationMethod_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 199) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOriginationMethod_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 199)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOriginationMethod_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 199)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOriginationMethod_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 199, a)
}

func BWASOriginationMethod_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 199, a)
}

func BWASOriginationMethod_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 199)
}

func BWASCallParkedInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 200, a)
}

func BWASCallParkedInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 200, a)
}

func BWASCallParkedInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallParkedInvokeTime_Lookup(p)
	return
}

func BWASCallParkedInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallParkedInvokeTime_LookupString(p)
	return
}

func BWASCallParkedInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 200) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkedInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 200) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallParkedInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 200)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallParkedInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 200)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallParkedInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 200, a)
}

func BWASCallParkedInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 200, a)
}

func BWASCallParkedInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 200)
}

func BWASBARelatedCallID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 201, a)
}

func BWASBARelatedCallID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 201, a)
}

func BWASBARelatedCallID_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASBARelatedCallID_Lookup(p)
	return
}

func BWASBARelatedCallID_GetString(p *radius.Packet) (value string) {
	value, _ = BWASBARelatedCallID_LookupString(p)
	return
}

func BWASBARelatedCallID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 201) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBARelatedCallID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 201) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBARelatedCallID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 201)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASBARelatedCallID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 201)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASBARelatedCallID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 201, a)
}

func BWASBARelatedCallID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 201, a)
}

func BWASBARelatedCallID_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 201)
}

func BWASAcrActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 202, a)
}

func BWASAcrActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 202, a)
}

func BWASAcrActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcrActInvokeTime_Lookup(p)
	return
}

func BWASAcrActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcrActInvokeTime_LookupString(p)
	return
}

func BWASAcrActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 202) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 202) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 202)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcrActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 202)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcrActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 202, a)
}

func BWASAcrActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 202, a)
}

func BWASAcrActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 202)
}

func BWASAcrActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 203, a)
}

func BWASAcrActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 203, a)
}

func BWASAcrActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcrActFacResult_Lookup(p)
	return
}

func BWASAcrActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcrActFacResult_LookupString(p)
	return
}

func BWASAcrActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 203) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 203) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 203)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcrActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 203)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcrActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 203, a)
}

func BWASAcrActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 203, a)
}

func BWASAcrActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 203)
}

func BWASAcrDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 204, a)
}

func BWASAcrDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 204, a)
}

func BWASAcrDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcrDeactInvokeTime_Lookup(p)
	return
}

func BWASAcrDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcrDeactInvokeTime_LookupString(p)
	return
}

func BWASAcrDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 204) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 204) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 204)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcrDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 204)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcrDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 204, a)
}

func BWASAcrDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 204, a)
}

func BWASAcrDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 204)
}

func BWASAcrDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 205, a)
}

func BWASAcrDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 205, a)
}

func BWASAcrDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAcrDeactFacResult_Lookup(p)
	return
}

func BWASAcrDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAcrDeactFacResult_LookupString(p)
	return
}

func BWASAcrDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 205) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 205) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAcrDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 205)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAcrDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 205)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAcrDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 205, a)
}

func BWASAcrDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 205, a)
}

func BWASAcrDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 205)
}

func BWASOutsideAccessCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 206, a)
}

func BWASOutsideAccessCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 206, a)
}

func BWASOutsideAccessCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOutsideAccessCode_Lookup(p)
	return
}

func BWASOutsideAccessCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOutsideAccessCode_LookupString(p)
	return
}

func BWASOutsideAccessCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 206) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOutsideAccessCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 206) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOutsideAccessCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 206)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOutsideAccessCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 206)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOutsideAccessCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 206, a)
}

func BWASOutsideAccessCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 206, a)
}

func BWASOutsideAccessCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 206)
}

func BWASPrimaryDeviceLinePort_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 207, a)
}

func BWASPrimaryDeviceLinePort_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 207, a)
}

func BWASPrimaryDeviceLinePort_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASPrimaryDeviceLinePort_Lookup(p)
	return
}

func BWASPrimaryDeviceLinePort_GetString(p *radius.Packet) (value string) {
	value, _ = BWASPrimaryDeviceLinePort_LookupString(p)
	return
}

func BWASPrimaryDeviceLinePort_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 207) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPrimaryDeviceLinePort_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 207) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPrimaryDeviceLinePort_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 207)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASPrimaryDeviceLinePort_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 207)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASPrimaryDeviceLinePort_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 207, a)
}

func BWASPrimaryDeviceLinePort_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 207, a)
}

func BWASPrimaryDeviceLinePort_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 207)
}

func BWASCalledAssertedIdentity_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 208, a)
}

func BWASCalledAssertedIdentity_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 208, a)
}

func BWASCalledAssertedIdentity_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCalledAssertedIdentity_Lookup(p)
	return
}

func BWASCalledAssertedIdentity_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCalledAssertedIdentity_LookupString(p)
	return
}

func BWASCalledAssertedIdentity_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 208) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledAssertedIdentity_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 208) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledAssertedIdentity_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 208)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCalledAssertedIdentity_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 208)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCalledAssertedIdentity_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 208, a)
}

func BWASCalledAssertedIdentity_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 208, a)
}

func BWASCalledAssertedIdentity_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 208)
}

func BWASCalledAssertedPresIndicator_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 209, a)
}

func BWASCalledAssertedPresIndicator_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 209, a)
}

func BWASCalledAssertedPresIndicator_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCalledAssertedPresIndicator_Lookup(p)
	return
}

func BWASCalledAssertedPresIndicator_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCalledAssertedPresIndicator_LookupString(p)
	return
}

func BWASCalledAssertedPresIndicator_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 209) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledAssertedPresIndicator_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 209) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCalledAssertedPresIndicator_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 209)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCalledAssertedPresIndicator_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 209)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCalledAssertedPresIndicator_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 209, a)
}

func BWASCalledAssertedPresIndicator_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 209, a)
}

func BWASCalledAssertedPresIndicator_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 209)
}

func BWASSDP_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 210, a)
}

func BWASSDP_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 210, a)
}

func BWASSDP_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSDP_Lookup(p)
	return
}

func BWASSDP_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSDP_LookupString(p)
	return
}

func BWASSDP_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 210) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSDP_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 210) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSDP_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 210)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSDP_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 210)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSDP_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 210, a)
}

func BWASSDP_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 210, a)
}

func BWASSDP_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 210)
}

func BWASMediaInitiatorFlag_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 211, a)
}

func BWASMediaInitiatorFlag_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 211, a)
}

func BWASMediaInitiatorFlag_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASMediaInitiatorFlag_Lookup(p)
	return
}

func BWASMediaInitiatorFlag_GetString(p *radius.Packet) (value string) {
	value, _ = BWASMediaInitiatorFlag_LookupString(p)
	return
}

func BWASMediaInitiatorFlag_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 211) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASMediaInitiatorFlag_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 211) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASMediaInitiatorFlag_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 211)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASMediaInitiatorFlag_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 211)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASMediaInitiatorFlag_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 211, a)
}

func BWASMediaInitiatorFlag_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 211, a)
}

func BWASMediaInitiatorFlag_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 211)
}

func BWASSDPOfferTimestamp_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 212, a)
}

func BWASSDPOfferTimestamp_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 212, a)
}

func BWASSDPOfferTimestamp_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSDPOfferTimestamp_Lookup(p)
	return
}

func BWASSDPOfferTimestamp_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSDPOfferTimestamp_LookupString(p)
	return
}

func BWASSDPOfferTimestamp_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 212) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSDPOfferTimestamp_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 212) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSDPOfferTimestamp_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 212)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSDPOfferTimestamp_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 212)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSDPOfferTimestamp_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 212, a)
}

func BWASSDPOfferTimestamp_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 212, a)
}

func BWASSDPOfferTimestamp_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 212)
}

func BWASSDPAnswerTimestamp_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 213, a)
}

func BWASSDPAnswerTimestamp_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 213, a)
}

func BWASSDPAnswerTimestamp_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSDPAnswerTimestamp_Lookup(p)
	return
}

func BWASSDPAnswerTimestamp_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSDPAnswerTimestamp_LookupString(p)
	return
}

func BWASSDPAnswerTimestamp_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 213) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSDPAnswerTimestamp_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 213) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSDPAnswerTimestamp_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 213)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSDPAnswerTimestamp_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 213)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSDPAnswerTimestamp_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 213, a)
}

func BWASSDPAnswerTimestamp_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 213, a)
}

func BWASSDPAnswerTimestamp_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 213)
}

func BWASEarlyMediaSDP_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 214, a)
}

func BWASEarlyMediaSDP_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 214, a)
}

func BWASEarlyMediaSDP_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASEarlyMediaSDP_Lookup(p)
	return
}

func BWASEarlyMediaSDP_GetString(p *radius.Packet) (value string) {
	value, _ = BWASEarlyMediaSDP_LookupString(p)
	return
}

func BWASEarlyMediaSDP_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 214) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASEarlyMediaSDP_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 214) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASEarlyMediaSDP_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 214)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASEarlyMediaSDP_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 214)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASEarlyMediaSDP_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 214, a)
}

func BWASEarlyMediaSDP_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 214, a)
}

func BWASEarlyMediaSDP_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 214)
}

func BWASEarlyMediaInitiatorFlag_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 215, a)
}

func BWASEarlyMediaInitiatorFlag_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 215, a)
}

func BWASEarlyMediaInitiatorFlag_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASEarlyMediaInitiatorFlag_Lookup(p)
	return
}

func BWASEarlyMediaInitiatorFlag_GetString(p *radius.Packet) (value string) {
	value, _ = BWASEarlyMediaInitiatorFlag_LookupString(p)
	return
}

func BWASEarlyMediaInitiatorFlag_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 215) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASEarlyMediaInitiatorFlag_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 215) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASEarlyMediaInitiatorFlag_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 215)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASEarlyMediaInitiatorFlag_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 215)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASEarlyMediaInitiatorFlag_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 215, a)
}

func BWASEarlyMediaInitiatorFlag_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 215, a)
}

func BWASEarlyMediaInitiatorFlag_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 215)
}

func BWASBodyContentType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 216, a)
}

func BWASBodyContentType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 216, a)
}

func BWASBodyContentType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASBodyContentType_Lookup(p)
	return
}

func BWASBodyContentType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASBodyContentType_LookupString(p)
	return
}

func BWASBodyContentType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 216) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyContentType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 216) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyContentType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 216)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASBodyContentType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 216)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASBodyContentType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 216, a)
}

func BWASBodyContentType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 216, a)
}

func BWASBodyContentType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 216)
}

func BWASBodyContentLength_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 217, a)
}

func BWASBodyContentLength_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 217, a)
}

func BWASBodyContentLength_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASBodyContentLength_Lookup(p)
	return
}

func BWASBodyContentLength_GetString(p *radius.Packet) (value string) {
	value, _ = BWASBodyContentLength_LookupString(p)
	return
}

func BWASBodyContentLength_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 217) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyContentLength_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 217) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyContentLength_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 217)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASBodyContentLength_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 217)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASBodyContentLength_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 217, a)
}

func BWASBodyContentLength_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 217, a)
}

func BWASBodyContentLength_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 217)
}

func BWASBodyContentDisposition_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 218, a)
}

func BWASBodyContentDisposition_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 218, a)
}

func BWASBodyContentDisposition_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASBodyContentDisposition_Lookup(p)
	return
}

func BWASBodyContentDisposition_GetString(p *radius.Packet) (value string) {
	value, _ = BWASBodyContentDisposition_LookupString(p)
	return
}

func BWASBodyContentDisposition_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 218) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyContentDisposition_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 218) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyContentDisposition_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 218)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASBodyContentDisposition_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 218)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASBodyContentDisposition_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 218, a)
}

func BWASBodyContentDisposition_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 218, a)
}

func BWASBodyContentDisposition_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 218)
}

func BWASBodyOriginator_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 219, a)
}

func BWASBodyOriginator_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 219, a)
}

func BWASBodyOriginator_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASBodyOriginator_Lookup(p)
	return
}

func BWASBodyOriginator_GetString(p *radius.Packet) (value string) {
	value, _ = BWASBodyOriginator_LookupString(p)
	return
}

func BWASBodyOriginator_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 219) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyOriginator_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 219) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASBodyOriginator_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 219)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASBodyOriginator_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 219)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASBodyOriginator_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 219, a)
}

func BWASBodyOriginator_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 219, a)
}

func BWASBodyOriginator_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 219)
}

func BWASSIPErrorCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 220, a)
}

func BWASSIPErrorCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 220, a)
}

func BWASSIPErrorCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASSIPErrorCode_Lookup(p)
	return
}

func BWASSIPErrorCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASSIPErrorCode_LookupString(p)
	return
}

func BWASSIPErrorCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 220) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSIPErrorCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 220) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASSIPErrorCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 220)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASSIPErrorCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 220)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASSIPErrorCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 220, a)
}

func BWASSIPErrorCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 220, a)
}

func BWASSIPErrorCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 220)
}

func BWASOtherInfoInPCV_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 221, a)
}

func BWASOtherInfoInPCV_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 221, a)
}

func BWASOtherInfoInPCV_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASOtherInfoInPCV_Lookup(p)
	return
}

func BWASOtherInfoInPCV_GetString(p *radius.Packet) (value string) {
	value, _ = BWASOtherInfoInPCV_LookupString(p)
	return
}

func BWASOtherInfoInPCV_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 221) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOtherInfoInPCV_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 221) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASOtherInfoInPCV_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 221)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASOtherInfoInPCV_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 221)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASOtherInfoInPCV_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 221, a)
}

func BWASOtherInfoInPCV_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 221, a)
}

func BWASOtherInfoInPCV_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 221)
}

func BWASReceivedCallingNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 222, a)
}

func BWASReceivedCallingNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 222, a)
}

func BWASReceivedCallingNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReceivedCallingNumber_Lookup(p)
	return
}

func BWASReceivedCallingNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReceivedCallingNumber_LookupString(p)
	return
}

func BWASReceivedCallingNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 222) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReceivedCallingNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 222) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReceivedCallingNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 222)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReceivedCallingNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 222)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReceivedCallingNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 222, a)
}

func BWASReceivedCallingNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 222, a)
}

func BWASReceivedCallingNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 222)
}

func BWASCustomRingbackMediaSelection_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 223, a)
}

func BWASCustomRingbackMediaSelection_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 223, a)
}

func BWASCustomRingbackMediaSelection_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCustomRingbackMediaSelection_Lookup(p)
	return
}

func BWASCustomRingbackMediaSelection_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCustomRingbackMediaSelection_LookupString(p)
	return
}

func BWASCustomRingbackMediaSelection_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 223) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCustomRingbackMediaSelection_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 223) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCustomRingbackMediaSelection_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 223)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCustomRingbackMediaSelection_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 223)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCustomRingbackMediaSelection_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 223, a)
}

func BWASCustomRingbackMediaSelection_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 223, a)
}

func BWASCustomRingbackMediaSelection_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 223)
}

func BWASAOCType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 224, a)
}

func BWASAOCType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 224, a)
}

func BWASAOCType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCType_Lookup(p)
	return
}

func BWASAOCType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCType_LookupString(p)
	return
}

func BWASAOCType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 224) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 224) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 224)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 224)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 224, a)
}

func BWASAOCType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 224, a)
}

func BWASAOCType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 224)
}

func BWASAOCCharge_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 225, a)
}

func BWASAOCCharge_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 225, a)
}

func BWASAOCCharge_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCCharge_Lookup(p)
	return
}

func BWASAOCCharge_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCCharge_LookupString(p)
	return
}

func BWASAOCCharge_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 225) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCCharge_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 225) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCCharge_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 225)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCCharge_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 225)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCCharge_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 225, a)
}

func BWASAOCCharge_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 225, a)
}

func BWASAOCCharge_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 225)
}

func BWASAOCCurrency_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 226, a)
}

func BWASAOCCurrency_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 226, a)
}

func BWASAOCCurrency_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCCurrency_Lookup(p)
	return
}

func BWASAOCCurrency_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCCurrency_LookupString(p)
	return
}

func BWASAOCCurrency_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 226) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCCurrency_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 226) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCCurrency_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 226)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCCurrency_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 226)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCCurrency_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 226, a)
}

func BWASAOCCurrency_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 226, a)
}

func BWASAOCCurrency_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 226)
}

func BWASAOCTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 227, a)
}

func BWASAOCTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 227, a)
}

func BWASAOCTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCTime_Lookup(p)
	return
}

func BWASAOCTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCTime_LookupString(p)
	return
}

func BWASAOCTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 227) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 227) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 227)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 227)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 227, a)
}

func BWASAOCTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 227, a)
}

func BWASAOCTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 227)
}

func BWASAOCSum_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 228, a)
}

func BWASAOCSum_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 228, a)
}

func BWASAOCSum_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCSum_Lookup(p)
	return
}

func BWASAOCSum_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCSum_LookupString(p)
	return
}

func BWASAOCSum_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 228) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCSum_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 228) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCSum_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 228)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCSum_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 228)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCSum_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 228, a)
}

func BWASAOCSum_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 228, a)
}

func BWASAOCSum_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 228)
}

func BWASAOCActivationTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 229, a)
}

func BWASAOCActivationTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 229, a)
}

func BWASAOCActivationTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCActivationTime_Lookup(p)
	return
}

func BWASAOCActivationTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCActivationTime_LookupString(p)
	return
}

func BWASAOCActivationTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 229) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCActivationTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 229) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCActivationTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 229)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCActivationTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 229)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCActivationTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 229, a)
}

func BWASAOCActivationTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 229, a)
}

func BWASAOCActivationTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 229)
}

func BWASAOCResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 230, a)
}

func BWASAOCResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 230, a)
}

func BWASAOCResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASAOCResult_Lookup(p)
	return
}

func BWASAOCResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASAOCResult_LookupString(p)
	return
}

func BWASAOCResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 230) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 230) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASAOCResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 230)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASAOCResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 230)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASAOCResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 230, a)
}

func BWASAOCResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 230, a)
}

func BWASAOCResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 230)
}

func BWASASCallType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 231, a)
}

func BWASASCallType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 231, a)
}

func BWASASCallType_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASASCallType_Lookup(p)
	return
}

func BWASASCallType_GetString(p *radius.Packet) (value string) {
	value, _ = BWASASCallType_LookupString(p)
	return
}

func BWASASCallType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 231) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASASCallType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 231) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASASCallType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 231)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASASCallType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 231)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASASCallType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 231, a)
}

func BWASASCallType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 231, a)
}

func BWASASCallType_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 231)
}

func BWASScfActInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 232, a)
}

func BWASScfActInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 232, a)
}

func BWASScfActInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASScfActInvokeTime_Lookup(p)
	return
}

func BWASScfActInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASScfActInvokeTime_LookupString(p)
	return
}

func BWASScfActInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 232) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfActInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 232) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfActInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 232)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASScfActInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 232)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASScfActInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 232, a)
}

func BWASScfActInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 232, a)
}

func BWASScfActInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 232)
}

func BWASScfActFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 233, a)
}

func BWASScfActFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 233, a)
}

func BWASScfActFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASScfActFacResult_Lookup(p)
	return
}

func BWASScfActFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASScfActFacResult_LookupString(p)
	return
}

func BWASScfActFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 233) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfActFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 233) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfActFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 233)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASScfActFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 233)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASScfActFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 233, a)
}

func BWASScfActFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 233, a)
}

func BWASScfActFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 233)
}

func BWASScfDeactInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 234, a)
}

func BWASScfDeactInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 234, a)
}

func BWASScfDeactInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASScfDeactInvokeTime_Lookup(p)
	return
}

func BWASScfDeactInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASScfDeactInvokeTime_LookupString(p)
	return
}

func BWASScfDeactInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 234) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfDeactInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 234) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfDeactInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 234)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASScfDeactInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 234)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASScfDeactInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 234, a)
}

func BWASScfDeactInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 234, a)
}

func BWASScfDeactInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 234)
}

func BWASScfDeactFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 235, a)
}

func BWASScfDeactFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 235, a)
}

func BWASScfDeactFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASScfDeactFacResult_Lookup(p)
	return
}

func BWASScfDeactFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASScfDeactFacResult_LookupString(p)
	return
}

func BWASScfDeactFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 235) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfDeactFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 235) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASScfDeactFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 235)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASScfDeactFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 235)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASScfDeactFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 235, a)
}

func BWASScfDeactFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 235, a)
}

func BWASScfDeactFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 235)
}

func BWASCfaInterInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 236, a)
}

func BWASCfaInterInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 236, a)
}

func BWASCfaInterInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfaInterInvokeTime_Lookup(p)
	return
}

func BWASCfaInterInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfaInterInvokeTime_LookupString(p)
	return
}

func BWASCfaInterInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 236) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaInterInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 236) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaInterInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 236)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfaInterInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 236)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfaInterInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 236, a)
}

func BWASCfaInterInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 236, a)
}

func BWASCfaInterInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 236)
}

func BWASCfaInterFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 237, a)
}

func BWASCfaInterFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 237, a)
}

func BWASCfaInterFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfaInterFacResult_Lookup(p)
	return
}

func BWASCfaInterFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfaInterFacResult_LookupString(p)
	return
}

func BWASCfaInterFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 237) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaInterFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 237) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfaInterFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 237)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfaInterFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 237)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfaInterFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 237, a)
}

func BWASCfaInterFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 237, a)
}

func BWASCfaInterFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 237)
}

func BWASCfnaInterInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 238, a)
}

func BWASCfnaInterInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 238, a)
}

func BWASCfnaInterInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnaInterInvokeTime_Lookup(p)
	return
}

func BWASCfnaInterInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnaInterInvokeTime_LookupString(p)
	return
}

func BWASCfnaInterInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 238) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaInterInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 238) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaInterInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 238)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnaInterInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 238)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnaInterInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 238, a)
}

func BWASCfnaInterInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 238, a)
}

func BWASCfnaInterInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 238)
}

func BWASCfnaInterFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 239, a)
}

func BWASCfnaInterFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 239, a)
}

func BWASCfnaInterFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfnaInterFacResult_Lookup(p)
	return
}

func BWASCfnaInterFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfnaInterFacResult_LookupString(p)
	return
}

func BWASCfnaInterFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 239) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaInterFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 239) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfnaInterFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 239)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfnaInterFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 239)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfnaInterFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 239, a)
}

func BWASCfnaInterFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 239, a)
}

func BWASCfnaInterFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 239)
}

func BWASCfbInterInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 240, a)
}

func BWASCfbInterInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 240, a)
}

func BWASCfbInterInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfbInterInvokeTime_Lookup(p)
	return
}

func BWASCfbInterInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfbInterInvokeTime_LookupString(p)
	return
}

func BWASCfbInterInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 240) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbInterInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 240) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbInterInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 240)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfbInterInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 240)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfbInterInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 240, a)
}

func BWASCfbInterInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 240, a)
}

func BWASCfbInterInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 240)
}

func BWASCfbInterFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 241, a)
}

func BWASCfbInterFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 241, a)
}

func BWASCfbInterFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCfbInterFacResult_Lookup(p)
	return
}

func BWASCfbInterFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCfbInterFacResult_LookupString(p)
	return
}

func BWASCfbInterFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 241) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbInterFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 241) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCfbInterFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 241)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCfbInterFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 241)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCfbInterFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 241, a)
}

func BWASCfbInterFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 241, a)
}

func BWASCfbInterFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 241)
}

func BWASCBFAuthCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 242, a)
}

func BWASCBFAuthCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 242, a)
}

func BWASCBFAuthCode_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCBFAuthCode_Lookup(p)
	return
}

func BWASCBFAuthCode_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCBFAuthCode_LookupString(p)
	return
}

func BWASCBFAuthCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 242) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCBFAuthCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 242) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCBFAuthCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 242)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCBFAuthCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 242)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCBFAuthCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 242, a)
}

func BWASCBFAuthCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 242, a)
}

func BWASCBFAuthCode_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 242)
}

func BWASCallBridgeResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 243, a)
}

func BWASCallBridgeResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 243, a)
}

func BWASCallBridgeResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallBridgeResult_Lookup(p)
	return
}

func BWASCallBridgeResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallBridgeResult_LookupString(p)
	return
}

func BWASCallBridgeResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 243) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallBridgeResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 243) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallBridgeResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 243)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallBridgeResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 243)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallBridgeResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 243, a)
}

func BWASCallBridgeResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 243, a)
}

func BWASCallBridgeResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 243)
}

func BWASReturnCallNumberDeletionInvokeTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 244, a)
}

func BWASReturnCallNumberDeletionInvokeTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 244, a)
}

func BWASReturnCallNumberDeletionInvokeTime_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReturnCallNumberDeletionInvokeTime_Lookup(p)
	return
}

func BWASReturnCallNumberDeletionInvokeTime_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReturnCallNumberDeletionInvokeTime_LookupString(p)
	return
}

func BWASReturnCallNumberDeletionInvokeTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 244) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallNumberDeletionInvokeTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 244) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallNumberDeletionInvokeTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 244)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReturnCallNumberDeletionInvokeTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 244)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReturnCallNumberDeletionInvokeTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 244, a)
}

func BWASReturnCallNumberDeletionInvokeTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 244, a)
}

func BWASReturnCallNumberDeletionInvokeTime_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 244)
}

func BWASReturnCallNumberDeletionFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 245, a)
}

func BWASReturnCallNumberDeletionFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 245, a)
}

func BWASReturnCallNumberDeletionFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASReturnCallNumberDeletionFacResult_Lookup(p)
	return
}

func BWASReturnCallNumberDeletionFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASReturnCallNumberDeletionFacResult_LookupString(p)
	return
}

func BWASReturnCallNumberDeletionFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 245) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallNumberDeletionFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 245) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASReturnCallNumberDeletionFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 245)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASReturnCallNumberDeletionFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 245)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASReturnCallNumberDeletionFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 245, a)
}

func BWASReturnCallNumberDeletionFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 245, a)
}

func BWASReturnCallNumberDeletionFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 245)
}

func BWASPrepaidStatus_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 246, a)
}

func BWASPrepaidStatus_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 246, a)
}

func BWASPrepaidStatus_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASPrepaidStatus_Lookup(p)
	return
}

func BWASPrepaidStatus_GetString(p *radius.Packet) (value string) {
	value, _ = BWASPrepaidStatus_LookupString(p)
	return
}

func BWASPrepaidStatus_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 246) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPrepaidStatus_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 246) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASPrepaidStatus_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 246)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASPrepaidStatus_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 246)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASPrepaidStatus_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 246, a)
}

func BWASPrepaidStatus_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 246, a)
}

func BWASPrepaidStatus_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 246)
}

func BWASConfigurableCLID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 247, a)
}

func BWASConfigurableCLID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 247, a)
}

func BWASConfigurableCLID_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASConfigurableCLID_Lookup(p)
	return
}

func BWASConfigurableCLID_GetString(p *radius.Packet) (value string) {
	value, _ = BWASConfigurableCLID_LookupString(p)
	return
}

func BWASConfigurableCLID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 247) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfigurableCLID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 247) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASConfigurableCLID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 247)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASConfigurableCLID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 247)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASConfigurableCLID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 247, a)
}

func BWASConfigurableCLID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 247, a)
}

func BWASConfigurableCLID_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 247)
}

func BWASCallCenterNightServiceActResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 248, a)
}

func BWASCallCenterNightServiceActResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 248, a)
}

func BWASCallCenterNightServiceActResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterNightServiceActResult_Lookup(p)
	return
}

func BWASCallCenterNightServiceActResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterNightServiceActResult_LookupString(p)
	return
}

func BWASCallCenterNightServiceActResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 248) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterNightServiceActResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 248) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterNightServiceActResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 248)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterNightServiceActResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 248)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterNightServiceActResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 248, a)
}

func BWASCallCenterNightServiceActResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 248, a)
}

func BWASCallCenterNightServiceActResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 248)
}

func BWASCallCenterNightServiceDeactResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 249, a)
}

func BWASCallCenterNightServiceDeactResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 249, a)
}

func BWASCallCenterNightServiceDeactResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterNightServiceDeactResult_Lookup(p)
	return
}

func BWASCallCenterNightServiceDeactResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterNightServiceDeactResult_LookupString(p)
	return
}

func BWASCallCenterNightServiceDeactResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 249) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterNightServiceDeactResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 249) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterNightServiceDeactResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 249)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterNightServiceDeactResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 249)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterNightServiceDeactResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 249, a)
}

func BWASCallCenterNightServiceDeactResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 249, a)
}

func BWASCallCenterNightServiceDeactResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 249)
}

func BWASCallCenterForcedForwardingActResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 250, a)
}

func BWASCallCenterForcedForwardingActResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 250, a)
}

func BWASCallCenterForcedForwardingActResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterForcedForwardingActResult_Lookup(p)
	return
}

func BWASCallCenterForcedForwardingActResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterForcedForwardingActResult_LookupString(p)
	return
}

func BWASCallCenterForcedForwardingActResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 250) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterForcedForwardingActResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 250) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterForcedForwardingActResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 250)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterForcedForwardingActResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 250)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterForcedForwardingActResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 250, a)
}

func BWASCallCenterForcedForwardingActResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 250, a)
}

func BWASCallCenterForcedForwardingActResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 250)
}

func BWASCallCenterForcedForwardingDeactResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 251, a)
}

func BWASCallCenterForcedForwardingDeactResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 251, a)
}

func BWASCallCenterForcedForwardingDeactResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterForcedForwardingDeactResult_Lookup(p)
	return
}

func BWASCallCenterForcedForwardingDeactResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterForcedForwardingDeactResult_LookupString(p)
	return
}

func BWASCallCenterForcedForwardingDeactResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 251) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterForcedForwardingDeactResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 251) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterForcedForwardingDeactResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 251)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterForcedForwardingDeactResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 251)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterForcedForwardingDeactResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 251, a)
}

func BWASCallCenterForcedForwardingDeactResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 251, a)
}

func BWASCallCenterForcedForwardingDeactResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 251)
}

func BWASCallCenterOutgoingCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 252, a)
}

func BWASCallCenterOutgoingCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 252, a)
}

func BWASCallCenterOutgoingCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterOutgoingCallFacResult_Lookup(p)
	return
}

func BWASCallCenterOutgoingCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterOutgoingCallFacResult_LookupString(p)
	return
}

func BWASCallCenterOutgoingCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 252) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterOutgoingCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 252) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterOutgoingCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 252)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterOutgoingCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 252)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterOutgoingCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 252, a)
}

func BWASCallCenterOutgoingCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 252, a)
}

func BWASCallCenterOutgoingCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 252)
}

func BWASCallCenterOutgoingPersonalCallFacResult_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 253, a)
}

func BWASCallCenterOutgoingPersonalCallFacResult_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 253, a)
}

func BWASCallCenterOutgoingPersonalCallFacResult_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterOutgoingPersonalCallFacResult_Lookup(p)
	return
}

func BWASCallCenterOutgoingPersonalCallFacResult_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterOutgoingPersonalCallFacResult_LookupString(p)
	return
}

func BWASCallCenterOutgoingPersonalCallFacResult_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 253) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterOutgoingPersonalCallFacResult_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 253) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterOutgoingPersonalCallFacResult_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 253)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterOutgoingPersonalCallFacResult_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 253)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterOutgoingPersonalCallFacResult_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 253, a)
}

func BWASCallCenterOutgoingPersonalCallFacResult_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 253, a)
}

func BWASCallCenterOutgoingPersonalCallFacResult_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 253)
}

func BWASCallCenterOutgoingPhoneNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 254, a)
}

func BWASCallCenterOutgoingPhoneNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 254, a)
}

func BWASCallCenterOutgoingPhoneNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = BWASCallCenterOutgoingPhoneNumber_Lookup(p)
	return
}

func BWASCallCenterOutgoingPhoneNumber_GetString(p *radius.Packet) (value string) {
	value, _ = BWASCallCenterOutgoingPhoneNumber_LookupString(p)
	return
}

func BWASCallCenterOutgoingPhoneNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 254) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterOutgoingPhoneNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 254) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BWASCallCenterOutgoingPhoneNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 254)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BWASCallCenterOutgoingPhoneNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 254)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BWASCallCenterOutgoingPhoneNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 254, a)
}

func BWASCallCenterOutgoingPhoneNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 254, a)
}

func BWASCallCenterOutgoingPhoneNumber_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 254)
}

func BroadSoftAttr255_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 255, a)
}

func BroadSoftAttr255_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_AddVendor(p, 255, a)
}

func BroadSoftAttr255_Get(p *radius.Packet) (value []byte) {
	value, _ = BroadSoftAttr255_Lookup(p)
	return
}

func BroadSoftAttr255_GetString(p *radius.Packet) (value string) {
	value, _ = BroadSoftAttr255_LookupString(p)
	return
}

func BroadSoftAttr255_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _BroadSoft_GetsVendor(p, 255) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BroadSoftAttr255_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _BroadSoft_GetsVendor(p, 255) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func BroadSoftAttr255_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 255)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func BroadSoftAttr255_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _BroadSoft_LookupVendor(p, 255)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func BroadSoftAttr255_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 255, a)
}

func BroadSoftAttr255_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _BroadSoft_SetVendor(p, 255, a)
}

func BroadSoftAttr255_Del(p *radius.Packet) {
	_BroadSoft_DelVendor(p, 255)
}
