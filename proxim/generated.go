// Code generated by radius-dict-gen. DO NOT EDIT.

package proxim

import (
	"strconv"

	"layeh.com/radius"
	"layeh.com/radius/rfc2865"
)

const (
	_Proxim_VendorID = 841
)

func _Proxim_AddVendor(p *radius.Packet, typ byte, attr radius.Attribute) (err error) {
	var vsa radius.Attribute
	vendor := make(radius.Attribute, 2+len(attr))
	vendor[0] = typ
	vendor[1] = byte(len(vendor))
	copy(vendor[2:], attr)
	vsa, err = radius.NewVendorSpecific(_Proxim_VendorID, vendor)
	if err != nil {
		return
	}
	p.Add(rfc2865.VendorSpecific_Type, vsa)
	return
}

func _Proxim_GetsVendor(p *radius.Packet, typ byte) (values []radius.Attribute) {
	for _, avp := range p.Attributes {
		if avp.Type != rfc2865.VendorSpecific_Type {
			continue
		}
		attr := avp.Attribute
		vendorID, vsa, err := radius.VendorSpecific(attr)
		if err != nil || vendorID != _Proxim_VendorID {
			continue
		}
		for len(vsa) >= 3 {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				break
			}
			if vsaTyp == typ {
				values = append(values, vsa[2:int(vsaLen)])
			}
			vsa = vsa[int(vsaLen):]
		}
	}
	return
}

func _Proxim_LookupVendor(p *radius.Packet, typ byte) (attr radius.Attribute, ok bool) {
	for _, avp := range p.Attributes {
		if avp.Type != rfc2865.VendorSpecific_Type {
			continue
		}
		attr := avp.Attribute
		vendorID, vsa, err := radius.VendorSpecific(attr)
		if err != nil || vendorID != _Proxim_VendorID {
			continue
		}
		for len(vsa) >= 3 {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				break
			}
			if vsaTyp == typ {
				return vsa[2:int(vsaLen)], true
			}
			vsa = vsa[int(vsaLen):]
		}
	}
	return
}

func _Proxim_SetVendor(p *radius.Packet, typ byte, attr radius.Attribute) (err error) {
	for i := 0; i < len(p.Attributes); {
		avp := p.Attributes[i]
		if avp.Type != rfc2865.VendorSpecific_Type {
			i++
			continue
		}
		vendorID, vsa, err := radius.VendorSpecific(avp.Attribute)
		if err != nil || vendorID != _Proxim_VendorID {
			i++
			continue
		}
		for j := 0; len(vsa[j:]) >= 3; {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa[j:]) || vsaLen < 3 {
				i++
				break
			}
			if vsaTyp == typ {
				vsa = append(vsa[:j], vsa[j+int(vsaLen):]...)
			}
			j += int(vsaLen)
		}
		if len(vsa) > 0 {
			copy(avp.Attribute[4:], vsa)
			i++
		} else {
			p.Attributes = append(p.Attributes[:i], p.Attributes[i+i:]...)
		}
	}
	return _Proxim_AddVendor(p, typ, attr)
}

func _Proxim_DelVendor(p *radius.Packet, typ byte) {
vsaLoop:
	for i := 0; i < len(p.Attributes); {
		avp := p.Attributes[i]
		if avp.Type != rfc2865.VendorSpecific_Type {
			i++
			continue
		}
		vendorID, vsa, err := radius.VendorSpecific(avp.Attribute)
		if err != nil || vendorID != _Proxim_VendorID {
			i++
			continue
		}
		offset := 0
		for len(vsa[offset:]) >= 3 {
			vsaTyp, vsaLen := vsa[offset], vsa[offset+1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				continue vsaLoop
			}
			if vsaTyp == typ {
				copy(vsa[offset:], vsa[offset+int(vsaLen):])
				vsa = vsa[:len(vsa)-int(vsaLen)]
			} else {
				offset += int(vsaLen)
			}
		}
		if offset == 0 {
			p.Attributes = append(p.Attributes[:i], p.Attributes[i+1:]...)
		} else {
			i++
		}
	}
	return
}

type ProximE1VLANMODE uint32

var ProximE1VLANMODE_Strings = map[ProximE1VLANMODE]string{}

func (a ProximE1VLANMODE) String() string {
	if str, ok := ProximE1VLANMODE_Strings[a]; ok {
		return str
	}
	return "ProximE1VLANMODE(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1VLANMODE_Add(p *radius.Packet, value ProximE1VLANMODE) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 4, a)
}

func ProximE1VLANMODE_Get(p *radius.Packet) (value ProximE1VLANMODE) {
	value, _ = ProximE1VLANMODE_Lookup(p)
	return
}

func ProximE1VLANMODE_Gets(p *radius.Packet) (values []ProximE1VLANMODE, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 4) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1VLANMODE(i))
	}
	return
}

func ProximE1VLANMODE_Lookup(p *radius.Packet) (value ProximE1VLANMODE, err error) {
	a, ok := _Proxim_LookupVendor(p, 4)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1VLANMODE(i)
	return
}

func ProximE1VLANMODE_Set(p *radius.Packet, value ProximE1VLANMODE) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 4, a)
}

func ProximE1VLANMODE_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 4)
}

func ProximSUVLANNAME_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Proxim_AddVendor(p, 5, a)
}

func ProximSUVLANNAME_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Proxim_AddVendor(p, 5, a)
}

func ProximSUVLANNAME_Get(p *radius.Packet) (value []byte) {
	value, _ = ProximSUVLANNAME_Lookup(p)
	return
}

func ProximSUVLANNAME_GetString(p *radius.Packet) (value string) {
	value, _ = ProximSUVLANNAME_LookupString(p)
	return
}

func ProximSUVLANNAME_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Proxim_GetsVendor(p, 5) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func ProximSUVLANNAME_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Proxim_GetsVendor(p, 5) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func ProximSUVLANNAME_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Proxim_LookupVendor(p, 5)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func ProximSUVLANNAME_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Proxim_LookupVendor(p, 5)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func ProximSUVLANNAME_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Proxim_SetVendor(p, 5, a)
}

func ProximSUVLANNAME_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Proxim_SetVendor(p, 5, a)
}

func ProximSUVLANNAME_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 5)
}

type ProximE1AccessVLANID uint32

var ProximE1AccessVLANID_Strings = map[ProximE1AccessVLANID]string{}

func (a ProximE1AccessVLANID) String() string {
	if str, ok := ProximE1AccessVLANID_Strings[a]; ok {
		return str
	}
	return "ProximE1AccessVLANID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1AccessVLANID_Add(p *radius.Packet, value ProximE1AccessVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 6, a)
}

func ProximE1AccessVLANID_Get(p *radius.Packet) (value ProximE1AccessVLANID) {
	value, _ = ProximE1AccessVLANID_Lookup(p)
	return
}

func ProximE1AccessVLANID_Gets(p *radius.Packet) (values []ProximE1AccessVLANID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 6) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1AccessVLANID(i))
	}
	return
}

func ProximE1AccessVLANID_Lookup(p *radius.Packet) (value ProximE1AccessVLANID, err error) {
	a, ok := _Proxim_LookupVendor(p, 6)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1AccessVLANID(i)
	return
}

func ProximE1AccessVLANID_Set(p *radius.Packet, value ProximE1AccessVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 6, a)
}

func ProximE1AccessVLANID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 6)
}

type ProximE1AccessVLANPri uint32

var ProximE1AccessVLANPri_Strings = map[ProximE1AccessVLANPri]string{}

func (a ProximE1AccessVLANPri) String() string {
	if str, ok := ProximE1AccessVLANPri_Strings[a]; ok {
		return str
	}
	return "ProximE1AccessVLANPri(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1AccessVLANPri_Add(p *radius.Packet, value ProximE1AccessVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 7, a)
}

func ProximE1AccessVLANPri_Get(p *radius.Packet) (value ProximE1AccessVLANPri) {
	value, _ = ProximE1AccessVLANPri_Lookup(p)
	return
}

func ProximE1AccessVLANPri_Gets(p *radius.Packet) (values []ProximE1AccessVLANPri, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 7) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1AccessVLANPri(i))
	}
	return
}

func ProximE1AccessVLANPri_Lookup(p *radius.Packet) (value ProximE1AccessVLANPri, err error) {
	a, ok := _Proxim_LookupVendor(p, 7)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1AccessVLANPri(i)
	return
}

func ProximE1AccessVLANPri_Set(p *radius.Packet, value ProximE1AccessVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 7, a)
}

func ProximE1AccessVLANPri_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 7)
}

type ProximMgmtVLANID uint32

var ProximMgmtVLANID_Strings = map[ProximMgmtVLANID]string{}

func (a ProximMgmtVLANID) String() string {
	if str, ok := ProximMgmtVLANID_Strings[a]; ok {
		return str
	}
	return "ProximMgmtVLANID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximMgmtVLANID_Add(p *radius.Packet, value ProximMgmtVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 8, a)
}

func ProximMgmtVLANID_Get(p *radius.Packet) (value ProximMgmtVLANID) {
	value, _ = ProximMgmtVLANID_Lookup(p)
	return
}

func ProximMgmtVLANID_Gets(p *radius.Packet) (values []ProximMgmtVLANID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 8) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximMgmtVLANID(i))
	}
	return
}

func ProximMgmtVLANID_Lookup(p *radius.Packet) (value ProximMgmtVLANID, err error) {
	a, ok := _Proxim_LookupVendor(p, 8)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximMgmtVLANID(i)
	return
}

func ProximMgmtVLANID_Set(p *radius.Packet, value ProximMgmtVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 8, a)
}

func ProximMgmtVLANID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 8)
}

type ProximMgmtVLANPri uint32

var ProximMgmtVLANPri_Strings = map[ProximMgmtVLANPri]string{}

func (a ProximMgmtVLANPri) String() string {
	if str, ok := ProximMgmtVLANPri_Strings[a]; ok {
		return str
	}
	return "ProximMgmtVLANPri(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximMgmtVLANPri_Add(p *radius.Packet, value ProximMgmtVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 9, a)
}

func ProximMgmtVLANPri_Get(p *radius.Packet) (value ProximMgmtVLANPri) {
	value, _ = ProximMgmtVLANPri_Lookup(p)
	return
}

func ProximMgmtVLANPri_Gets(p *radius.Packet) (values []ProximMgmtVLANPri, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 9) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximMgmtVLANPri(i))
	}
	return
}

func ProximMgmtVLANPri_Lookup(p *radius.Packet) (value ProximMgmtVLANPri, err error) {
	a, ok := _Proxim_LookupVendor(p, 9)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximMgmtVLANPri(i)
	return
}

func ProximMgmtVLANPri_Set(p *radius.Packet, value ProximMgmtVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 9, a)
}

func ProximMgmtVLANPri_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 9)
}

type ProximE1TrunkID01 uint32

var ProximE1TrunkID01_Strings = map[ProximE1TrunkID01]string{}

func (a ProximE1TrunkID01) String() string {
	if str, ok := ProximE1TrunkID01_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID01(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID01_Add(p *radius.Packet, value ProximE1TrunkID01) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 10, a)
}

func ProximE1TrunkID01_Get(p *radius.Packet) (value ProximE1TrunkID01) {
	value, _ = ProximE1TrunkID01_Lookup(p)
	return
}

func ProximE1TrunkID01_Gets(p *radius.Packet) (values []ProximE1TrunkID01, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 10) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID01(i))
	}
	return
}

func ProximE1TrunkID01_Lookup(p *radius.Packet) (value ProximE1TrunkID01, err error) {
	a, ok := _Proxim_LookupVendor(p, 10)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID01(i)
	return
}

func ProximE1TrunkID01_Set(p *radius.Packet, value ProximE1TrunkID01) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 10, a)
}

func ProximE1TrunkID01_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 10)
}

type ProximE1TrunkID02 uint32

var ProximE1TrunkID02_Strings = map[ProximE1TrunkID02]string{}

func (a ProximE1TrunkID02) String() string {
	if str, ok := ProximE1TrunkID02_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID02(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID02_Add(p *radius.Packet, value ProximE1TrunkID02) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 11, a)
}

func ProximE1TrunkID02_Get(p *radius.Packet) (value ProximE1TrunkID02) {
	value, _ = ProximE1TrunkID02_Lookup(p)
	return
}

func ProximE1TrunkID02_Gets(p *radius.Packet) (values []ProximE1TrunkID02, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 11) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID02(i))
	}
	return
}

func ProximE1TrunkID02_Lookup(p *radius.Packet) (value ProximE1TrunkID02, err error) {
	a, ok := _Proxim_LookupVendor(p, 11)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID02(i)
	return
}

func ProximE1TrunkID02_Set(p *radius.Packet, value ProximE1TrunkID02) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 11, a)
}

func ProximE1TrunkID02_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 11)
}

type ProximE1TrunkID03 uint32

var ProximE1TrunkID03_Strings = map[ProximE1TrunkID03]string{}

func (a ProximE1TrunkID03) String() string {
	if str, ok := ProximE1TrunkID03_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID03(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID03_Add(p *radius.Packet, value ProximE1TrunkID03) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 12, a)
}

func ProximE1TrunkID03_Get(p *radius.Packet) (value ProximE1TrunkID03) {
	value, _ = ProximE1TrunkID03_Lookup(p)
	return
}

func ProximE1TrunkID03_Gets(p *radius.Packet) (values []ProximE1TrunkID03, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 12) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID03(i))
	}
	return
}

func ProximE1TrunkID03_Lookup(p *radius.Packet) (value ProximE1TrunkID03, err error) {
	a, ok := _Proxim_LookupVendor(p, 12)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID03(i)
	return
}

func ProximE1TrunkID03_Set(p *radius.Packet, value ProximE1TrunkID03) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 12, a)
}

func ProximE1TrunkID03_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 12)
}

type ProximE1TrunkID04 uint32

var ProximE1TrunkID04_Strings = map[ProximE1TrunkID04]string{}

func (a ProximE1TrunkID04) String() string {
	if str, ok := ProximE1TrunkID04_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID04(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID04_Add(p *radius.Packet, value ProximE1TrunkID04) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 13, a)
}

func ProximE1TrunkID04_Get(p *radius.Packet) (value ProximE1TrunkID04) {
	value, _ = ProximE1TrunkID04_Lookup(p)
	return
}

func ProximE1TrunkID04_Gets(p *radius.Packet) (values []ProximE1TrunkID04, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 13) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID04(i))
	}
	return
}

func ProximE1TrunkID04_Lookup(p *radius.Packet) (value ProximE1TrunkID04, err error) {
	a, ok := _Proxim_LookupVendor(p, 13)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID04(i)
	return
}

func ProximE1TrunkID04_Set(p *radius.Packet, value ProximE1TrunkID04) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 13, a)
}

func ProximE1TrunkID04_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 13)
}

type ProximE1TrunkID05 uint32

var ProximE1TrunkID05_Strings = map[ProximE1TrunkID05]string{}

func (a ProximE1TrunkID05) String() string {
	if str, ok := ProximE1TrunkID05_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID05(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID05_Add(p *radius.Packet, value ProximE1TrunkID05) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 14, a)
}

func ProximE1TrunkID05_Get(p *radius.Packet) (value ProximE1TrunkID05) {
	value, _ = ProximE1TrunkID05_Lookup(p)
	return
}

func ProximE1TrunkID05_Gets(p *radius.Packet) (values []ProximE1TrunkID05, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 14) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID05(i))
	}
	return
}

func ProximE1TrunkID05_Lookup(p *radius.Packet) (value ProximE1TrunkID05, err error) {
	a, ok := _Proxim_LookupVendor(p, 14)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID05(i)
	return
}

func ProximE1TrunkID05_Set(p *radius.Packet, value ProximE1TrunkID05) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 14, a)
}

func ProximE1TrunkID05_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 14)
}

type ProximE1TrunkID06 uint32

var ProximE1TrunkID06_Strings = map[ProximE1TrunkID06]string{}

func (a ProximE1TrunkID06) String() string {
	if str, ok := ProximE1TrunkID06_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID06(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID06_Add(p *radius.Packet, value ProximE1TrunkID06) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 15, a)
}

func ProximE1TrunkID06_Get(p *radius.Packet) (value ProximE1TrunkID06) {
	value, _ = ProximE1TrunkID06_Lookup(p)
	return
}

func ProximE1TrunkID06_Gets(p *radius.Packet) (values []ProximE1TrunkID06, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 15) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID06(i))
	}
	return
}

func ProximE1TrunkID06_Lookup(p *radius.Packet) (value ProximE1TrunkID06, err error) {
	a, ok := _Proxim_LookupVendor(p, 15)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID06(i)
	return
}

func ProximE1TrunkID06_Set(p *radius.Packet, value ProximE1TrunkID06) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 15, a)
}

func ProximE1TrunkID06_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 15)
}

type ProximE1TrunkID07 uint32

var ProximE1TrunkID07_Strings = map[ProximE1TrunkID07]string{}

func (a ProximE1TrunkID07) String() string {
	if str, ok := ProximE1TrunkID07_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID07(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID07_Add(p *radius.Packet, value ProximE1TrunkID07) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 16, a)
}

func ProximE1TrunkID07_Get(p *radius.Packet) (value ProximE1TrunkID07) {
	value, _ = ProximE1TrunkID07_Lookup(p)
	return
}

func ProximE1TrunkID07_Gets(p *radius.Packet) (values []ProximE1TrunkID07, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 16) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID07(i))
	}
	return
}

func ProximE1TrunkID07_Lookup(p *radius.Packet) (value ProximE1TrunkID07, err error) {
	a, ok := _Proxim_LookupVendor(p, 16)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID07(i)
	return
}

func ProximE1TrunkID07_Set(p *radius.Packet, value ProximE1TrunkID07) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 16, a)
}

func ProximE1TrunkID07_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 16)
}

type ProximE1TrunkID08 uint32

var ProximE1TrunkID08_Strings = map[ProximE1TrunkID08]string{}

func (a ProximE1TrunkID08) String() string {
	if str, ok := ProximE1TrunkID08_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID08(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID08_Add(p *radius.Packet, value ProximE1TrunkID08) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 17, a)
}

func ProximE1TrunkID08_Get(p *radius.Packet) (value ProximE1TrunkID08) {
	value, _ = ProximE1TrunkID08_Lookup(p)
	return
}

func ProximE1TrunkID08_Gets(p *radius.Packet) (values []ProximE1TrunkID08, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 17) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID08(i))
	}
	return
}

func ProximE1TrunkID08_Lookup(p *radius.Packet) (value ProximE1TrunkID08, err error) {
	a, ok := _Proxim_LookupVendor(p, 17)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID08(i)
	return
}

func ProximE1TrunkID08_Set(p *radius.Packet, value ProximE1TrunkID08) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 17, a)
}

func ProximE1TrunkID08_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 17)
}

type ProximE1TrunkID09 uint32

var ProximE1TrunkID09_Strings = map[ProximE1TrunkID09]string{}

func (a ProximE1TrunkID09) String() string {
	if str, ok := ProximE1TrunkID09_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID09(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID09_Add(p *radius.Packet, value ProximE1TrunkID09) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 18, a)
}

func ProximE1TrunkID09_Get(p *radius.Packet) (value ProximE1TrunkID09) {
	value, _ = ProximE1TrunkID09_Lookup(p)
	return
}

func ProximE1TrunkID09_Gets(p *radius.Packet) (values []ProximE1TrunkID09, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 18) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID09(i))
	}
	return
}

func ProximE1TrunkID09_Lookup(p *radius.Packet) (value ProximE1TrunkID09, err error) {
	a, ok := _Proxim_LookupVendor(p, 18)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID09(i)
	return
}

func ProximE1TrunkID09_Set(p *radius.Packet, value ProximE1TrunkID09) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 18, a)
}

func ProximE1TrunkID09_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 18)
}

type ProximE1TrunkID10 uint32

var ProximE1TrunkID10_Strings = map[ProximE1TrunkID10]string{}

func (a ProximE1TrunkID10) String() string {
	if str, ok := ProximE1TrunkID10_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID10(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID10_Add(p *radius.Packet, value ProximE1TrunkID10) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 19, a)
}

func ProximE1TrunkID10_Get(p *radius.Packet) (value ProximE1TrunkID10) {
	value, _ = ProximE1TrunkID10_Lookup(p)
	return
}

func ProximE1TrunkID10_Gets(p *radius.Packet) (values []ProximE1TrunkID10, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 19) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID10(i))
	}
	return
}

func ProximE1TrunkID10_Lookup(p *radius.Packet) (value ProximE1TrunkID10, err error) {
	a, ok := _Proxim_LookupVendor(p, 19)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID10(i)
	return
}

func ProximE1TrunkID10_Set(p *radius.Packet, value ProximE1TrunkID10) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 19, a)
}

func ProximE1TrunkID10_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 19)
}

type ProximE1TrunkID11 uint32

var ProximE1TrunkID11_Strings = map[ProximE1TrunkID11]string{}

func (a ProximE1TrunkID11) String() string {
	if str, ok := ProximE1TrunkID11_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID11(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID11_Add(p *radius.Packet, value ProximE1TrunkID11) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 20, a)
}

func ProximE1TrunkID11_Get(p *radius.Packet) (value ProximE1TrunkID11) {
	value, _ = ProximE1TrunkID11_Lookup(p)
	return
}

func ProximE1TrunkID11_Gets(p *radius.Packet) (values []ProximE1TrunkID11, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 20) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID11(i))
	}
	return
}

func ProximE1TrunkID11_Lookup(p *radius.Packet) (value ProximE1TrunkID11, err error) {
	a, ok := _Proxim_LookupVendor(p, 20)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID11(i)
	return
}

func ProximE1TrunkID11_Set(p *radius.Packet, value ProximE1TrunkID11) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 20, a)
}

func ProximE1TrunkID11_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 20)
}

type ProximE1TrunkID12 uint32

var ProximE1TrunkID12_Strings = map[ProximE1TrunkID12]string{}

func (a ProximE1TrunkID12) String() string {
	if str, ok := ProximE1TrunkID12_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID12(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID12_Add(p *radius.Packet, value ProximE1TrunkID12) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 21, a)
}

func ProximE1TrunkID12_Get(p *radius.Packet) (value ProximE1TrunkID12) {
	value, _ = ProximE1TrunkID12_Lookup(p)
	return
}

func ProximE1TrunkID12_Gets(p *radius.Packet) (values []ProximE1TrunkID12, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 21) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID12(i))
	}
	return
}

func ProximE1TrunkID12_Lookup(p *radius.Packet) (value ProximE1TrunkID12, err error) {
	a, ok := _Proxim_LookupVendor(p, 21)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID12(i)
	return
}

func ProximE1TrunkID12_Set(p *radius.Packet, value ProximE1TrunkID12) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 21, a)
}

func ProximE1TrunkID12_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 21)
}

type ProximE1TrunkID13 uint32

var ProximE1TrunkID13_Strings = map[ProximE1TrunkID13]string{}

func (a ProximE1TrunkID13) String() string {
	if str, ok := ProximE1TrunkID13_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID13(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID13_Add(p *radius.Packet, value ProximE1TrunkID13) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 22, a)
}

func ProximE1TrunkID13_Get(p *radius.Packet) (value ProximE1TrunkID13) {
	value, _ = ProximE1TrunkID13_Lookup(p)
	return
}

func ProximE1TrunkID13_Gets(p *radius.Packet) (values []ProximE1TrunkID13, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 22) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID13(i))
	}
	return
}

func ProximE1TrunkID13_Lookup(p *radius.Packet) (value ProximE1TrunkID13, err error) {
	a, ok := _Proxim_LookupVendor(p, 22)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID13(i)
	return
}

func ProximE1TrunkID13_Set(p *radius.Packet, value ProximE1TrunkID13) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 22, a)
}

func ProximE1TrunkID13_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 22)
}

type ProximE1TrunkID14 uint32

var ProximE1TrunkID14_Strings = map[ProximE1TrunkID14]string{}

func (a ProximE1TrunkID14) String() string {
	if str, ok := ProximE1TrunkID14_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID14(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID14_Add(p *radius.Packet, value ProximE1TrunkID14) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 23, a)
}

func ProximE1TrunkID14_Get(p *radius.Packet) (value ProximE1TrunkID14) {
	value, _ = ProximE1TrunkID14_Lookup(p)
	return
}

func ProximE1TrunkID14_Gets(p *radius.Packet) (values []ProximE1TrunkID14, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 23) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID14(i))
	}
	return
}

func ProximE1TrunkID14_Lookup(p *radius.Packet) (value ProximE1TrunkID14, err error) {
	a, ok := _Proxim_LookupVendor(p, 23)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID14(i)
	return
}

func ProximE1TrunkID14_Set(p *radius.Packet, value ProximE1TrunkID14) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 23, a)
}

func ProximE1TrunkID14_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 23)
}

type ProximE1TrunkID15 uint32

var ProximE1TrunkID15_Strings = map[ProximE1TrunkID15]string{}

func (a ProximE1TrunkID15) String() string {
	if str, ok := ProximE1TrunkID15_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID15(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID15_Add(p *radius.Packet, value ProximE1TrunkID15) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 24, a)
}

func ProximE1TrunkID15_Get(p *radius.Packet) (value ProximE1TrunkID15) {
	value, _ = ProximE1TrunkID15_Lookup(p)
	return
}

func ProximE1TrunkID15_Gets(p *radius.Packet) (values []ProximE1TrunkID15, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 24) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID15(i))
	}
	return
}

func ProximE1TrunkID15_Lookup(p *radius.Packet) (value ProximE1TrunkID15, err error) {
	a, ok := _Proxim_LookupVendor(p, 24)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID15(i)
	return
}

func ProximE1TrunkID15_Set(p *radius.Packet, value ProximE1TrunkID15) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 24, a)
}

func ProximE1TrunkID15_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 24)
}

type ProximE1TrunkID16 uint32

var ProximE1TrunkID16_Strings = map[ProximE1TrunkID16]string{}

func (a ProximE1TrunkID16) String() string {
	if str, ok := ProximE1TrunkID16_Strings[a]; ok {
		return str
	}
	return "ProximE1TrunkID16(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1TrunkID16_Add(p *radius.Packet, value ProximE1TrunkID16) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 25, a)
}

func ProximE1TrunkID16_Get(p *radius.Packet) (value ProximE1TrunkID16) {
	value, _ = ProximE1TrunkID16_Lookup(p)
	return
}

func ProximE1TrunkID16_Gets(p *radius.Packet) (values []ProximE1TrunkID16, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 25) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1TrunkID16(i))
	}
	return
}

func ProximE1TrunkID16_Lookup(p *radius.Packet) (value ProximE1TrunkID16, err error) {
	a, ok := _Proxim_LookupVendor(p, 25)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1TrunkID16(i)
	return
}

func ProximE1TrunkID16_Set(p *radius.Packet, value ProximE1TrunkID16) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 25, a)
}

func ProximE1TrunkID16_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 25)
}

type ProximSUVLANTableStatus uint32

var ProximSUVLANTableStatus_Strings = map[ProximSUVLANTableStatus]string{}

func (a ProximSUVLANTableStatus) String() string {
	if str, ok := ProximSUVLANTableStatus_Strings[a]; ok {
		return str
	}
	return "ProximSUVLANTableStatus(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximSUVLANTableStatus_Add(p *radius.Packet, value ProximSUVLANTableStatus) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 26, a)
}

func ProximSUVLANTableStatus_Get(p *radius.Packet) (value ProximSUVLANTableStatus) {
	value, _ = ProximSUVLANTableStatus_Lookup(p)
	return
}

func ProximSUVLANTableStatus_Gets(p *radius.Packet) (values []ProximSUVLANTableStatus, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 26) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximSUVLANTableStatus(i))
	}
	return
}

func ProximSUVLANTableStatus_Lookup(p *radius.Packet) (value ProximSUVLANTableStatus, err error) {
	a, ok := _Proxim_LookupVendor(p, 26)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximSUVLANTableStatus(i)
	return
}

func ProximSUVLANTableStatus_Set(p *radius.Packet, value ProximSUVLANTableStatus) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 26, a)
}

func ProximSUVLANTableStatus_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 26)
}

type ProximServiceVLANID uint32

var ProximServiceVLANID_Strings = map[ProximServiceVLANID]string{}

func (a ProximServiceVLANID) String() string {
	if str, ok := ProximServiceVLANID_Strings[a]; ok {
		return str
	}
	return "ProximServiceVLANID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximServiceVLANID_Add(p *radius.Packet, value ProximServiceVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 32, a)
}

func ProximServiceVLANID_Get(p *radius.Packet) (value ProximServiceVLANID) {
	value, _ = ProximServiceVLANID_Lookup(p)
	return
}

func ProximServiceVLANID_Gets(p *radius.Packet) (values []ProximServiceVLANID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 32) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximServiceVLANID(i))
	}
	return
}

func ProximServiceVLANID_Lookup(p *radius.Packet) (value ProximServiceVLANID, err error) {
	a, ok := _Proxim_LookupVendor(p, 32)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximServiceVLANID(i)
	return
}

func ProximServiceVLANID_Set(p *radius.Packet, value ProximServiceVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 32, a)
}

func ProximServiceVLANID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 32)
}

type ProximServiceVLANPri uint32

var ProximServiceVLANPri_Strings = map[ProximServiceVLANPri]string{}

func (a ProximServiceVLANPri) String() string {
	if str, ok := ProximServiceVLANPri_Strings[a]; ok {
		return str
	}
	return "ProximServiceVLANPri(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximServiceVLANPri_Add(p *radius.Packet, value ProximServiceVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 33, a)
}

func ProximServiceVLANPri_Get(p *radius.Packet) (value ProximServiceVLANPri) {
	value, _ = ProximServiceVLANPri_Lookup(p)
	return
}

func ProximServiceVLANPri_Gets(p *radius.Packet) (values []ProximServiceVLANPri, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 33) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximServiceVLANPri(i))
	}
	return
}

func ProximServiceVLANPri_Lookup(p *radius.Packet) (value ProximServiceVLANPri, err error) {
	a, ok := _Proxim_LookupVendor(p, 33)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximServiceVLANPri(i)
	return
}

func ProximServiceVLANPri_Set(p *radius.Packet, value ProximServiceVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 33, a)
}

func ProximServiceVLANPri_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 33)
}

type ProximQoSClassIndex uint32

var ProximQoSClassIndex_Strings = map[ProximQoSClassIndex]string{}

func (a ProximQoSClassIndex) String() string {
	if str, ok := ProximQoSClassIndex_Strings[a]; ok {
		return str
	}
	return "ProximQoSClassIndex(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximQoSClassIndex_Add(p *radius.Packet, value ProximQoSClassIndex) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 34, a)
}

func ProximQoSClassIndex_Get(p *radius.Packet) (value ProximQoSClassIndex) {
	value, _ = ProximQoSClassIndex_Lookup(p)
	return
}

func ProximQoSClassIndex_Gets(p *radius.Packet) (values []ProximQoSClassIndex, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 34) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximQoSClassIndex(i))
	}
	return
}

func ProximQoSClassIndex_Lookup(p *radius.Packet) (value ProximQoSClassIndex, err error) {
	a, ok := _Proxim_LookupVendor(p, 34)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximQoSClassIndex(i)
	return
}

func ProximQoSClassIndex_Set(p *radius.Packet, value ProximQoSClassIndex) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 34, a)
}

func ProximQoSClassIndex_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 34)
}

type ProximQoSClassSUStatus uint32

var ProximQoSClassSUStatus_Strings = map[ProximQoSClassSUStatus]string{}

func (a ProximQoSClassSUStatus) String() string {
	if str, ok := ProximQoSClassSUStatus_Strings[a]; ok {
		return str
	}
	return "ProximQoSClassSUStatus(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximQoSClassSUStatus_Add(p *radius.Packet, value ProximQoSClassSUStatus) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 35, a)
}

func ProximQoSClassSUStatus_Get(p *radius.Packet) (value ProximQoSClassSUStatus) {
	value, _ = ProximQoSClassSUStatus_Lookup(p)
	return
}

func ProximQoSClassSUStatus_Gets(p *radius.Packet) (values []ProximQoSClassSUStatus, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 35) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximQoSClassSUStatus(i))
	}
	return
}

func ProximQoSClassSUStatus_Lookup(p *radius.Packet) (value ProximQoSClassSUStatus, err error) {
	a, ok := _Proxim_LookupVendor(p, 35)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximQoSClassSUStatus(i)
	return
}

func ProximQoSClassSUStatus_Set(p *radius.Packet, value ProximQoSClassSUStatus) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 35, a)
}

func ProximQoSClassSUStatus_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 35)
}

type ProximE2VLANMODE uint32

var ProximE2VLANMODE_Strings = map[ProximE2VLANMODE]string{}

func (a ProximE2VLANMODE) String() string {
	if str, ok := ProximE2VLANMODE_Strings[a]; ok {
		return str
	}
	return "ProximE2VLANMODE(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2VLANMODE_Add(p *radius.Packet, value ProximE2VLANMODE) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 40, a)
}

func ProximE2VLANMODE_Get(p *radius.Packet) (value ProximE2VLANMODE) {
	value, _ = ProximE2VLANMODE_Lookup(p)
	return
}

func ProximE2VLANMODE_Gets(p *radius.Packet) (values []ProximE2VLANMODE, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 40) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2VLANMODE(i))
	}
	return
}

func ProximE2VLANMODE_Lookup(p *radius.Packet) (value ProximE2VLANMODE, err error) {
	a, ok := _Proxim_LookupVendor(p, 40)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2VLANMODE(i)
	return
}

func ProximE2VLANMODE_Set(p *radius.Packet, value ProximE2VLANMODE) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 40, a)
}

func ProximE2VLANMODE_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 40)
}

type ProximE2AccessVLANID uint32

var ProximE2AccessVLANID_Strings = map[ProximE2AccessVLANID]string{}

func (a ProximE2AccessVLANID) String() string {
	if str, ok := ProximE2AccessVLANID_Strings[a]; ok {
		return str
	}
	return "ProximE2AccessVLANID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2AccessVLANID_Add(p *radius.Packet, value ProximE2AccessVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 41, a)
}

func ProximE2AccessVLANID_Get(p *radius.Packet) (value ProximE2AccessVLANID) {
	value, _ = ProximE2AccessVLANID_Lookup(p)
	return
}

func ProximE2AccessVLANID_Gets(p *radius.Packet) (values []ProximE2AccessVLANID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 41) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2AccessVLANID(i))
	}
	return
}

func ProximE2AccessVLANID_Lookup(p *radius.Packet) (value ProximE2AccessVLANID, err error) {
	a, ok := _Proxim_LookupVendor(p, 41)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2AccessVLANID(i)
	return
}

func ProximE2AccessVLANID_Set(p *radius.Packet, value ProximE2AccessVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 41, a)
}

func ProximE2AccessVLANID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 41)
}

type ProximE2AccessVLANPri uint32

var ProximE2AccessVLANPri_Strings = map[ProximE2AccessVLANPri]string{}

func (a ProximE2AccessVLANPri) String() string {
	if str, ok := ProximE2AccessVLANPri_Strings[a]; ok {
		return str
	}
	return "ProximE2AccessVLANPri(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2AccessVLANPri_Add(p *radius.Packet, value ProximE2AccessVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 42, a)
}

func ProximE2AccessVLANPri_Get(p *radius.Packet) (value ProximE2AccessVLANPri) {
	value, _ = ProximE2AccessVLANPri_Lookup(p)
	return
}

func ProximE2AccessVLANPri_Gets(p *radius.Packet) (values []ProximE2AccessVLANPri, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 42) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2AccessVLANPri(i))
	}
	return
}

func ProximE2AccessVLANPri_Lookup(p *radius.Packet) (value ProximE2AccessVLANPri, err error) {
	a, ok := _Proxim_LookupVendor(p, 42)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2AccessVLANPri(i)
	return
}

func ProximE2AccessVLANPri_Set(p *radius.Packet, value ProximE2AccessVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 42, a)
}

func ProximE2AccessVLANPri_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 42)
}

type ProximE2TrunkID01 uint32

var ProximE2TrunkID01_Strings = map[ProximE2TrunkID01]string{}

func (a ProximE2TrunkID01) String() string {
	if str, ok := ProximE2TrunkID01_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID01(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID01_Add(p *radius.Packet, value ProximE2TrunkID01) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 43, a)
}

func ProximE2TrunkID01_Get(p *radius.Packet) (value ProximE2TrunkID01) {
	value, _ = ProximE2TrunkID01_Lookup(p)
	return
}

func ProximE2TrunkID01_Gets(p *radius.Packet) (values []ProximE2TrunkID01, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 43) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID01(i))
	}
	return
}

func ProximE2TrunkID01_Lookup(p *radius.Packet) (value ProximE2TrunkID01, err error) {
	a, ok := _Proxim_LookupVendor(p, 43)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID01(i)
	return
}

func ProximE2TrunkID01_Set(p *radius.Packet, value ProximE2TrunkID01) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 43, a)
}

func ProximE2TrunkID01_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 43)
}

type ProximE2TrunkID02 uint32

var ProximE2TrunkID02_Strings = map[ProximE2TrunkID02]string{}

func (a ProximE2TrunkID02) String() string {
	if str, ok := ProximE2TrunkID02_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID02(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID02_Add(p *radius.Packet, value ProximE2TrunkID02) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 44, a)
}

func ProximE2TrunkID02_Get(p *radius.Packet) (value ProximE2TrunkID02) {
	value, _ = ProximE2TrunkID02_Lookup(p)
	return
}

func ProximE2TrunkID02_Gets(p *radius.Packet) (values []ProximE2TrunkID02, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 44) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID02(i))
	}
	return
}

func ProximE2TrunkID02_Lookup(p *radius.Packet) (value ProximE2TrunkID02, err error) {
	a, ok := _Proxim_LookupVendor(p, 44)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID02(i)
	return
}

func ProximE2TrunkID02_Set(p *radius.Packet, value ProximE2TrunkID02) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 44, a)
}

func ProximE2TrunkID02_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 44)
}

type ProximE2TrunkID03 uint32

var ProximE2TrunkID03_Strings = map[ProximE2TrunkID03]string{}

func (a ProximE2TrunkID03) String() string {
	if str, ok := ProximE2TrunkID03_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID03(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID03_Add(p *radius.Packet, value ProximE2TrunkID03) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 45, a)
}

func ProximE2TrunkID03_Get(p *radius.Packet) (value ProximE2TrunkID03) {
	value, _ = ProximE2TrunkID03_Lookup(p)
	return
}

func ProximE2TrunkID03_Gets(p *radius.Packet) (values []ProximE2TrunkID03, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 45) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID03(i))
	}
	return
}

func ProximE2TrunkID03_Lookup(p *radius.Packet) (value ProximE2TrunkID03, err error) {
	a, ok := _Proxim_LookupVendor(p, 45)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID03(i)
	return
}

func ProximE2TrunkID03_Set(p *radius.Packet, value ProximE2TrunkID03) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 45, a)
}

func ProximE2TrunkID03_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 45)
}

type ProximE2TrunkID04 uint32

var ProximE2TrunkID04_Strings = map[ProximE2TrunkID04]string{}

func (a ProximE2TrunkID04) String() string {
	if str, ok := ProximE2TrunkID04_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID04(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID04_Add(p *radius.Packet, value ProximE2TrunkID04) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 46, a)
}

func ProximE2TrunkID04_Get(p *radius.Packet) (value ProximE2TrunkID04) {
	value, _ = ProximE2TrunkID04_Lookup(p)
	return
}

func ProximE2TrunkID04_Gets(p *radius.Packet) (values []ProximE2TrunkID04, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 46) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID04(i))
	}
	return
}

func ProximE2TrunkID04_Lookup(p *radius.Packet) (value ProximE2TrunkID04, err error) {
	a, ok := _Proxim_LookupVendor(p, 46)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID04(i)
	return
}

func ProximE2TrunkID04_Set(p *radius.Packet, value ProximE2TrunkID04) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 46, a)
}

func ProximE2TrunkID04_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 46)
}

type ProximE2TrunkID05 uint32

var ProximE2TrunkID05_Strings = map[ProximE2TrunkID05]string{}

func (a ProximE2TrunkID05) String() string {
	if str, ok := ProximE2TrunkID05_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID05(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID05_Add(p *radius.Packet, value ProximE2TrunkID05) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 47, a)
}

func ProximE2TrunkID05_Get(p *radius.Packet) (value ProximE2TrunkID05) {
	value, _ = ProximE2TrunkID05_Lookup(p)
	return
}

func ProximE2TrunkID05_Gets(p *radius.Packet) (values []ProximE2TrunkID05, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 47) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID05(i))
	}
	return
}

func ProximE2TrunkID05_Lookup(p *radius.Packet) (value ProximE2TrunkID05, err error) {
	a, ok := _Proxim_LookupVendor(p, 47)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID05(i)
	return
}

func ProximE2TrunkID05_Set(p *radius.Packet, value ProximE2TrunkID05) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 47, a)
}

func ProximE2TrunkID05_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 47)
}

type ProximE2TrunkID06 uint32

var ProximE2TrunkID06_Strings = map[ProximE2TrunkID06]string{}

func (a ProximE2TrunkID06) String() string {
	if str, ok := ProximE2TrunkID06_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID06(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID06_Add(p *radius.Packet, value ProximE2TrunkID06) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 48, a)
}

func ProximE2TrunkID06_Get(p *radius.Packet) (value ProximE2TrunkID06) {
	value, _ = ProximE2TrunkID06_Lookup(p)
	return
}

func ProximE2TrunkID06_Gets(p *radius.Packet) (values []ProximE2TrunkID06, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 48) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID06(i))
	}
	return
}

func ProximE2TrunkID06_Lookup(p *radius.Packet) (value ProximE2TrunkID06, err error) {
	a, ok := _Proxim_LookupVendor(p, 48)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID06(i)
	return
}

func ProximE2TrunkID06_Set(p *radius.Packet, value ProximE2TrunkID06) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 48, a)
}

func ProximE2TrunkID06_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 48)
}

type ProximE2TrunkID07 uint32

var ProximE2TrunkID07_Strings = map[ProximE2TrunkID07]string{}

func (a ProximE2TrunkID07) String() string {
	if str, ok := ProximE2TrunkID07_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID07(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID07_Add(p *radius.Packet, value ProximE2TrunkID07) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 49, a)
}

func ProximE2TrunkID07_Get(p *radius.Packet) (value ProximE2TrunkID07) {
	value, _ = ProximE2TrunkID07_Lookup(p)
	return
}

func ProximE2TrunkID07_Gets(p *radius.Packet) (values []ProximE2TrunkID07, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 49) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID07(i))
	}
	return
}

func ProximE2TrunkID07_Lookup(p *radius.Packet) (value ProximE2TrunkID07, err error) {
	a, ok := _Proxim_LookupVendor(p, 49)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID07(i)
	return
}

func ProximE2TrunkID07_Set(p *radius.Packet, value ProximE2TrunkID07) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 49, a)
}

func ProximE2TrunkID07_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 49)
}

type ProximE2TrunkID08 uint32

var ProximE2TrunkID08_Strings = map[ProximE2TrunkID08]string{}

func (a ProximE2TrunkID08) String() string {
	if str, ok := ProximE2TrunkID08_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID08(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID08_Add(p *radius.Packet, value ProximE2TrunkID08) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 50, a)
}

func ProximE2TrunkID08_Get(p *radius.Packet) (value ProximE2TrunkID08) {
	value, _ = ProximE2TrunkID08_Lookup(p)
	return
}

func ProximE2TrunkID08_Gets(p *radius.Packet) (values []ProximE2TrunkID08, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 50) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID08(i))
	}
	return
}

func ProximE2TrunkID08_Lookup(p *radius.Packet) (value ProximE2TrunkID08, err error) {
	a, ok := _Proxim_LookupVendor(p, 50)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID08(i)
	return
}

func ProximE2TrunkID08_Set(p *radius.Packet, value ProximE2TrunkID08) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 50, a)
}

func ProximE2TrunkID08_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 50)
}

type ProximE2TrunkID09 uint32

var ProximE2TrunkID09_Strings = map[ProximE2TrunkID09]string{}

func (a ProximE2TrunkID09) String() string {
	if str, ok := ProximE2TrunkID09_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID09(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID09_Add(p *radius.Packet, value ProximE2TrunkID09) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 51, a)
}

func ProximE2TrunkID09_Get(p *radius.Packet) (value ProximE2TrunkID09) {
	value, _ = ProximE2TrunkID09_Lookup(p)
	return
}

func ProximE2TrunkID09_Gets(p *radius.Packet) (values []ProximE2TrunkID09, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 51) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID09(i))
	}
	return
}

func ProximE2TrunkID09_Lookup(p *radius.Packet) (value ProximE2TrunkID09, err error) {
	a, ok := _Proxim_LookupVendor(p, 51)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID09(i)
	return
}

func ProximE2TrunkID09_Set(p *radius.Packet, value ProximE2TrunkID09) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 51, a)
}

func ProximE2TrunkID09_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 51)
}

type ProximE2TrunkID10 uint32

var ProximE2TrunkID10_Strings = map[ProximE2TrunkID10]string{}

func (a ProximE2TrunkID10) String() string {
	if str, ok := ProximE2TrunkID10_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID10(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID10_Add(p *radius.Packet, value ProximE2TrunkID10) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 52, a)
}

func ProximE2TrunkID10_Get(p *radius.Packet) (value ProximE2TrunkID10) {
	value, _ = ProximE2TrunkID10_Lookup(p)
	return
}

func ProximE2TrunkID10_Gets(p *radius.Packet) (values []ProximE2TrunkID10, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 52) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID10(i))
	}
	return
}

func ProximE2TrunkID10_Lookup(p *radius.Packet) (value ProximE2TrunkID10, err error) {
	a, ok := _Proxim_LookupVendor(p, 52)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID10(i)
	return
}

func ProximE2TrunkID10_Set(p *radius.Packet, value ProximE2TrunkID10) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 52, a)
}

func ProximE2TrunkID10_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 52)
}

type ProximE2TrunkID11 uint32

var ProximE2TrunkID11_Strings = map[ProximE2TrunkID11]string{}

func (a ProximE2TrunkID11) String() string {
	if str, ok := ProximE2TrunkID11_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID11(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID11_Add(p *radius.Packet, value ProximE2TrunkID11) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 53, a)
}

func ProximE2TrunkID11_Get(p *radius.Packet) (value ProximE2TrunkID11) {
	value, _ = ProximE2TrunkID11_Lookup(p)
	return
}

func ProximE2TrunkID11_Gets(p *radius.Packet) (values []ProximE2TrunkID11, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 53) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID11(i))
	}
	return
}

func ProximE2TrunkID11_Lookup(p *radius.Packet) (value ProximE2TrunkID11, err error) {
	a, ok := _Proxim_LookupVendor(p, 53)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID11(i)
	return
}

func ProximE2TrunkID11_Set(p *radius.Packet, value ProximE2TrunkID11) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 53, a)
}

func ProximE2TrunkID11_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 53)
}

type ProximE2TrunkID12 uint32

var ProximE2TrunkID12_Strings = map[ProximE2TrunkID12]string{}

func (a ProximE2TrunkID12) String() string {
	if str, ok := ProximE2TrunkID12_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID12(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID12_Add(p *radius.Packet, value ProximE2TrunkID12) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 54, a)
}

func ProximE2TrunkID12_Get(p *radius.Packet) (value ProximE2TrunkID12) {
	value, _ = ProximE2TrunkID12_Lookup(p)
	return
}

func ProximE2TrunkID12_Gets(p *radius.Packet) (values []ProximE2TrunkID12, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 54) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID12(i))
	}
	return
}

func ProximE2TrunkID12_Lookup(p *radius.Packet) (value ProximE2TrunkID12, err error) {
	a, ok := _Proxim_LookupVendor(p, 54)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID12(i)
	return
}

func ProximE2TrunkID12_Set(p *radius.Packet, value ProximE2TrunkID12) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 54, a)
}

func ProximE2TrunkID12_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 54)
}

type ProximE2TrunkID13 uint32

var ProximE2TrunkID13_Strings = map[ProximE2TrunkID13]string{}

func (a ProximE2TrunkID13) String() string {
	if str, ok := ProximE2TrunkID13_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID13(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID13_Add(p *radius.Packet, value ProximE2TrunkID13) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 55, a)
}

func ProximE2TrunkID13_Get(p *radius.Packet) (value ProximE2TrunkID13) {
	value, _ = ProximE2TrunkID13_Lookup(p)
	return
}

func ProximE2TrunkID13_Gets(p *radius.Packet) (values []ProximE2TrunkID13, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 55) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID13(i))
	}
	return
}

func ProximE2TrunkID13_Lookup(p *radius.Packet) (value ProximE2TrunkID13, err error) {
	a, ok := _Proxim_LookupVendor(p, 55)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID13(i)
	return
}

func ProximE2TrunkID13_Set(p *radius.Packet, value ProximE2TrunkID13) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 55, a)
}

func ProximE2TrunkID13_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 55)
}

type ProximE2TrunkID14 uint32

var ProximE2TrunkID14_Strings = map[ProximE2TrunkID14]string{}

func (a ProximE2TrunkID14) String() string {
	if str, ok := ProximE2TrunkID14_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID14(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID14_Add(p *radius.Packet, value ProximE2TrunkID14) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 56, a)
}

func ProximE2TrunkID14_Get(p *radius.Packet) (value ProximE2TrunkID14) {
	value, _ = ProximE2TrunkID14_Lookup(p)
	return
}

func ProximE2TrunkID14_Gets(p *radius.Packet) (values []ProximE2TrunkID14, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 56) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID14(i))
	}
	return
}

func ProximE2TrunkID14_Lookup(p *radius.Packet) (value ProximE2TrunkID14, err error) {
	a, ok := _Proxim_LookupVendor(p, 56)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID14(i)
	return
}

func ProximE2TrunkID14_Set(p *radius.Packet, value ProximE2TrunkID14) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 56, a)
}

func ProximE2TrunkID14_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 56)
}

type ProximE2TrunkID15 uint32

var ProximE2TrunkID15_Strings = map[ProximE2TrunkID15]string{}

func (a ProximE2TrunkID15) String() string {
	if str, ok := ProximE2TrunkID15_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID15(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID15_Add(p *radius.Packet, value ProximE2TrunkID15) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 57, a)
}

func ProximE2TrunkID15_Get(p *radius.Packet) (value ProximE2TrunkID15) {
	value, _ = ProximE2TrunkID15_Lookup(p)
	return
}

func ProximE2TrunkID15_Gets(p *radius.Packet) (values []ProximE2TrunkID15, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 57) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID15(i))
	}
	return
}

func ProximE2TrunkID15_Lookup(p *radius.Packet) (value ProximE2TrunkID15, err error) {
	a, ok := _Proxim_LookupVendor(p, 57)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID15(i)
	return
}

func ProximE2TrunkID15_Set(p *radius.Packet, value ProximE2TrunkID15) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 57, a)
}

func ProximE2TrunkID15_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 57)
}

type ProximE2TrunkID16 uint32

var ProximE2TrunkID16_Strings = map[ProximE2TrunkID16]string{}

func (a ProximE2TrunkID16) String() string {
	if str, ok := ProximE2TrunkID16_Strings[a]; ok {
		return str
	}
	return "ProximE2TrunkID16(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2TrunkID16_Add(p *radius.Packet, value ProximE2TrunkID16) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 58, a)
}

func ProximE2TrunkID16_Get(p *radius.Packet) (value ProximE2TrunkID16) {
	value, _ = ProximE2TrunkID16_Lookup(p)
	return
}

func ProximE2TrunkID16_Gets(p *radius.Packet) (values []ProximE2TrunkID16, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 58) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2TrunkID16(i))
	}
	return
}

func ProximE2TrunkID16_Lookup(p *radius.Packet) (value ProximE2TrunkID16, err error) {
	a, ok := _Proxim_LookupVendor(p, 58)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2TrunkID16(i)
	return
}

func ProximE2TrunkID16_Set(p *radius.Packet, value ProximE2TrunkID16) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 58, a)
}

func ProximE2TrunkID16_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 58)
}

type ProximQinQStatus uint32

var ProximQinQStatus_Strings = map[ProximQinQStatus]string{}

func (a ProximQinQStatus) String() string {
	if str, ok := ProximQinQStatus_Strings[a]; ok {
		return str
	}
	return "ProximQinQStatus(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximQinQStatus_Add(p *radius.Packet, value ProximQinQStatus) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 59, a)
}

func ProximQinQStatus_Get(p *radius.Packet) (value ProximQinQStatus) {
	value, _ = ProximQinQStatus_Lookup(p)
	return
}

func ProximQinQStatus_Gets(p *radius.Packet) (values []ProximQinQStatus, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 59) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximQinQStatus(i))
	}
	return
}

func ProximQinQStatus_Lookup(p *radius.Packet) (value ProximQinQStatus, err error) {
	a, ok := _Proxim_LookupVendor(p, 59)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximQinQStatus(i)
	return
}

func ProximQinQStatus_Set(p *radius.Packet, value ProximQinQStatus) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 59, a)
}

func ProximQinQStatus_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 59)
}

type ProximServiceVLANTPID uint32

var ProximServiceVLANTPID_Strings = map[ProximServiceVLANTPID]string{}

func (a ProximServiceVLANTPID) String() string {
	if str, ok := ProximServiceVLANTPID_Strings[a]; ok {
		return str
	}
	return "ProximServiceVLANTPID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximServiceVLANTPID_Add(p *radius.Packet, value ProximServiceVLANTPID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 60, a)
}

func ProximServiceVLANTPID_Get(p *radius.Packet) (value ProximServiceVLANTPID) {
	value, _ = ProximServiceVLANTPID_Lookup(p)
	return
}

func ProximServiceVLANTPID_Gets(p *radius.Packet) (values []ProximServiceVLANTPID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 60) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximServiceVLANTPID(i))
	}
	return
}

func ProximServiceVLANTPID_Lookup(p *radius.Packet) (value ProximServiceVLANTPID, err error) {
	a, ok := _Proxim_LookupVendor(p, 60)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximServiceVLANTPID(i)
	return
}

func ProximServiceVLANTPID_Set(p *radius.Packet, value ProximServiceVLANTPID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 60, a)
}

func ProximServiceVLANTPID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 60)
}

type ProximE1PortVLANID uint32

var ProximE1PortVLANID_Strings = map[ProximE1PortVLANID]string{}

func (a ProximE1PortVLANID) String() string {
	if str, ok := ProximE1PortVLANID_Strings[a]; ok {
		return str
	}
	return "ProximE1PortVLANID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1PortVLANID_Add(p *radius.Packet, value ProximE1PortVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 61, a)
}

func ProximE1PortVLANID_Get(p *radius.Packet) (value ProximE1PortVLANID) {
	value, _ = ProximE1PortVLANID_Lookup(p)
	return
}

func ProximE1PortVLANID_Gets(p *radius.Packet) (values []ProximE1PortVLANID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 61) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1PortVLANID(i))
	}
	return
}

func ProximE1PortVLANID_Lookup(p *radius.Packet) (value ProximE1PortVLANID, err error) {
	a, ok := _Proxim_LookupVendor(p, 61)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1PortVLANID(i)
	return
}

func ProximE1PortVLANID_Set(p *radius.Packet, value ProximE1PortVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 61, a)
}

func ProximE1PortVLANID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 61)
}

type ProximE1PortVLANPri uint32

var ProximE1PortVLANPri_Strings = map[ProximE1PortVLANPri]string{}

func (a ProximE1PortVLANPri) String() string {
	if str, ok := ProximE1PortVLANPri_Strings[a]; ok {
		return str
	}
	return "ProximE1PortVLANPri(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1PortVLANPri_Add(p *radius.Packet, value ProximE1PortVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 62, a)
}

func ProximE1PortVLANPri_Get(p *radius.Packet) (value ProximE1PortVLANPri) {
	value, _ = ProximE1PortVLANPri_Lookup(p)
	return
}

func ProximE1PortVLANPri_Gets(p *radius.Packet) (values []ProximE1PortVLANPri, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 62) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1PortVLANPri(i))
	}
	return
}

func ProximE1PortVLANPri_Lookup(p *radius.Packet) (value ProximE1PortVLANPri, err error) {
	a, ok := _Proxim_LookupVendor(p, 62)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1PortVLANPri(i)
	return
}

func ProximE1PortVLANPri_Set(p *radius.Packet, value ProximE1PortVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 62, a)
}

func ProximE1PortVLANPri_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 62)
}

type ProximE1AllowUntag uint32

var ProximE1AllowUntag_Strings = map[ProximE1AllowUntag]string{}

func (a ProximE1AllowUntag) String() string {
	if str, ok := ProximE1AllowUntag_Strings[a]; ok {
		return str
	}
	return "ProximE1AllowUntag(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1AllowUntag_Add(p *radius.Packet, value ProximE1AllowUntag) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 63, a)
}

func ProximE1AllowUntag_Get(p *radius.Packet) (value ProximE1AllowUntag) {
	value, _ = ProximE1AllowUntag_Lookup(p)
	return
}

func ProximE1AllowUntag_Gets(p *radius.Packet) (values []ProximE1AllowUntag, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 63) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1AllowUntag(i))
	}
	return
}

func ProximE1AllowUntag_Lookup(p *radius.Packet) (value ProximE1AllowUntag, err error) {
	a, ok := _Proxim_LookupVendor(p, 63)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1AllowUntag(i)
	return
}

func ProximE1AllowUntag_Set(p *radius.Packet, value ProximE1AllowUntag) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 63, a)
}

func ProximE1AllowUntag_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 63)
}

type ProximE2PortVLANID uint32

var ProximE2PortVLANID_Strings = map[ProximE2PortVLANID]string{}

func (a ProximE2PortVLANID) String() string {
	if str, ok := ProximE2PortVLANID_Strings[a]; ok {
		return str
	}
	return "ProximE2PortVLANID(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2PortVLANID_Add(p *radius.Packet, value ProximE2PortVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 64, a)
}

func ProximE2PortVLANID_Get(p *radius.Packet) (value ProximE2PortVLANID) {
	value, _ = ProximE2PortVLANID_Lookup(p)
	return
}

func ProximE2PortVLANID_Gets(p *radius.Packet) (values []ProximE2PortVLANID, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 64) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2PortVLANID(i))
	}
	return
}

func ProximE2PortVLANID_Lookup(p *radius.Packet) (value ProximE2PortVLANID, err error) {
	a, ok := _Proxim_LookupVendor(p, 64)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2PortVLANID(i)
	return
}

func ProximE2PortVLANID_Set(p *radius.Packet, value ProximE2PortVLANID) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 64, a)
}

func ProximE2PortVLANID_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 64)
}

type ProximE2PortVLANPri uint32

var ProximE2PortVLANPri_Strings = map[ProximE2PortVLANPri]string{}

func (a ProximE2PortVLANPri) String() string {
	if str, ok := ProximE2PortVLANPri_Strings[a]; ok {
		return str
	}
	return "ProximE2PortVLANPri(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2PortVLANPri_Add(p *radius.Packet, value ProximE2PortVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 65, a)
}

func ProximE2PortVLANPri_Get(p *radius.Packet) (value ProximE2PortVLANPri) {
	value, _ = ProximE2PortVLANPri_Lookup(p)
	return
}

func ProximE2PortVLANPri_Gets(p *radius.Packet) (values []ProximE2PortVLANPri, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 65) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2PortVLANPri(i))
	}
	return
}

func ProximE2PortVLANPri_Lookup(p *radius.Packet) (value ProximE2PortVLANPri, err error) {
	a, ok := _Proxim_LookupVendor(p, 65)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2PortVLANPri(i)
	return
}

func ProximE2PortVLANPri_Set(p *radius.Packet, value ProximE2PortVLANPri) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 65, a)
}

func ProximE2PortVLANPri_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 65)
}

type ProximE2AllowUntag uint32

var ProximE2AllowUntag_Strings = map[ProximE2AllowUntag]string{}

func (a ProximE2AllowUntag) String() string {
	if str, ok := ProximE2AllowUntag_Strings[a]; ok {
		return str
	}
	return "ProximE2AllowUntag(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2AllowUntag_Add(p *radius.Packet, value ProximE2AllowUntag) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 66, a)
}

func ProximE2AllowUntag_Get(p *radius.Packet) (value ProximE2AllowUntag) {
	value, _ = ProximE2AllowUntag_Lookup(p)
	return
}

func ProximE2AllowUntag_Gets(p *radius.Packet) (values []ProximE2AllowUntag, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 66) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2AllowUntag(i))
	}
	return
}

func ProximE2AllowUntag_Lookup(p *radius.Packet) (value ProximE2AllowUntag, err error) {
	a, ok := _Proxim_LookupVendor(p, 66)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2AllowUntag(i)
	return
}

func ProximE2AllowUntag_Set(p *radius.Packet, value ProximE2AllowUntag) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 66, a)
}

func ProximE2AllowUntag_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 66)
}

type ProximE1SUAllowUntagMgmt uint32

var ProximE1SUAllowUntagMgmt_Strings = map[ProximE1SUAllowUntagMgmt]string{}

func (a ProximE1SUAllowUntagMgmt) String() string {
	if str, ok := ProximE1SUAllowUntagMgmt_Strings[a]; ok {
		return str
	}
	return "ProximE1SUAllowUntagMgmt(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE1SUAllowUntagMgmt_Add(p *radius.Packet, value ProximE1SUAllowUntagMgmt) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 68, a)
}

func ProximE1SUAllowUntagMgmt_Get(p *radius.Packet) (value ProximE1SUAllowUntagMgmt) {
	value, _ = ProximE1SUAllowUntagMgmt_Lookup(p)
	return
}

func ProximE1SUAllowUntagMgmt_Gets(p *radius.Packet) (values []ProximE1SUAllowUntagMgmt, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 68) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE1SUAllowUntagMgmt(i))
	}
	return
}

func ProximE1SUAllowUntagMgmt_Lookup(p *radius.Packet) (value ProximE1SUAllowUntagMgmt, err error) {
	a, ok := _Proxim_LookupVendor(p, 68)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE1SUAllowUntagMgmt(i)
	return
}

func ProximE1SUAllowUntagMgmt_Set(p *radius.Packet, value ProximE1SUAllowUntagMgmt) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 68, a)
}

func ProximE1SUAllowUntagMgmt_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 68)
}

type ProximE2SUAllowUntagMgmt uint32

var ProximE2SUAllowUntagMgmt_Strings = map[ProximE2SUAllowUntagMgmt]string{}

func (a ProximE2SUAllowUntagMgmt) String() string {
	if str, ok := ProximE2SUAllowUntagMgmt_Strings[a]; ok {
		return str
	}
	return "ProximE2SUAllowUntagMgmt(" + strconv.FormatUint(uint64(a), 10) + ")"
}

func ProximE2SUAllowUntagMgmt_Add(p *radius.Packet, value ProximE2SUAllowUntagMgmt) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_AddVendor(p, 69, a)
}

func ProximE2SUAllowUntagMgmt_Get(p *radius.Packet) (value ProximE2SUAllowUntagMgmt) {
	value, _ = ProximE2SUAllowUntagMgmt_Lookup(p)
	return
}

func ProximE2SUAllowUntagMgmt_Gets(p *radius.Packet) (values []ProximE2SUAllowUntagMgmt, err error) {
	var i uint32
	for _, attr := range _Proxim_GetsVendor(p, 69) {
		i, err = radius.Integer(attr)
		if err != nil {
			return
		}
		values = append(values, ProximE2SUAllowUntagMgmt(i))
	}
	return
}

func ProximE2SUAllowUntagMgmt_Lookup(p *radius.Packet) (value ProximE2SUAllowUntagMgmt, err error) {
	a, ok := _Proxim_LookupVendor(p, 69)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	var i uint32
	i, err = radius.Integer(a)
	if err != nil {
		return
	}
	value = ProximE2SUAllowUntagMgmt(i)
	return
}

func ProximE2SUAllowUntagMgmt_Set(p *radius.Packet, value ProximE2SUAllowUntagMgmt) (err error) {
	a := radius.NewInteger(uint32(value))
	return _Proxim_SetVendor(p, 69, a)
}

func ProximE2SUAllowUntagMgmt_Del(p *radius.Packet) {
	_Proxim_DelVendor(p, 69)
}
