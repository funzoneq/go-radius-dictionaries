// Code generated by radius-dict-gen. DO NOT EDIT.

package quintum

import (
	"layeh.com/radius"
	"layeh.com/radius/rfc2865"
)

const (
	_Quintum_VendorID = 6618
)

func _Quintum_AddVendor(p *radius.Packet, typ byte, attr radius.Attribute) (err error) {
	var vsa radius.Attribute
	vendor := make(radius.Attribute, 2+len(attr))
	vendor[0] = typ
	vendor[1] = byte(len(vendor))
	copy(vendor[2:], attr)
	vsa, err = radius.NewVendorSpecific(_Quintum_VendorID, vendor)
	if err != nil {
		return
	}
	p.Add(rfc2865.VendorSpecific_Type, vsa)
	return
}

func _Quintum_GetsVendor(p *radius.Packet, typ byte) (values []radius.Attribute) {
	for _, avp := range p.Attributes {
		if avp.Type != rfc2865.VendorSpecific_Type {
			continue
		}
		attr := avp.Attribute
		vendorID, vsa, err := radius.VendorSpecific(attr)
		if err != nil || vendorID != _Quintum_VendorID {
			continue
		}
		for len(vsa) >= 3 {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				break
			}
			if vsaTyp == typ {
				values = append(values, vsa[2:int(vsaLen)])
			}
			vsa = vsa[int(vsaLen):]
		}
	}
	return
}

func _Quintum_LookupVendor(p *radius.Packet, typ byte) (attr radius.Attribute, ok bool) {
	for _, avp := range p.Attributes {
		if avp.Type != rfc2865.VendorSpecific_Type {
			continue
		}
		attr := avp.Attribute
		vendorID, vsa, err := radius.VendorSpecific(attr)
		if err != nil || vendorID != _Quintum_VendorID {
			continue
		}
		for len(vsa) >= 3 {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				break
			}
			if vsaTyp == typ {
				return vsa[2:int(vsaLen)], true
			}
			vsa = vsa[int(vsaLen):]
		}
	}
	return
}

func _Quintum_SetVendor(p *radius.Packet, typ byte, attr radius.Attribute) (err error) {
	for i := 0; i < len(p.Attributes); {
		avp := p.Attributes[i]
		if avp.Type != rfc2865.VendorSpecific_Type {
			i++
			continue
		}
		vendorID, vsa, err := radius.VendorSpecific(avp.Attribute)
		if err != nil || vendorID != _Quintum_VendorID {
			i++
			continue
		}
		for j := 0; len(vsa[j:]) >= 3; {
			vsaTyp, vsaLen := vsa[0], vsa[1]
			if int(vsaLen) > len(vsa[j:]) || vsaLen < 3 {
				i++
				break
			}
			if vsaTyp == typ {
				vsa = append(vsa[:j], vsa[j+int(vsaLen):]...)
			}
			j += int(vsaLen)
		}
		if len(vsa) > 0 {
			copy(avp.Attribute[4:], vsa)
			i++
		} else {
			p.Attributes = append(p.Attributes[:i], p.Attributes[i+i:]...)
		}
	}
	return _Quintum_AddVendor(p, typ, attr)
}

func _Quintum_DelVendor(p *radius.Packet, typ byte) {
vsaLoop:
	for i := 0; i < len(p.Attributes); {
		avp := p.Attributes[i]
		if avp.Type != rfc2865.VendorSpecific_Type {
			i++
			continue
		}
		vendorID, vsa, err := radius.VendorSpecific(avp.Attribute)
		if err != nil || vendorID != _Quintum_VendorID {
			i++
			continue
		}
		offset := 0
		for len(vsa[offset:]) >= 3 {
			vsaTyp, vsaLen := vsa[offset], vsa[offset+1]
			if int(vsaLen) > len(vsa) || vsaLen < 3 {
				continue vsaLoop
			}
			if vsaTyp == typ {
				copy(vsa[offset:], vsa[offset+int(vsaLen):])
				vsa = vsa[:len(vsa)-int(vsaLen)]
			} else {
				offset += int(vsaLen)
			}
		}
		if offset == 0 {
			p.Attributes = append(p.Attributes[:i], p.Attributes[i+1:]...)
		} else {
			i++
		}
	}
	return
}

func QuintumAVPair_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 1, a)
}

func QuintumAVPair_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 1, a)
}

func QuintumAVPair_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumAVPair_Lookup(p)
	return
}

func QuintumAVPair_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumAVPair_LookupString(p)
	return
}

func QuintumAVPair_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 1) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumAVPair_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 1) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumAVPair_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 1)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumAVPair_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 1)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumAVPair_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 1, a)
}

func QuintumAVPair_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 1, a)
}

func QuintumAVPair_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 1)
}

func QuintumNASPort_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 2, a)
}

func QuintumNASPort_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 2, a)
}

func QuintumNASPort_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumNASPort_Lookup(p)
	return
}

func QuintumNASPort_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumNASPort_LookupString(p)
	return
}

func QuintumNASPort_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 2) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumNASPort_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 2) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumNASPort_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 2)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumNASPort_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 2)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumNASPort_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 2, a)
}

func QuintumNASPort_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 2, a)
}

func QuintumNASPort_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 2)
}

func QuintumH323RemoteAddress_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 23, a)
}

func QuintumH323RemoteAddress_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 23, a)
}

func QuintumH323RemoteAddress_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323RemoteAddress_Lookup(p)
	return
}

func QuintumH323RemoteAddress_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323RemoteAddress_LookupString(p)
	return
}

func QuintumH323RemoteAddress_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 23) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323RemoteAddress_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 23) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323RemoteAddress_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 23)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323RemoteAddress_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 23)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323RemoteAddress_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 23, a)
}

func QuintumH323RemoteAddress_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 23, a)
}

func QuintumH323RemoteAddress_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 23)
}

func QuintumH323ConfID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 24, a)
}

func QuintumH323ConfID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 24, a)
}

func QuintumH323ConfID_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323ConfID_Lookup(p)
	return
}

func QuintumH323ConfID_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323ConfID_LookupString(p)
	return
}

func QuintumH323ConfID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 24) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323ConfID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 24) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323ConfID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 24)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323ConfID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 24)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323ConfID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 24, a)
}

func QuintumH323ConfID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 24, a)
}

func QuintumH323ConfID_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 24)
}

func QuintumH323SetupTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 25, a)
}

func QuintumH323SetupTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 25, a)
}

func QuintumH323SetupTime_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323SetupTime_Lookup(p)
	return
}

func QuintumH323SetupTime_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323SetupTime_LookupString(p)
	return
}

func QuintumH323SetupTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 25) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323SetupTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 25) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323SetupTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 25)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323SetupTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 25)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323SetupTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 25, a)
}

func QuintumH323SetupTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 25, a)
}

func QuintumH323SetupTime_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 25)
}

func QuintumH323CallOrigin_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 26, a)
}

func QuintumH323CallOrigin_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 26, a)
}

func QuintumH323CallOrigin_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323CallOrigin_Lookup(p)
	return
}

func QuintumH323CallOrigin_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323CallOrigin_LookupString(p)
	return
}

func QuintumH323CallOrigin_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 26) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CallOrigin_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 26) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CallOrigin_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 26)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323CallOrigin_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 26)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323CallOrigin_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 26, a)
}

func QuintumH323CallOrigin_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 26, a)
}

func QuintumH323CallOrigin_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 26)
}

func QuintumH323CallType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 27, a)
}

func QuintumH323CallType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 27, a)
}

func QuintumH323CallType_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323CallType_Lookup(p)
	return
}

func QuintumH323CallType_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323CallType_LookupString(p)
	return
}

func QuintumH323CallType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 27) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CallType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 27) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CallType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 27)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323CallType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 27)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323CallType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 27, a)
}

func QuintumH323CallType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 27, a)
}

func QuintumH323CallType_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 27)
}

func QuintumH323ConnectTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 28, a)
}

func QuintumH323ConnectTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 28, a)
}

func QuintumH323ConnectTime_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323ConnectTime_Lookup(p)
	return
}

func QuintumH323ConnectTime_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323ConnectTime_LookupString(p)
	return
}

func QuintumH323ConnectTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 28) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323ConnectTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 28) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323ConnectTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 28)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323ConnectTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 28)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323ConnectTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 28, a)
}

func QuintumH323ConnectTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 28, a)
}

func QuintumH323ConnectTime_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 28)
}

func QuintumH323DisconnectTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 29, a)
}

func QuintumH323DisconnectTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 29, a)
}

func QuintumH323DisconnectTime_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323DisconnectTime_Lookup(p)
	return
}

func QuintumH323DisconnectTime_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323DisconnectTime_LookupString(p)
	return
}

func QuintumH323DisconnectTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 29) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323DisconnectTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 29) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323DisconnectTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 29)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323DisconnectTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 29)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323DisconnectTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 29, a)
}

func QuintumH323DisconnectTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 29, a)
}

func QuintumH323DisconnectTime_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 29)
}

func QuintumH323DisconnectCause_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 30, a)
}

func QuintumH323DisconnectCause_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 30, a)
}

func QuintumH323DisconnectCause_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323DisconnectCause_Lookup(p)
	return
}

func QuintumH323DisconnectCause_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323DisconnectCause_LookupString(p)
	return
}

func QuintumH323DisconnectCause_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 30) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323DisconnectCause_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 30) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323DisconnectCause_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 30)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323DisconnectCause_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 30)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323DisconnectCause_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 30, a)
}

func QuintumH323DisconnectCause_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 30, a)
}

func QuintumH323DisconnectCause_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 30)
}

func QuintumH323VoiceQuality_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 31, a)
}

func QuintumH323VoiceQuality_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 31, a)
}

func QuintumH323VoiceQuality_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323VoiceQuality_Lookup(p)
	return
}

func QuintumH323VoiceQuality_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323VoiceQuality_LookupString(p)
	return
}

func QuintumH323VoiceQuality_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 31) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323VoiceQuality_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 31) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323VoiceQuality_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 31)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323VoiceQuality_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 31)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323VoiceQuality_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 31, a)
}

func QuintumH323VoiceQuality_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 31, a)
}

func QuintumH323VoiceQuality_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 31)
}

func QuintumH323GwID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 33, a)
}

func QuintumH323GwID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 33, a)
}

func QuintumH323GwID_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323GwID_Lookup(p)
	return
}

func QuintumH323GwID_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323GwID_LookupString(p)
	return
}

func QuintumH323GwID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 33) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323GwID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 33) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323GwID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 33)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323GwID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 33)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323GwID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 33, a)
}

func QuintumH323GwID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 33, a)
}

func QuintumH323GwID_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 33)
}

func QuintumH323IncomingConfID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 35, a)
}

func QuintumH323IncomingConfID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 35, a)
}

func QuintumH323IncomingConfID_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323IncomingConfID_Lookup(p)
	return
}

func QuintumH323IncomingConfID_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323IncomingConfID_LookupString(p)
	return
}

func QuintumH323IncomingConfID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 35) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323IncomingConfID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 35) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323IncomingConfID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 35)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323IncomingConfID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 35)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323IncomingConfID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 35, a)
}

func QuintumH323IncomingConfID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 35, a)
}

func QuintumH323IncomingConfID_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 35)
}

func QuintumH323CreditAmount_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 101, a)
}

func QuintumH323CreditAmount_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 101, a)
}

func QuintumH323CreditAmount_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323CreditAmount_Lookup(p)
	return
}

func QuintumH323CreditAmount_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323CreditAmount_LookupString(p)
	return
}

func QuintumH323CreditAmount_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 101) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CreditAmount_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 101) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CreditAmount_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 101)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323CreditAmount_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 101)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323CreditAmount_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 101, a)
}

func QuintumH323CreditAmount_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 101, a)
}

func QuintumH323CreditAmount_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 101)
}

func QuintumH323CreditTime_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 102, a)
}

func QuintumH323CreditTime_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 102, a)
}

func QuintumH323CreditTime_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323CreditTime_Lookup(p)
	return
}

func QuintumH323CreditTime_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323CreditTime_LookupString(p)
	return
}

func QuintumH323CreditTime_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 102) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CreditTime_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 102) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CreditTime_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 102)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323CreditTime_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 102)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323CreditTime_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 102, a)
}

func QuintumH323CreditTime_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 102, a)
}

func QuintumH323CreditTime_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 102)
}

func QuintumH323ReturnCode_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 103, a)
}

func QuintumH323ReturnCode_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 103, a)
}

func QuintumH323ReturnCode_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323ReturnCode_Lookup(p)
	return
}

func QuintumH323ReturnCode_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323ReturnCode_LookupString(p)
	return
}

func QuintumH323ReturnCode_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 103) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323ReturnCode_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 103) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323ReturnCode_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 103)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323ReturnCode_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 103)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323ReturnCode_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 103, a)
}

func QuintumH323ReturnCode_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 103, a)
}

func QuintumH323ReturnCode_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 103)
}

func QuintumH323PromptID_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 104, a)
}

func QuintumH323PromptID_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 104, a)
}

func QuintumH323PromptID_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323PromptID_Lookup(p)
	return
}

func QuintumH323PromptID_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323PromptID_LookupString(p)
	return
}

func QuintumH323PromptID_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 104) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323PromptID_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 104) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323PromptID_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 104)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323PromptID_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 104)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323PromptID_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 104, a)
}

func QuintumH323PromptID_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 104, a)
}

func QuintumH323PromptID_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 104)
}

func QuintumH323TimeAndDay_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 105, a)
}

func QuintumH323TimeAndDay_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 105, a)
}

func QuintumH323TimeAndDay_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323TimeAndDay_Lookup(p)
	return
}

func QuintumH323TimeAndDay_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323TimeAndDay_LookupString(p)
	return
}

func QuintumH323TimeAndDay_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 105) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323TimeAndDay_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 105) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323TimeAndDay_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 105)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323TimeAndDay_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 105)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323TimeAndDay_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 105, a)
}

func QuintumH323TimeAndDay_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 105, a)
}

func QuintumH323TimeAndDay_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 105)
}

func QuintumH323RedirectNumber_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 106, a)
}

func QuintumH323RedirectNumber_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 106, a)
}

func QuintumH323RedirectNumber_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323RedirectNumber_Lookup(p)
	return
}

func QuintumH323RedirectNumber_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323RedirectNumber_LookupString(p)
	return
}

func QuintumH323RedirectNumber_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 106) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323RedirectNumber_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 106) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323RedirectNumber_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 106)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323RedirectNumber_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 106)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323RedirectNumber_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 106, a)
}

func QuintumH323RedirectNumber_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 106, a)
}

func QuintumH323RedirectNumber_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 106)
}

func QuintumH323PreferredLang_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 107, a)
}

func QuintumH323PreferredLang_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 107, a)
}

func QuintumH323PreferredLang_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323PreferredLang_Lookup(p)
	return
}

func QuintumH323PreferredLang_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323PreferredLang_LookupString(p)
	return
}

func QuintumH323PreferredLang_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 107) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323PreferredLang_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 107) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323PreferredLang_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 107)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323PreferredLang_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 107)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323PreferredLang_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 107, a)
}

func QuintumH323PreferredLang_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 107, a)
}

func QuintumH323PreferredLang_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 107)
}

func QuintumH323RedirectIPAddress_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 108, a)
}

func QuintumH323RedirectIPAddress_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 108, a)
}

func QuintumH323RedirectIPAddress_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323RedirectIPAddress_Lookup(p)
	return
}

func QuintumH323RedirectIPAddress_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323RedirectIPAddress_LookupString(p)
	return
}

func QuintumH323RedirectIPAddress_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 108) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323RedirectIPAddress_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 108) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323RedirectIPAddress_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 108)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323RedirectIPAddress_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 108)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323RedirectIPAddress_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 108, a)
}

func QuintumH323RedirectIPAddress_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 108, a)
}

func QuintumH323RedirectIPAddress_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 108)
}

func QuintumH323BillingModel_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 109, a)
}

func QuintumH323BillingModel_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 109, a)
}

func QuintumH323BillingModel_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323BillingModel_Lookup(p)
	return
}

func QuintumH323BillingModel_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323BillingModel_LookupString(p)
	return
}

func QuintumH323BillingModel_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 109) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323BillingModel_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 109) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323BillingModel_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 109)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323BillingModel_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 109)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323BillingModel_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 109, a)
}

func QuintumH323BillingModel_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 109, a)
}

func QuintumH323BillingModel_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 109)
}

func QuintumH323CurrencyType_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 110, a)
}

func QuintumH323CurrencyType_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 110, a)
}

func QuintumH323CurrencyType_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumH323CurrencyType_Lookup(p)
	return
}

func QuintumH323CurrencyType_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumH323CurrencyType_LookupString(p)
	return
}

func QuintumH323CurrencyType_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 110) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CurrencyType_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 110) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumH323CurrencyType_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 110)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumH323CurrencyType_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 110)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumH323CurrencyType_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 110, a)
}

func QuintumH323CurrencyType_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 110, a)
}

func QuintumH323CurrencyType_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 110)
}

func QuintumTrunkidIn_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 230, a)
}

func QuintumTrunkidIn_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 230, a)
}

func QuintumTrunkidIn_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumTrunkidIn_Lookup(p)
	return
}

func QuintumTrunkidIn_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumTrunkidIn_LookupString(p)
	return
}

func QuintumTrunkidIn_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 230) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumTrunkidIn_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 230) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumTrunkidIn_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 230)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumTrunkidIn_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 230)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumTrunkidIn_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 230, a)
}

func QuintumTrunkidIn_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 230, a)
}

func QuintumTrunkidIn_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 230)
}

func QuintumTrunkidOut_Add(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 231, a)
}

func QuintumTrunkidOut_AddString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_AddVendor(p, 231, a)
}

func QuintumTrunkidOut_Get(p *radius.Packet) (value []byte) {
	value, _ = QuintumTrunkidOut_Lookup(p)
	return
}

func QuintumTrunkidOut_GetString(p *radius.Packet) (value string) {
	value, _ = QuintumTrunkidOut_LookupString(p)
	return
}

func QuintumTrunkidOut_Gets(p *radius.Packet) (values [][]byte, err error) {
	var i []byte
	for _, attr := range _Quintum_GetsVendor(p, 231) {
		i = radius.Bytes(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumTrunkidOut_GetStrings(p *radius.Packet) (values []string, err error) {
	var i string
	for _, attr := range _Quintum_GetsVendor(p, 231) {
		i = radius.String(attr)
		if err != nil {
			return
		}
		values = append(values, i)
	}
	return
}

func QuintumTrunkidOut_Lookup(p *radius.Packet) (value []byte, err error) {
	a, ok := _Quintum_LookupVendor(p, 231)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.Bytes(a)
	return
}

func QuintumTrunkidOut_LookupString(p *radius.Packet) (value string, err error) {
	a, ok := _Quintum_LookupVendor(p, 231)
	if !ok {
		err = radius.ErrNoAttribute
		return
	}
	value = radius.String(a)
	return
}

func QuintumTrunkidOut_Set(p *radius.Packet, value []byte) (err error) {
	var a radius.Attribute
	a, err = radius.NewBytes(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 231, a)
}

func QuintumTrunkidOut_SetString(p *radius.Packet, value string) (err error) {
	var a radius.Attribute
	a, err = radius.NewString(value)
	if err != nil {
		return
	}
	return _Quintum_SetVendor(p, 231, a)
}

func QuintumTrunkidOut_Del(p *radius.Packet) {
	_Quintum_DelVendor(p, 231)
}
